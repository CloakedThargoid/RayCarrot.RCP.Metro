//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RayCarrot.RCP.ArchiveExplorer {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RayCarrot.RCP.ArchiveExplorer.Localization.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accept.
        /// </summary>
        public static string Accept {
            get {
                return ResourceManager.GetString("Accept", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory = {0}
        ///Size = {1} x {2}
        ///File size = {3}
        ///Modified = {4}
        ///Encrypted = {5}
        ///Transparent = {6}
        ///Pointer = {7}.
        /// </summary>
        public static string Archive_CNT_FileInfo {
            get {
                return ResourceManager.GetString("Archive_CNT_FileInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred in the Archive Explorer and it had to close.
        /// </summary>
        public static string Archive_CriticalError {
            get {
                return ResourceManager.GetString("Archive_CriticalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export.
        /// </summary>
        public static string Archive_Export {
            get {
                return ResourceManager.GetString("Archive_Export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected directory already contains a directory with the same name as {0}.
        /// </summary>
        public static string Archive_ExportDirectoryConflict {
            get {
                return ResourceManager.GetString("Archive_ExportDirectoryConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} could not be exported.
        /// </summary>
        public static string Archive_ExportError {
            get {
                return ResourceManager.GetString("Archive_ExportError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The files have been exported.
        /// </summary>
        public static string Archive_ExportFilesSuccess {
            get {
                return ResourceManager.GetString("Archive_ExportFilesSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file have been exported.
        /// </summary>
        public static string Archive_ExportFileSuccess {
            get {
                return ResourceManager.GetString("Archive_ExportFileSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select destination to export to.
        /// </summary>
        public static string Archive_ExportHeader {
            get {
                return ResourceManager.GetString("Archive_ExportHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exporting {0}.
        /// </summary>
        public static string Archive_ExportingFileStatus {
            get {
                return ResourceManager.GetString("Archive_ExportingFileStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Extension Selection.
        /// </summary>
        public static string Archive_FileExtensionSelectionHeader {
            get {
                return ResourceManager.GetString("Archive_FileExtensionSelectionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select file extension to export as for {0} files.
        /// </summary>
        public static string Archive_FileExtensionSelectionInfoHeader {
            get {
                return ResourceManager.GetString("Archive_FileExtensionSelectionInfoHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supported files.
        /// </summary>
        public static string Archive_FileSelectionGroupName {
            get {
                return ResourceManager.GetString("Archive_FileSelectionGroupName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import.
        /// </summary>
        public static string Archive_Import {
            get {
                return ResourceManager.GetString("Archive_Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select directory to import.
        /// </summary>
        public static string Archive_ImportDirectoryHeader {
            get {
                return ResourceManager.GetString("Archive_ImportDirectoryHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} could not be imported.
        /// </summary>
        public static string Archive_ImportError {
            get {
                return ResourceManager.GetString("Archive_ImportError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some files failed to import.
        /// </summary>
        public static string Archive_ImportFailsError {
            get {
                return ResourceManager.GetString("Archive_ImportFailsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select file to import.
        /// </summary>
        public static string Archive_ImportFileHeader {
            get {
                return ResourceManager.GetString("Archive_ImportFileHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The files have been imported.
        /// </summary>
        public static string Archive_ImportFilesSuccess {
            get {
                return ResourceManager.GetString("Archive_ImportFilesSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file have been imported.
        /// </summary>
        public static string Archive_ImportFileSuccess {
            get {
                return ResourceManager.GetString("Archive_ImportFileSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Importing {0}.
        /// </summary>
        public static string Archive_ImportingFileStatus {
            get {
                return ResourceManager.GetString("Archive_ImportingFileStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No files were found to import.
        /// </summary>
        public static string Archive_ImportNoFilesError {
            get {
                return ResourceManager.GetString("Archive_ImportNoFilesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Repacking archive {0}.
        /// </summary>
        public static string Archive_RepackingStatus {
            get {
                return ResourceManager.GetString("Archive_RepackingStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Archive Explorer.
        /// </summary>
        public static string Archive_Title {
            get {
                return ResourceManager.GetString("Archive_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        public static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
    }
}
