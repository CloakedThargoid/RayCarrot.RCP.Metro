<UserControl x:Class="RayCarrot.RCP.Metro.Ray_M_Arena_3_Config"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:RayCarrot.RCP.Metro"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:rwpf="clr-namespace:RayCarrot.WPF;assembly=RayCarrot.WPF"
             xmlns:ray="clr-namespace:RayCarrot.Rayman;assembly=RayCarrot.Rayman"
             xmlns:ui="clr-namespace:RayCarrot.RCP.UI;assembly=RayCarrot.RCP.UI"
             ResxExtension.DefaultResxName="{x:Static local:AppViewModel.ResourcePath}"
             IsTabStop="False"
             mc:Ignorable="d"
             d:DesignWidth="800"
             d:DataContext="{d:DesignInstance local:RaymanMConfigViewModel}">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <ScrollViewer Grid.Row="0"
                      Padding="5">
            <StackPanel>
                <i:Interaction.Behaviors>
                    <rwpf:UnifiedMarginBehavior Margin="{StaticResource DefaultVerticalStackMargin}" />
                </i:Interaction.Behaviors>

                <TextBlock Style="{StaticResource HeaderTextBlock}"
                           Text="{Resx Config_Resolution}" />

                <StackPanel Orientation="Horizontal">
                    <mah:NumericUpDown Value="{Binding Path=ResX}"
                                       ToolTip="{Resx Config_ResolutionHorizontalInfo}"
                                       Minimum="1"
                                       Maximum="99999"
                                       IsEnabled="{Binding Path=LockToScreenRes, Converter={rwpf:InvertedBooleanConverter}}" />

                    <TextBlock Text="  x  "
                               VerticalAlignment="Center"
                               FontSize="14" />

                    <mah:NumericUpDown Value="{Binding Path=ResY}"
                                       ToolTip="{Resx Config_ResolutionVerticalInfo}"
                                       Minimum="1"
                                       Maximum="99999"
                                       IsEnabled="{Binding Path=LockToScreenRes, Converter={rwpf:InvertedBooleanConverter}}" />

                </StackPanel>

                <CheckBox Content="{Resx Config_LockRes}"
                          ToolTip="{Resx Config_LockResInfo}"
                          IsChecked="{Binding Path=LockToScreenRes}" />

                <CheckBox Content="{Resx Config_Fullscreen}"
                          ToolTip="{Resx Config_FullscreenInfo}"
                          IsChecked="{Binding Path=FullscreenMode}" />

                <TextBlock Style="{StaticResource HeaderTextBlock}"
                           Text="{Resx Config_Graphics}" />

                <CheckBox Content="{Resx Config_TriLinear}"
                          IsChecked="{Binding Path=TriLinear}" />

                <CheckBox Content="{Resx Config_TnL}"
                          ToolTip="{Resx Config_TnLInfo}"
                          IsChecked="{Binding Path=TnL}" />

                <Grid rwpf:UserLevelTag.MinUserLevel="Advanced"
                      rwpf:UnifiedMargin.Ignored="True">
                    <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                    <CheckBox Content="{Resx Config_DynamicShadows}"
                              IsChecked="{Binding Path=DynamicShadows}"
                              Visibility="{Binding Path=Game, Converter={rwpf:EnumVisibilityConverter}, ConverterParameter=Rayman3}"
                              Margin="0 8"/>
                </Grid>

                <Grid rwpf:UserLevelTag.MinUserLevel="Advanced"
                      rwpf:UnifiedMargin.Ignored="True">
                    <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                    <CheckBox Content="{Resx Config_StaticShadows}"
                              IsChecked="{Binding Path=StaticShadows}" 
                              Visibility="{Binding Path=Game, Converter={rwpf:EnumVisibilityConverter}, ConverterParameter=Rayman3}"
                              Margin="0 8"/>
                </Grid>

                <TextBlock Style="{StaticResource HeaderTextBlock}"
                           Text="{Resx Config_Textures}" />

                <StackPanel Orientation="Horizontal">
                    <RadioButton Content="{Resx Config_Textures16}"
                                 Margin="0 0 10 0"
                                 IsChecked="{Binding Path=IsTextures32Bit, Converter={rwpf:InvertedBooleanConverter}}"/>
                    <RadioButton Content="{Resx Config_Textures32}"
                                 IsChecked="{Binding Path=IsTextures32Bit}"/>
                </StackPanel>

                <CheckBox Content="{Resx Config_Compressed}"
                          IsChecked="{Binding Path=CompressedTextures}" />

                <TextBlock Style="{StaticResource HeaderTextBlock}"
                           Text="{Resx Config_Video}" />

                <StackPanel>

                    <Slider Maximum="4"
                            Value="{Binding Path=VideoQuality}"
                            TickPlacement="BottomRight"
                            IsSnapToTickEnabled="True"
                            Width="200"
                            HorizontalAlignment="Left"/>

                    <Grid Width="200" HorizontalAlignment="Left">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0"
                                   Text="{Resx Config_VideoGood}"
                                   TextWrapping="WrapWithOverflow"/>

                        <TextBlock Grid.Column="1"
                                   Text="{Resx Config_VideoBad}"
                                   TextWrapping="WrapWithOverflow"
                                   HorizontalAlignment="Right"/>

                    </Grid>

                </StackPanel>

                <CheckBox Content="{Resx Config_VideoAuto}"
                          IsChecked="{Binding Path=AutoVideoQuality}" />

                <StackPanel Orientation="Horizontal">

                    <RadioButton Content="{Resx Config_Video16Bpp}"
                                 Margin="0 0 10 0"
                                 IsChecked="{Binding Path=IsVideo32Bpp, Converter={rwpf:InvertedBooleanConverter}}"/>

                    <RadioButton Content="{Resx Config_Video32Bpp}"
                                 IsChecked="{Binding Path=IsVideo32Bpp}"/>

                </StackPanel>

                <TextBlock Style="{StaticResource HeaderTextBlock}"
                           Text="{Resx Config_Language}" />

                <ComboBox SelectedIndex="{Binding Path=CurrentLanguage, Converter={rwpf:EnumToIntConverter}}"
                          HorizontalAlignment="Left">
                    <ComboBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                            <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                            <Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource Self}, Path=Content.Visibility}" />
                        </Style>
                    </ComboBox.ItemContainerStyle>
                    <TextBlock Text="{Resx Lang_English}" />
                    <TextBlock Text="{Resx Lang_French}" />
                    <TextBlock Text="{Resx Lang_Spanish}" />
                    <TextBlock Text="{Resx Lang_German}" Visibility="{Binding Path=CurrentLanguage, Converter={rwpf:IsNotTypeToVisibilityConverter}, ConverterParameter={x:Type ray:RALanguages}}" />
                    <TextBlock Text="{Resx Lang_Italian}" Visibility="{Binding Path=CurrentLanguage, Converter={rwpf:IsNotTypeToVisibilityConverter}, ConverterParameter={x:Type ray:RALanguages}}" />
                    <TextBlock Text="{Resx Lang_Danish}" Visibility="{Binding Path=CurrentLanguage, Converter={rwpf:IsTypeToVisibilityConverter}, ConverterParameter={x:Type ray:RMLanguages}}" />
                    <TextBlock Text="{Resx Lang_Finnish}" Visibility="{Binding Path=CurrentLanguage, Converter={rwpf:IsTypeToVisibilityConverter}, ConverterParameter={x:Type ray:RMLanguages}}" />
                    <TextBlock Text="{Resx Lang_Norwegian}" Visibility="{Binding Path=CurrentLanguage, Converter={rwpf:IsTypeToVisibilityConverter}, ConverterParameter={x:Type ray:RMLanguages}}" />
                    <TextBlock Text="{Resx Lang_Swedish}" Visibility="{Binding Path=CurrentLanguage, Converter={rwpf:IsTypeToVisibilityConverter}, ConverterParameter={x:Type ray:RMLanguages}}" />
                </ComboBox>

                <StackPanel Orientation="Horizontal">

                    <TextBlock Style="{StaticResource HeaderTextBlock}"
                               Text="{Resx Config_Controller}" />

                    <ui:InfoIcon Text="{Resx Config_ControllerInfo}" />

                </StackPanel>

                <StackPanel Orientation="Horizontal">

                    <local:AdminButton Visibility="{Binding Path=CanModifyGame, Converter={rwpf:InvertedBooleanToVisibilityConverter}, Mode=OneTime}"
                                       Margin="0 0 5 0" />

                    <CheckBox Content="{Resx Config_EnableNativeController}"
                              IsChecked="{Binding Path=ControllerSupport}"
                              IsEnabled="{Binding Path=CanModifyGame, Mode=OneTime}"/>

                </StackPanel>

                <TextBlock Text="{Resx Config_ControllerVertical}" 
                           Visibility="{Binding Path=Game, Converter={rwpf:EnumVisibilityConverter}, ConverterParameter=Rayman3}"/>

                <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                <Slider Minimum="2"
                        Maximum="7"
                        Value="{Binding Path=VerticalAxis}"
                        TickPlacement="BottomRight"
                        IsSnapToTickEnabled="True"
                        Width="200"
                        HorizontalAlignment="Left"
                        Visibility="{Binding Path=Game, Converter={rwpf:EnumVisibilityConverter}, ConverterParameter=Rayman3}"/>

                <TextBlock Text="{Resx Config_ControllerHorizontal}"
                           Visibility="{Binding Path=Game, Converter={rwpf:EnumVisibilityConverter}, ConverterParameter=Rayman3}" />

                <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                <Slider Minimum="2"
                        Maximum="7"
                        Value="{Binding Path=HorizontalAxis}"
                        TickPlacement="BottomRight"
                        IsSnapToTickEnabled="True"
                        Width="200"
                        HorizontalAlignment="Left"
                        Visibility="{Binding Path=Game, Converter={rwpf:EnumVisibilityConverter}, ConverterParameter=Rayman3}"/>

                <TextBlock Style="{StaticResource HeaderTextBlock}"
                           Text="{Resx Config_Network}"
                           Visibility="{Binding Path=Game, Converter={rwpf:EnumVisibilityConverter}, ConverterParameter=RaymanArena}"/>

                <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                <ComboBox ItemsSource="{Binding Path=ModemQualityOptions, Mode=OneTime}"
                          SelectedIndex="{Binding Path=ModemQualityIndex}"
                          HorizontalAlignment="Left"
                          Visibility="{Binding Path=Game, Converter={rwpf:EnumVisibilityConverter}, ConverterParameter=RaymanArena}" />

                <StackPanel Orientation="Horizontal"
                            Visibility="{Binding Path=CanRemoveDiscCheck, Converter={rwpf:BooleanToVisibilityConverter}}">

                    <TextBlock Style="{StaticResource HeaderTextBlock}"
                               Text="{Resx Config_DiscCheck}"/>

                    <ui:InfoIcon Text="{Resx Config_DiscCheckInfo}" />

                </StackPanel>

                <StackPanel Orientation="Horizontal"
                            Visibility="{Binding Path=CanRemoveDiscCheck, Converter={rwpf:BooleanToVisibilityConverter}}">

                    <local:AdminButton Visibility="{Binding Path=CanModifyGame, Converter={rwpf:InvertedBooleanToVisibilityConverter}, Mode=OneTime}"
                                       Margin="0 0 5 0" />

                    <CheckBox Content="{Resx Config_DisableDiscCheck}"
                              IsChecked="{Binding Path=IsDiscCheckRemoved}"
                              IsEnabled="{Binding Path=CanModifyGame, Mode=OneTime}"/>

                </StackPanel>

            </StackPanel>
        </ScrollViewer>

        <StackPanel Grid.Row="1"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right">

            <Button Content="{Resx Cancel}"
                    Margin="0 0 10 0"
                    IsCancel="True"
                    Click="ButtonBase_OnClick" />

            <Button Content="{Resx Save}"
                    IsEnabled="{Binding Path=UnsavedChanges}"
                    Command="{Binding Path=SaveCommand}" />

        </StackPanel>

    </Grid>
</UserControl>