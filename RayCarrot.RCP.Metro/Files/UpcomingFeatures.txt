--- Utilities ---
- Separate utilities in code so they do not share the same view models. Abstract it by having methods which return a collection of utilities, all defined by an interface. Allow utilities to be loaded as plugins could be done using this through .dll files.

- Rayman Legends debug commands (Uplay version only)

- Add support for more utilities (R2 texture extract, .sna import/export etc.) - since these require additional executable due to a lack of public source code they will be downloaded to the Utilities folder from the server (similarly to TPLS).


--- Games ---
- Add support for educational games. Treat as a single game, with games in drop-down added by user.

- Add support for first mounting a specific disc image before launching a Win32 or DOSBox game


--- Configuration ---
- Add the remaining fields to the Rayman 2 configuration and have pre-sets for DirectX/nGlide based on the GOG setup

- Allow DOSBox games to change language by editing the .bat file (does not work for Rayman 1)


--- User Interface ---
- Localize updater and pass in culture info

- Localize RayCarrot.WPF controls

- Localize the uninstaller

- Localize the admin worker


--- Other ---
- Create two core .NET Standard projects. One which is the minimum core (common app paths, user data model etc.) which updater/uninstaller references. The other one holds all non-UI logic, such as view models. NOTE: This will mess up the current localization system due to it all being in one file. Might need to be split up.

- Move program over from .NET Framework to .NET Core 3.0 when it releases. Do the same for control libraries. There might still be .NET Framework dependencies from 3-party ones?

- Remove the legacy converter (converts app data from 2.x to 3.x)