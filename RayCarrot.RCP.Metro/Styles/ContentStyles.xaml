<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:RayCarrot.RCP.Metro"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:rwpf="clr-namespace:RayCarrot.WPF;assembly=RayCarrot.WPF">

    <!-- Tab item with a margin -->

    <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentPresenter Content="{Binding}"
                                      Margin="5 2"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Tab control with underline -->

    <Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource {x:Type TabControl}}">
        <Setter Property="mah:TabControlHelper.Underlined" Value="TabPanel" />
    </Style>

    <!-- Expander without background and larger font -->

    <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource {x:Type Expander}}">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
        <Setter Property="IsExpanded" Value="True" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentPresenter Content="{Binding}"
                                      TextElement.FontSize="20"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Scroll viewer with auto vertical scroll bar visibility -->

    <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource {x:Type ScrollViewer}}">
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    </Style>

    <!-- Default toggle switch -->

    <Style TargetType="{x:Type mah:ToggleSwitch}" BasedOn="{StaticResource MahApps.Metro.Styles.ToggleSwitch.Win10}" />

    <!-- Default radio button extended -->

    <Style TargetType="{x:Type rwpf:RadioButtonExtended}" BasedOn="{StaticResource {x:Type RadioButton}}" />

    <!-- Default multi data grid -->

    <Style TargetType="{x:Type rwpf:MultiDataGrid}" BasedOn="{StaticResource {x:Type DataGrid}}" />

    <!-- Default NumericUpDown -->

    <Style TargetType="{x:Type mah:NumericUpDown}" BasedOn="{StaticResource {x:Type mah:NumericUpDown}}">
        <Setter Property="HideUpDownButtons" Value="True" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="MinWidth" Value="50" />
        <Setter Property="NumericInputMode" Value="Numbers" />
    </Style>

    <!-- Utility Download Info Icon -->

    <Style x:Key="AdditionalFilesRequired" TargetType="{x:Type local:InfoIcon}">
        <Setter Property="IconKind" Value="CloudDownload" />
    </Style>

    <!-- Default duo grid item -->

    <Style TargetType="{x:Type local:DuoGridItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DuoGridItem}">
                    <Grid rwpf:UserLevelTag.MinUserLevel="{TemplateBinding Property=MinUserLevel}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="A" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0"
                                   Text="{TemplateBinding Property=Header, Converter={local:AppendSpacesToStringConverter}}"
                                   FontWeight="Bold" />

                        <TextBlock Grid.Column="1"
                                   Text="{TemplateBinding Property=Text}"
                                   TextWrapping="Wrap" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>