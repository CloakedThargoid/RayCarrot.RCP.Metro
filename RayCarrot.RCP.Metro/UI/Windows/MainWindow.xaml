<local:BaseWindow x:Class="RayCarrot.RCP.Metro.MainWindow"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                  xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:tb="http://www.hardcodet.net/taskbar"
                  xmlns:local="clr-namespace:RayCarrot.RCP.Metro"
                  xmlns:behaviours="http://metro.mahapps.com/winfx/xaml/shared"
                  mc:Ignorable="d"
                  Language="{UICulture}"
                  ResxExtension.DefaultResxName="{x:Static local:LocalizationManager.ResourcePath}"
                  CloseWithEscape="False"
                  Height="720"
                  Width="960"
                  DataContext="{x:Static local:RCPServices.App}">
    <Window.Resources>
        <local:TaskbarIconViewModel x:Key="TaskbarIconViewModel" />
    </Window.Resources>
    <local:BaseWindow.TitleTemplate>
        <DataTemplate>
            <Grid DataContext="{x:Static local:RCPServices.App}">
                <Grid.Resources>
                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                        <Setter Property="Margin" Value="8 -1 1 0" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="FontFamily" Value="{DynamicResource HeaderFontFamily}" />
                        <Setter Property="FontSize" Value="{DynamicResource WindowTitleFontSize}" />
                        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                    </Style>
                </Grid.Resources>

                <TextBlock Visibility="{Binding Path=IsRunningAsAdmin, Converter={local:InvertedBooleanToVisibilityConverter}}"
                           Text="{Resx AppName}" />

                <TextBlock Visibility="{Binding Path=IsRunningAsAdmin, Converter={local:BooleanToVisibilityConverter}}"
                           Text="{Resx AppNameAdmin}" />
            </Grid>
        </DataTemplate>
    </local:BaseWindow.TitleTemplate>
    <mah:MetroWindow.RightWindowCommands>
        <mah:WindowCommands>
            <Button DataContext="{StaticResource TaskbarIconViewModel}"
                    Command="{Binding Path=MinimizeToTaskbarCommand}"
                    ToolTip="{Resx Window_MinimizeToTray}">
                <iconPacks:PackIconMaterial Kind="ArrowDownBoldBoxOutline" />
            </Button>
        </mah:WindowCommands>
    </mah:MetroWindow.RightWindowCommands>
    <Grid>
        <tb:TaskbarIcon DataContext="{StaticResource TaskbarIconViewModel}"
                        IconSource="pack://application:,,,/RayCarrot.RCP.Metro;component/Img/RCP_Metro.ico"
                        ToolTipText="{Resx AppName}"
                        LeftClickCommand="{Binding Path=OpenFromTaskbarCommand}"
                        Visibility="{Binding Path=IsIconVisible, Converter={local:BooleanToVisibilityConverter}}">

            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu Padding="5"
                             ResxExtension.DefaultResxName="{x:Static local:LocalizationManager.ResourcePath}">
                    <MenuItem Header="{Resx TaskBarIcon_Open}"
                              Command="{Binding Path=OpenFromTaskbarCommand}">
                        <MenuItem.Icon>
                            <iconPacks:PackIconMaterial Kind="OpenInApp" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{Resx TaskBarIcon_Close}"
                              Command="{Binding Path=CloseApplicationCommand}">
                        <MenuItem.Icon>
                            <iconPacks:PackIconMaterial Kind="CloseOutline" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>

        <mah:MetroAnimatedTabControl x:Name="PageTabControl"
                                     ItemContainerStyle="{StaticResource TabItem.Large}"
                                     Padding="5">
            <!-- Override the style to use the overflow menu -->
            <mah:MetroAnimatedTabControl.Style>
                <Style TargetType="{x:Type mah:MetroAnimatedTabControl}" BasedOn="{StaticResource {x:Type mah:MetroAnimatedTabControl}}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type mah:MetroAnimatedTabControl}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="ColumnDefinition0" />
                                        <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                                        <RowDefinition x:Name="RowDefinition1" Height="*" />
                                    </Grid.RowDefinitions>

                                    <Grid x:Name="HeaderPanelGrid"
                                          Grid.Row="0"
                                          Grid.Column="0"
                                          Margin="{TemplateBinding TabStripMargin}"
                                          Panel.ZIndex="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <mah:Underline x:Name="Underline"
                                                       Grid.Column="0"
                                                       Background="Transparent"
                                                       BorderBrush="{TemplateBinding mah:TabControlHelper.UnderlineBrush}"
                                                       LineThickness="1"
                                                       Placement="Bottom"
                                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                       Visibility="Collapsed" />

                                        <TabPanel x:Name="HeaderPanel"
                                                  Grid.Column="0"
                                                  IsItemsHost="true"
                                                  KeyboardNavigation.TabIndex="1" />

                                        <local:OverflowMenu Grid.Column="2"
                                                            InheritDataContext="False"
                                                            DataContext="{Binding ElementName=PageTabControl, Path=SelectedItem.(ContentControl.Content).(local:IBasePage.OverflowMenu)}"
                                                            Visibility="{Binding Converter={local:InvertedObjectNullToVisibilityHiddenConverter}}"
                                                            ContextMenu="{Binding}"
                                                            Margin="10"/>

                                    </Grid>

                                    <Border x:Name="ContentPanel"
                                            Grid.Row="1"
                                            Grid.Column="0"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            ClipToBounds="{TemplateBinding ClipToBounds}"
                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                            KeyboardNavigation.TabIndex="2"
                                            KeyboardNavigation.TabNavigation="Local"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        <mah:TransitioningContentControl behaviours:ReloadBehavior.OnSelectedTabChanged="True"
                                                                           RestartTransitionOnContentChange="True"
                                                                           Transition="{TemplateBinding mah:TabControlHelper.Transition}"
                                                                           UseLayoutRounding="True">
                                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                                              Margin="{TemplateBinding Padding}"
                                                              ContentSource="SelectedContent"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                              UseLayoutRounding="False" />
                                        </mah:TransitioningContentControl>
                                    </Border>
                                </Grid>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="mah:TabControlHelper.Underlined" Value="TabPanel">
                                        <Setter TargetName="Underline" Property="Visibility" Value="Visible" />
                                    </Trigger>
                                    <Trigger Property="TabStripPlacement" Value="Bottom">
                                        <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                        <Setter TargetName="HeaderPanelGrid" Property="Grid.Row" Value="1" />
                                        <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                        <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                                        <Setter TargetName="Underline" Property="Placement" Value="Top" />
                                    </Trigger>
                                    <Trigger Property="TabStripPlacement" Value="Left">
                                        <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                                        <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                                        <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                                        <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                        <Setter TargetName="HeaderPanelGrid" Property="Grid.Column" Value="0" />
                                        <Setter TargetName="HeaderPanelGrid" Property="Grid.Row" Value="0" />
                                        <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                        <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                                        <Setter TargetName="Underline" Property="Placement" Value="Right" />
                                    </Trigger>
                                    <Trigger Property="TabStripPlacement" Value="Right">
                                        <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                                        <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                                        <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                                        <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                        <Setter TargetName="HeaderPanelGrid" Property="Grid.Column" Value="1" />
                                        <Setter TargetName="HeaderPanelGrid" Property="Grid.Row" Value="0" />
                                        <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                        <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                                        <Setter TargetName="Underline" Property="Placement" Value="Left" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>

                        </Setter.Value>
                    </Setter>
                </Style>
            </mah:MetroAnimatedTabControl.Style>

            <!-- Games -->

            <TabItem Header="{Resx GamesPageHeader}"
                     local:TabItem.IconKind="{StaticResource Icons.Games}"
                     local:TabItem.IconForeground="{StaticResource Colors.Games}"
                     IsSelected="{Binding Path=SelectedPage, Converter={local:EnumBooleanConverter}, ConverterParameter=Games}">
                <local:Page_Games_UI />
            </TabItem>

            <!-- Backup/Restore -->

            <TabItem x:Name="BackupPageTab"  
                     Header="{Resx BackupPageHeader}"
                     local:TabItem.IconKind="{StaticResource Icons.Backup}"
                     local:TabItem.IconForeground="{StaticResource Colors.Progression}"
                     IsSelected="{Binding Path=SelectedPage, Converter={local:EnumBooleanConverter}, ConverterParameter=BackupRestore}">
                <local:Page_Backup_UI />
            </TabItem>

            <!-- Utilities -->

            <TabItem Header="{Resx UtilitiesPageHeader}"
                     local:TabItem.IconKind="{StaticResource Icons.Utilities}"
                     local:TabItem.IconForeground="{StaticResource Colors.Utilities}"
                     IsSelected="{Binding Path=SelectedPage, Converter={local:EnumBooleanConverter}, ConverterParameter=Utilities}">
                <local:Page_Utilities_UI />
            </TabItem>

            <!-- Mods -->

            <TabItem Header="{Resx ModsPageHeader}"
                     local:TabItem.IconKind="{StaticResource Icons.Mods}"
                     local:TabItem.IconForeground="{StaticResource Colors.Mods}"
                     IsSelected="{Binding Path=SelectedPage, Converter={local:EnumBooleanConverter}, ConverterParameter=Mods}">
                <local:Page_Mods_UI />
            </TabItem>

            <!-- Settings -->

            <TabItem Header="{Resx SettingsPageHeader}"
                     local:TabItem.IconKind="{StaticResource Icons.Settings}"
                     local:TabItem.IconForeground="{StaticResource Colors.Settings}"
                     IsSelected="{Binding Path=SelectedPage, Converter={local:EnumBooleanConverter}, ConverterParameter=Settings}">
                <local:Page_Settings_UI />
            </TabItem>

            <!-- Help -->

            <TabItem Header="{Resx HelpPageHeader}"
                     local:TabItem.IconKind="{StaticResource Icons.Help}"
                     local:TabItem.IconForeground="{StaticResource Colors.Help}"
                     IsSelected="{Binding Path=SelectedPage, Converter={local:EnumBooleanConverter}, ConverterParameter=Help}">
                <local:Page_Help_UI />

            </TabItem>

            <!-- About -->

            <TabItem Header="{Resx AboutPageHeader}"
                     local:TabItem.IconKind="{StaticResource Icons.Info}"
                     local:TabItem.IconForeground="{StaticResource Colors.Info}"
                     IsSelected="{Binding Path=SelectedPage, Converter={local:EnumBooleanConverter}, ConverterParameter=About}">
                <local:Page_About_UI />
            </TabItem>

            <!-- Debug -->

            <TabItem Header="{Resx DebugPageHeader}"
                     local:TabItem.IconKind="{StaticResource Icons.Debug}"
                     local:TabItem.IconForeground="{StaticResource Colors.Debug}"
                     IsSelected="{Binding Path=SelectedPage, Converter={local:EnumBooleanConverter}, ConverterParameter=Debug}"
                     local:UserLevelTag.MinUserLevel="Debug">
                <local:Page_Debug_UI />
            </TabItem>

        </mah:MetroAnimatedTabControl>

        <mah:ProgressRing HorizontalAlignment="Right"
                          VerticalAlignment="Bottom"
                          Margin="5"
                          Visibility="{Binding Path=IsStartupRunning, Converter={local:BooleanToVisibilityConverter}}" />

    </Grid>
</local:BaseWindow>