<local:BaseWindow x:Class="RayCarrot.RCP.Metro.MainWindow"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
                  xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:tb="http://www.hardcodet.net/taskbar"
                  xmlns:local="clr-namespace:RayCarrot.RCP.Metro"
                  xmlns:rwpf="clr-namespace:RayCarrot.WPF;assembly=RayCarrot.WPF"
                  mc:Ignorable="d"
               Language="{UICulture}"
               ResxExtension.DefaultResxName="{StaticResource ResourcePath}"
               CloseWithEscape="False"
               Height="680"
               Width="950"
               DataContext="{x:Static local:RCFRCP.App}">
    <Window.Resources>
        <local:TaskbarIconViewModel x:Key="TaskbarIconViewModel" />
    </Window.Resources>
    <local:BaseWindow.TitleTemplate>
        <DataTemplate>
            <Grid DataContext="{x:Static local:RCFRCP.App}">
                <Grid.Resources>
                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                        <Setter Property="Margin" Value="8 -1 1 0" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="FontFamily" Value="{DynamicResource HeaderFontFamily}" />
                        <Setter Property="FontSize" Value="{DynamicResource WindowTitleFontSize}" />
                        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                    </Style>
                </Grid.Resources>

                <TextBlock Visibility="{Binding Path=IsRunningAsAdmin, Converter={rwpf:InvertedBooleanToVisibilityConverter}}"
                           Text="{Resx AppName}" />

                <TextBlock Visibility="{Binding Path=IsRunningAsAdmin, Converter={rwpf:BooleanToVisibilityConverter}}"
                           Text="{Resx AppNameAdmin}" />
            </Grid>
        </DataTemplate>
    </local:BaseWindow.TitleTemplate>
    <metro:MetroWindow.RightWindowCommands>
        <metro:WindowCommands>
            <Button DataContext="{StaticResource TaskbarIconViewModel}"
                    Command="{Binding Path=MinimizeToTaskbarCommand}"
                    ToolTip="{Resx Window_MinimizeToTray}">
                <iconPacks:PackIconMaterial Kind="ArrowDownBoldBoxOutline" />
            </Button>
        </metro:WindowCommands>
    </metro:MetroWindow.RightWindowCommands>
    <Grid>
        <tb:TaskbarIcon DataContext="{StaticResource TaskbarIconViewModel}"
                        IconSource="pack://application:,,,/RayCarrot.RCP.Metro;component/Img/RCP_Metro.ico"
                        ToolTipText="{Resx AppName}"
                        LeftClickCommand="{Binding Path=OpenFromTaskbarCommand}"
                        Visibility="{Binding Path=IsIconVisible, Converter={rwpf:BooleanToVisibilityConverter}}">

            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu Padding="5"
                             ResxExtension.DefaultResxName="{StaticResource ResourcePath}">
                    <MenuItem Header="{Resx TaskBarIcon_Open}"
                              Command="{Binding Path=OpenFromTaskbarCommand}">
                        <MenuItem.Icon>
                            <iconPacks:PackIconMaterial Kind="OpenInApp" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{Resx TaskBarIcon_Close}"
                              Command="{Binding Path=CloseApplicationCommand}">
                        <MenuItem.Icon>
                            <iconPacks:PackIconMaterial Kind="CloseOutline" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>

        <local:MainRCPTabControl x:Name="PageTabControl"
                                Padding="5">
            <!-- Games -->

            <TabItem IsSelected="{Binding Path=SelectedPage, Converter={rwpf:EnumBooleanConverter}, ConverterParameter=Games}">
                <TabItem.HeaderTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal"
                                    Background="Transparent">
                            <Image Margin="10 2 10 0"
                                   Width="16"
                                   Height="20"
                                   RenderOptions.BitmapScalingMode="NearestNeighbor"
                                   VerticalAlignment="Center">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Style.Triggers>

                                            <!-- Dark/Light - Selected - Mouse over -->

                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}}" Value="True"  />
                                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type StackPanel}}}" Value="True"  />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Source" Value="pack://application:,,,/RayCarrot.RCP.Metro;component/Img/RayIcons/DarkLightSH.png" />
                                            </MultiDataTrigger>

                                            <!-- Dark - Not selected - Mouse over -->

                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}}" Value="False"  />
                                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type StackPanel}}}" Value="True"  />
                                                    <Condition Binding="{Binding Path=DataContext.Data.DarkMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Source" Value="pack://application:,,,/RayCarrot.RCP.Metro;component/Img/RayIcons/DarkNSH.png" />
                                            </MultiDataTrigger>

                                            <!-- Dark - Not selected - No mouse over -->

                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}}" Value="False"  />
                                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type StackPanel}}}" Value="False"  />
                                                    <Condition Binding="{Binding Path=DataContext.Data.DarkMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Source" Value="pack://application:,,,/RayCarrot.RCP.Metro;component/Img/RayIcons/DarkNSNH.png" />
                                            </MultiDataTrigger>

                                            <!-- Dark - Selected - No mouse over -->

                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}}" Value="True"  />
                                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type StackPanel}}}" Value="False"  />
                                                    <Condition Binding="{Binding Path=DataContext.Data.DarkMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Source" Value="pack://application:,,,/RayCarrot.RCP.Metro;component/Img/RayIcons/DarkSNH.png" />
                                            </MultiDataTrigger>

                                            <!-- Light - Not selected - Mouse over -->

                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}}" Value="False"  />
                                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type StackPanel}}}" Value="True"  />
                                                    <Condition Binding="{Binding Path=DataContext.Data.DarkMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Source" Value="pack://application:,,,/RayCarrot.RCP.Metro;component/Img/RayIcons/LightNSH.png" />
                                            </MultiDataTrigger>

                                            <!-- Light - Not selected - No mouse over -->

                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}}" Value="False"  />
                                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type StackPanel}}}" Value="False"  />
                                                    <Condition Binding="{Binding Path=DataContext.Data.DarkMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Source" Value="pack://application:,,,/RayCarrot.RCP.Metro;component/Img/RayIcons/LightNSNH.png" />
                                            </MultiDataTrigger>

                                            <!-- Light - Selected - No mouse over -->

                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}}" Value="True"  />
                                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type StackPanel}}}" Value="False"  />
                                                    <Condition Binding="{Binding Path=DataContext.Data.DarkMode, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Source" Value="pack://application:,,,/RayCarrot.RCP.Metro;component/Img/RayIcons/LightSNH.png" />
                                            </MultiDataTrigger>

                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>

                            <TextBlock Text="{Resx GamesPageHeader}"
                                       FontSize="24"
                                       VerticalAlignment="Center"/>

                        </StackPanel>
                    </DataTemplate>
                </TabItem.HeaderTemplate>
                <local:GamesPage />
            </TabItem>

            <!-- Backup/Restore -->

            <local:RCPTabItem Header="{Resx BackupPageHeader}"
                             Loaded="BackupPage_Loaded"
                             IconKind="BackupRestore"
                             IsSelected="{Binding Path=SelectedPage, Converter={rwpf:EnumBooleanConverter}, ConverterParameter=BackupRestore}">
                <local:BackupPage />
            </local:RCPTabItem>

            <!-- Links -->

            <local:RCPTabItem Header="{Resx LinksPageHeader}"
                             IconKind="Link"
                             IsSelected="{Binding Path=SelectedPage, Converter={rwpf:EnumBooleanConverter}, ConverterParameter=Links}">
                <local:LinksPage />
            </local:RCPTabItem>

            <!-- Settings -->

            <local:RCPTabItem Header="{Resx SettingsPageHeader}"
                              IconKind="SettingsOutline"
                              IsSelected="{Binding Path=SelectedPage, Converter={rwpf:EnumBooleanConverter}, ConverterParameter=Settings}">
                <local:SettingsPage />
            </local:RCPTabItem>

            <!-- Help -->

            <local:RCPTabItem Header="{Resx HelpPageHeader}"
                              IconKind="HelpCircleOutline"
                              IsSelected="{Binding Path=SelectedPage, Converter={rwpf:EnumBooleanConverter}, ConverterParameter=Help}">
                <local:HelpPage />

            </local:RCPTabItem>

            <!-- About -->

            <local:RCPTabItem Header="{Resx AboutPageHeader}"
                              IconKind="InformationOutline"
                              IsSelected="{Binding Path=SelectedPage, Converter={rwpf:EnumBooleanConverter}, ConverterParameter=About}">
                <local:AboutPage />
            </local:RCPTabItem>

            <!-- Debug -->

            <local:RCPTabItem Header="{Resx DebugPageHeader}"
                              IconKind="CodeBraces"
                              IsSelected="{Binding Path=SelectedPage, Converter={rwpf:EnumBooleanConverter}, ConverterParameter=Debug}"
                              rwpf:UserLevelTag.MinUserLevel="Debug">
                <local:DebugPage />
            </local:RCPTabItem>

        </local:MainRCPTabControl>

        <metro:ProgressRing HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            Margin="5"
                            Visibility="{Binding Path=IsStartupRunning, Converter={rwpf:BooleanToVisibilityConverter}}" />

    </Grid>
</local:BaseWindow>
