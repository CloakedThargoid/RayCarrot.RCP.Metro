<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:RayCarrot.RCP.Metro"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:rwpf="clr-namespace:RayCarrot.WPF;assembly=RayCarrot.WPF"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:editors="http://wpfcontrols.com/">

    <!-- Default radio button -->

    <Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource MahApps.Styles.RadioButton.Win10}">
        <Setter Property="MinWidth" Value="10" />
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <!-- Default check box -->

    <!--<Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource MahApps.Styles.CheckBox.Win10}">
        <Setter Property="MinWidth" Value="10" />
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>-->

    <!-- Tab control with underline -->

    <Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource {x:Type TabControl}}">
        <Setter Property="mah:TabControlHelper.Underlined" Value="TabPanel" />
    </Style>

    <!-- Expander without background and larger font -->

    <Style TargetType="{x:Type Expander}" BasedOn="{StaticResource {x:Type Expander}}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Control.Background}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Normal"/>
        <Setter Property="IsExpanded" Value="True" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentPresenter Content="{Binding}"
                                      TextElement.FontSize="20"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- List Box with Radio Buttons -->

    <Style x:Key="ListBoxWithRadioButtons" TargetType="{x:Type ListBox}" BasedOn="{StaticResource {x:Type ListBox}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border x:Name="Border"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            CornerRadius="2">
                        <ScrollViewer Margin="0" Focusable="false">
                            <StackPanel Margin="2" IsItemsHost="True" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="Transparent" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}" >
                    <Setter Property="Margin" Value="2" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border Background="Transparent">
                                    <RadioButton Focusable="False" IsHitTestVisible="False" IsChecked="{TemplateBinding IsSelected}">
                                        <ContentPresenter />
                                    </RadioButton>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Default Animated Tab Control -->

    <Style TargetType="{x:Type mah:MetroAnimatedTabControl}" BasedOn="{StaticResource {x:Type mah:MetroAnimatedTabControl}}">
        <Setter Property="mah:TabControlHelper.Transition" Value="{Binding Source={x:Static local:RCPServices.Data}, Path=EnableAnimations, Converter={local:BooleanToTransitionTypeConverter}}" />
        <Setter Property="mah:TabControlHelper.Underlined" Value="TabItems" />
    </Style>

    <!-- Default tab item -->

    <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="local:TabItemProperties.HeaderFontSize" Value="16" />
        <Setter Property="local:TabItemProperties.IconForeground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="mah:TabControlHelper.UnderlineSelectedBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="mah:TabControlHelper.UnderlineBrush" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="mah:TabControlHelper.UnderlineMouseOverBrush" Value="{DynamicResource MahApps.Brushes.Gray.MouseOver}" />
        <Setter Property="mah:TabControlHelper.UnderlineMouseOverSelectedBrush" Value="{DynamicResource MahApps.Brushes.Highlight}" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal"
                                Margin="8 2"
                                DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}}">

                        <iconPacks:PackIconMaterial Kind="{Binding Path=(local:TabItemProperties.IconKind)}"
                                                    Foreground="{Binding Path=(local:TabItemProperties.IconForeground)}"
                                                    Margin="0 0 7 0"
                                                    VerticalAlignment="Center"
                                                    Visibility="{Binding Path=(local:TabItemProperties.IconVisibility)}" />

                        <ContentControl x:Name="TabItemHeaderContent" 
                                        ContentStringFormat="{Binding Path=HeaderStringFormat}" 
                                        FontSize="{Binding Path=(local:TabItemProperties.HeaderFontSize)}"
                                        Content="{Binding Path=Header}"
                                        VerticalAlignment="Center">

                            <ContentControl.Style>
                                <Style TargetType="{x:Type ContentControl}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                                            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="False">
                                            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                                        </DataTrigger>

                                        <!-- Need to find ancestor for the mouse over to get the border containing the tab header 
                                             and underline: https://github.com/MahApps/MahApps.Metro/blob/develop/src/MahApps.Metro/Styles/Controls.TabControl.xaml#L119 -->
                                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}}" Value="True">
                                            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray.MouseOver}" />
                                        </DataTrigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}}" Value="True" />
                                                <Condition Binding="{Binding Path=IsSelected}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Highlight}" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>

                        </ContentControl>

                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Large Tab Item -->

    <Style x:Key="LargeTabItem" TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
        <Setter Property="local:TabItemProperties.HeaderFontSize" Value="24" />
    </Style>

    <!-- Default Menu Item Icon -->

    <Style TargetType="{x:Type local:MenuItemIcon}" BasedOn="{StaticResource {x:Type MenuItem}}">
        <Setter Property="IconForeground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Foreground}" />
    </Style>

    <!-- Default Button -->

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Normal" />
    </Style>

    <!-- Flat Button -->

    <Style x:Key="FlatButton" TargetType="{x:Type Button}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Highlight}" />
            </Trigger>
        </Style.Triggers>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentControl Background="{TemplateBinding Background}"
                                    Foreground="{TemplateBinding Foreground}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Default Tab Panel -->

    <Style TargetType="{x:Type TabPanel}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0 5 0 10" />
    </Style>

    <!-- Default NumericUpDown -->

    <Style TargetType="{x:Type mah:NumericUpDown}" BasedOn="{StaticResource {x:Type mah:NumericUpDown}}">
        <Setter Property="HideUpDownButtons" Value="True" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="MinWidth" Value="50" />
        <Setter Property="NumericInputMode" Value="Numbers" />
    </Style>

    <!-- Default duo grid item -->

    <Style TargetType="{x:Type local:DuoGridItem}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DuoGridItem}">
                    <Grid rwpf:UserLevelTag.MinUserLevel="{TemplateBinding Property=MinUserLevel}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"
                                              SharedSizeGroup="A" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0"
                                   Text="{TemplateBinding Property=Header, Converter={local:AppendSpacesToStringConverter}}"
                                   FontWeight="Bold" />

                        <TextBlock Grid.Column="1"
                                   Text="{TemplateBinding Property=Text}"
                                   TextWrapping="Wrap" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Default Browse Box -->

    <Style TargetType="{x:Type rwpf:BrowseBox}" BasedOn="{StaticResource {x:Type rwpf:BrowseBox}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type rwpf:BrowseBox}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            ResxExtension.DefaultResxName="{StaticResource ResourcePath}">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!-- Text Box -->

                            <TextBox TextWrapping="Wrap" AcceptsReturn="False"
                                     MinWidth="100"
                                     HorizontalAlignment="Stretch"
                                     mah:TextBoxHelper.Watermark="{TemplateBinding mah:TextBoxHelper.Watermark}">

                                <TextBox.Resources>
                                    <rwpf:BindingProxy x:Key="proxy" Data="{Binding RelativeSource={RelativeSource TemplatedParent}}"/>
                                </TextBox.Resources>

                                <TextBox.Text>
                                    <Binding Path="SelectedPath" RelativeSource="{RelativeSource TemplatedParent}" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                                        <Binding.ValidationRules>
                                            <rwpf:BrowseBoxValidationRule ValidatesOnTargetUpdated="True">
                                                <rwpf:BrowseBoxValidationRule.ValidationData>
                                                    <rwpf:BrowseValidationRuleData ValidationRule="{Binding Path=Data.(rwpf:BrowseBox.PathValidation), Source={StaticResource proxy}}" />
                                                </rwpf:BrowseBoxValidationRule.ValidationData>
                                            </rwpf:BrowseBoxValidationRule>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>

                                <!-- Context Menu -->

                                <TextBox.ContextMenu>
                                    <ContextMenu Padding="5">
                                        <MenuItem Header="_Cut" Command="Cut" >
                                            <MenuItem.Icon>
                                                <iconPacks:PackIconMaterial Kind="ContentCut" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="_Copy" Command="Copy" >
                                            <MenuItem.Icon>
                                                <iconPacks:PackIconMaterial Kind="ContentCopy" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="_Paste" Command="Paste" >
                                            <MenuItem.Icon>
                                                <iconPacks:PackIconMaterial Kind="ContentPaste" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <Separator />
                                        <MenuItem Header="_Undo" Command="Undo" >
                                            <MenuItem.Icon>
                                                <iconPacks:PackIconMaterial Kind="Undo" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <Separator />
                                        <MenuItem x:Name="PART_OpenLocationMenuItem"
                                                  Header="Open Location"
                                                  IsEnabled="{TemplateBinding IsSelectedPathValid}">
                                            <MenuItem.Icon>
                                                <iconPacks:PackIconMaterial Kind="FolderOutline" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </TextBox.ContextMenu>

                            </TextBox>

                            <!-- Browse Button -->

                            <Button Grid.Column="1"
                                    x:Name="PART_BrowseButton"
                                    IsEnabled="{TemplateBinding CanBrowse}"
                                    Margin="10 0 0 0"
                                    AllowDrop="True">
                                <StackPanel Orientation="Horizontal">
                                    <iconPacks:PackIconMaterial Kind="FolderOutline"
                                                                VerticalAlignment="Center"/>

                                    <TextBlock Margin="10 0" 
                                               Text="{Resx BrowseBox_Browse}" 
                                               VerticalAlignment="Center"/>

                                </StackPanel>
                            </Button>

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SelectFileHeader" Value="{x:Static local:Resources.Browse_SelectFile}" />
        <Setter Property="SaveFileHeader" Value="{x:Static local:Resources.Browse_SaveFile}" />
        <Setter Property="SelectDirectoryHeader" Value="{x:Static local:Resources.Browse_SelectDir}" />
        <Setter Property="SelectDriveHeader" Value="{x:Static local:Resources.Browse_SelectDrive}" />
    </Style>

    <!-- Default AutoCompleteTextBox -->

    <Style TargetType="{x:Type editors:AutoCompleteTextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editors:AutoCompleteTextBox}">
                    <Grid>
                        <DockPanel>
                            <ContentPresenter x:Name="PART_Icon"
                                                                  ContentSource="Icon"
                                                                  Visibility="{TemplateBinding IconVisibility}" />
                            <Grid>

                                <TextBlock x:Name="PART_Watermark"
                                                               Text="{TemplateBinding Watermark}"
                                                               Padding="{TemplateBinding Padding}"
                                                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                               Foreground="{TemplateBinding Foreground}"
                                                               Visibility="Collapsed"
                                                               Focusable="False"
                                                               Margin="4 0" />

                                <TextBox x:Name="PART_Editor"
                                                             HorizontalAlignment="Stretch"
                                                             VerticalAlignment="Center"
                                                             Foreground="{TemplateBinding Foreground}"
                                                             Text="{Binding Path=Text, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" 
                                                             mah:TextBoxHelper.Watermark="{TemplateBinding mah:TextBoxHelper.Watermark}"
                                                             mah:TextBoxHelper.SelectAllOnFocus="{TemplateBinding mah:TextBoxHelper.SelectAllOnFocus}"/>
                            </Grid>
                        </DockPanel>

                        <Popup x:Name="PART_Popup"
                                                   IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource Mode=TemplatedParent},Mode=TwoWay}"
                                                   Width="{TemplateBinding ActualWidth}"
                                                   MinHeight="25"
                                                   MaxHeight="600"
                                                   AllowsTransparency="True"
                                                   Focusable="False">
                            <Border Background="{TemplateBinding Background}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Grid>
                                    <ListBox x:Name="PART_Selector"
                                                                 ItemTemplate="{TemplateBinding ItemTemplate}"
                                                                 ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                                 Focusable="False"
                                                                 MaxHeight="{Binding Path=MaxPopupHeight, RelativeSource={RelativeSource Mode=TemplatedParent},Mode=TwoWay}"
                                                                 ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                                                 ScrollViewer.VerticalScrollBarVisibility="Auto" />
                                    <Border Visibility="{Binding Path=IsLoading, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={rwpf:BooleanToVisibilityConverter}}">
                                        <ContentPresenter ContentSource="LoadingContent"/>
                                    </Border>
                                </Grid>
                            </Border>
                        </Popup>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="" SourceName="PART_Editor">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_Watermark" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>