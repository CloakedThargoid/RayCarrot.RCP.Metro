<local:BasePage x:Class="RayCarrot.RCP.Metro.Page_Debug_UI"
                x:TypeArguments="local:Page_Debug_ViewModel"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:local="clr-namespace:RayCarrot.RCP.Metro"
                ResxExtension.DefaultResxName="{x:Static local:LocalizationManager.ResourcePath}"
                Background="{DynamicResource MahApps.Brushes.ThemeBackground}"
                Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}"
                IsTabStop="False"
                mc:Ignorable="d"
                d:DesignHeight="450" d:DesignWidth="800"
                d:DataContext="{d:DesignInstance local:Page_Debug_ViewModel}">

    <local:IBasePage.OverflowMenu>
        <ContextMenu ResxExtension.DefaultResxName="{x:Static local:LocalizationManager.ResourcePath}">

            <local:MenuItemIcon Header="Show Applied Utilities"
                                Command="{Binding Path=ShowInstalledUtilitiesCommand}"
                                IconKind="BriefcaseOutline"/>

            <local:MenuItemIcon Header="Show Log"
                                Command="{Binding Path=ShowLogCommand}"
                                IconKind="Text"/>

            <local:MenuItemIcon Header="Restart as administrator"
                                Command="{Binding Path=App.RestartAsAdminCommand}"
                                IconKind="Security"/>

            <local:MenuItemIcon Header="Refresh all"
                                Command="{Binding Path=RefreshAllCommand}"
                                IconKind="Refresh"/>

            <local:MenuItemIcon Header="Refresh all async"
                                Command="{Binding Path=RefreshAllAsyncCommand}"
                                IconKind="Refresh"/>

            <local:MenuItemIcon Header="Throw unhandled exception"
                                Command="{Binding Path=ThrowUnhandledExceptionCommand}"
                                IconKind="Exclamation"/>

            <local:MenuItemIcon Header="Shutdown app"
                                Command="{Binding Path=ShutdownAppCommand}"
                                IconKind="CloseOutline"/>

        </ContextMenu>
    </local:IBasePage.OverflowMenu>

    <ScrollViewer Padding="15">
        <StackPanel>
            <i:Interaction.Behaviors>
                <local:UnifiedMarginBehavior Margin="2 5" />
            </i:Interaction.Behaviors>

            <StackPanel>
                <i:Interaction.Behaviors>
                    <local:UnifiedMarginBehavior Margin="{StaticResource Thickness.Vertical}" />
                </i:Interaction.Behaviors>

                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Dialogs"
                               Style="{StaticResource TextBlock.HeaderLarge}" />

                    <local:InfoIcon Text="Below is a list of the available dialogs in this application. Each dialog returns a dialog result, which in this debug panel is ignored." />

                </StackPanel>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="20" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <ComboBox Grid.Column="0" 
                              ItemsSource="{Binding Path=SelectedDialog, Converter={local:EnumToListConverter}}"
                              SelectedIndex="{Binding Path=SelectedDialog, Converter={local:EnumToIntConverter}}"/>

                    <Button Grid.Column="2" 
                            Content="Show Dialog"
                            Command="{Binding Path=ShowDialogCommand}" />
                </Grid>

            </StackPanel>

            <StackPanel>
                <i:Interaction.Behaviors>
                    <local:UnifiedMarginBehavior Margin="{StaticResource Thickness.Vertical}" />
                </i:Interaction.Behaviors>

                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Installer"
                               Style="{StaticResource TextBlock.HeaderLarge}" />

                    <local:InfoIcon Text="Running the installer on a game which has already been added might crash the application when complete." />

                </StackPanel>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="20" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <ComboBox Grid.Column="0" 
                              ItemsSource="{Binding Path=AvailableInstallers, Mode=OneTime}"
                              SelectedItem="{Binding Path=SelectedInstaller}"/>

                    <Button Grid.Column="2" 
                            Content="Run installer"
                            Command="{Binding Path=RunInstallerCommand}" />
                </Grid>

            </StackPanel>

            <StackPanel>
                <i:Interaction.Behaviors>
                    <local:UnifiedMarginBehavior Margin="{StaticResource Thickness.Vertical}" />
                </i:Interaction.Behaviors>

                <TextBlock Text="Data Output"
                           Style="{StaticResource TextBlock.HeaderLarge}" />

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="20" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <ComboBox Grid.Column="0" 
                              ItemsSource="{Binding Path=SelectedDataOutputType, Converter={local:EnumToListConverter}}"
                              SelectedIndex="{Binding Path=SelectedDataOutputType, Converter={local:EnumToIntConverter}}"/>

                    <Button Grid.Column="2" 
                            Content="Refresh"
                            Command="{Binding Path=RefreshDataOutputCommand}" />
                </Grid>

                <TextBox IsReadOnly="True"
                         Text="{Binding Path=DataOutput}"
                         TextWrapping="Wrap"
                         VerticalScrollBarVisibility="Auto"
                         MaxHeight="450"/>

            </StackPanel>

        </StackPanel>
    </ScrollViewer>
</local:BasePage>