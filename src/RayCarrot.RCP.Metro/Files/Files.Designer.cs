//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RayCarrot.RCP.Metro {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Files {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Files() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RayCarrot.RCP.Metro.Files.Files", typeof(Files).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] dinput_controller {
            get {
                object obj = ResourceManager.GetObject("dinput_controller", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] dinput_mapping {
            get {
                object obj = ResourceManager.GetObject("dinput_mapping", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] dinput8_controller {
            get {
                object obj = ResourceManager.GetObject("dinput8_controller", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        public static System.Drawing.Icon GamePatch {
            get {
                object obj = ResourceManager.GetObject("GamePatch", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copyright (c) 2021 RayCarrot
        ///
        ///Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        ///
        ///The above copyright notice and this permissi [rest of string was truncated]&quot;;.
        /// </summary>
        public static string License {
            get {
                return ResourceManager.GetString("License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] Rayman_Control_Panel_Updater {
            get {
                object obj = ResourceManager.GetObject("Rayman_Control_Panel_Updater", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to cinematic\darkt_bosses\darkt_boss_ending_moon_cine.isc
        ///cinematic_retro\boss\foodworld\sampledemo_bossfo.isc
        ///enginedata\defaultloadingscreen\defaultblackscreen.isc
        ///enginedata\defaultloadingscreen\defaultloadingscreen.isc
        ///enginedata\defaultloadingscreen\logo_rl_mainmenu.isc
        ///enginedata\defaultloadingscreen\interactiveloadingscreen\babeltower_rl\loading_babeltower.isc
        ///enginedata\defaultloadingscreen\interactiveloadingscreen\babeltower_rl\score_recap_babeltower.isc
        ///enginedata\defaultloadingscreen\interact [rest of string was truncated]&quot;;.
        /// </summary>
        public static string RL_Levels {
            get {
                return ResourceManager.GetString("RL_Levels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Levels&quot;: [
        ///    {
        ///      &quot;Time1&quot;: -1,
        ///      &quot;Time2&quot;: -1,
        ///      &quot;Tag&quot;: 611478250,
        ///      &quot;Type&quot;: 2085021599
        ///    },
        ///    {
        ///      &quot;Time1&quot;: -1,
        ///      &quot;Time2&quot;: -1,
        ///      &quot;Tag&quot;: 823271787,
        ///      &quot;Type&quot;: 2085021599
        ///    },
        ///    {
        ///      &quot;Time1&quot;: -1,
        ///      &quot;Time2&quot;: -1,
        ///      &quot;Tag&quot;: 1734041925,
        ///      &quot;Type&quot;: 2085021599
        ///    },
        ///    {
        ///      &quot;Time1&quot;: -1,
        ///      &quot;Time2&quot;: -1,
        ///      &quot;Tag&quot;: 3706178635,
        ///      &quot;Type&quot;: 2085021599
        ///    },
        ///    {
        ///      &quot;Time1&quot;: -1,
        ///      &quot;Time2&quot;: -1,
        ///      &quot;Tag&quot;: 39791941 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string RO_LevelConfig {
            get {
                return ResourceManager.GetString("RO_LevelConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to cinematic\boss\foodworld\sampledemo_bossfo.isc
        ///cinematic\faery\faeryfree\background.isc
        ///cinematic\faery\faeryfree\fo_faeryfreescene.isc
        ///cinematic\faery\faeryfree\ju_faeryfreescene.isc
        ///cinematic\faery\faeryfree\mo_faeryfreescene.isc
        ///cinematic\faery\faeryfree\mu_faeryfreescene.isc
        ///cinematic\faery\faeryfree\oc_faeryfreescene.isc
        ///cinematic\levelending\levelending.isc
        ///cinematic\levelending\levelending_graph.isc
        ///scene\menus\inputconfiguration\inputconfiguration.isc
        ///scene\menus\mainmenu\menuback.isc
        ///sce [rest of string was truncated]&quot;;.
        /// </summary>
        public static string RO_Levels {
            get {
                return ResourceManager.GetString("RO_Levels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] Uninstaller {
            get {
                object obj = ResourceManager.GetObject("Uninstaller", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -----   Version 3.2.2 - February 21, 2019   -----
        ///• Fixed a bug which caused the game file name do be blank when reset to its default value
        ///• Fixed a bug which caused the program to crash when a message box appeared prior to the app data being loaded
        ///
        ///
        ///-----   Version 3.2.1 - January 31 2019   -----
        ///• Added missing Rayman M/Arena cheat code
        ///• Temporarily removed .NET Framework check
        ///
        ///
        ///-----   Version 3.2.0 - January 28 2019   -----
        ///• Added Slovak Rayman 2 translation by MixerX
        ///• Added Rayman M/A [rest of string was truncated]&quot;;.
        /// </summary>
        public static string VersionHistory_01_0_03_0 {
            get {
                return ResourceManager.GetString("VersionHistory_01_0_03_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -----   Version 6.1.2 - October 10, 2019   -----
        ///• Updated the Portuguese translation of Rayman 2
        ///• Added support for installing the Polish version of Rayman M from a disc
        ///• Improved tab navigation
        ///• Updated reference to the WinRT SDK
        ///
        ///
        ///-----   Version 6.1.1 - September 29, 2019   -----
        ///• Updated the Portuguese translation of Rayman 2
        ///• Fixed a bug where setting the theme to light would not save
        ///
        ///
        ///-----   Version 6.1.0 - September 23, 2019   -----
        ///• Added a utility for Rayman Legends debug comm [rest of string was truncated]&quot;;.
        /// </summary>
        public static string VersionHistory_04_0_06_0 {
            get {
                return ResourceManager.GetString("VersionHistory_04_0_06_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -----   Version 9.5.0 - May 21, 2020   -----
        ///• Added support for Rayman Dictées
        ///• Reworked the binary serialization system. Logging can now be enabled for any serialized data.
        ///• Rayman 3 save files can now be converted back, imported and exported
        ///
        ///Other changes:
        ///• Added Eeeebray to the credits
        ///• The setting to enable beta updates is now tied to the Technical user level rather than the Debug one
        ///• Updated archive creation for Rayman Mini files to support the 1.2 update
        ///• Exporting the root of an arc [rest of string was truncated]&quot;;.
        /// </summary>
        public static string VersionHistory_07_0_09_0 {
            get {
                return ResourceManager.GetString("VersionHistory_07_0_09_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -----   Version 12.1.0 - September 27, 2021   -----
        ///• Added support for the Rayman Raving Rabbids demo
        ///• Updated the layout of the welcome page
        ///• Added a debug option to change the app accent color
        ///• Added a debug option to show the welcome window
        ///• Fixed a bug where some text wouldn&apos;t be in the correct language if not set to English
        ///
        ///
        ///-----   Version 12.0.0 - September 25, 2021   -----
        ///• Visual changes:
        ///	• Page headers use colored icons and underlines
        ///	• Controls have rounded corners and slightl [rest of string was truncated]&quot;;.
        /// </summary>
        public static string VersionHistory_10_0_12_0 {
            get {
                return ResourceManager.GetString("VersionHistory_10_0_12_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -----   Version 14.0.0 - June ??, 2023   -----
        ///• Major changes to how games are handled
        ///	• Multiple installations of the same game can be added
        ///	• Games can be renamed and reordered
        ///	• The game options have been moved from the options dialog to the game hub
        ///	• The Rayman Edutainment games are now split up between Edu and Quiz
        ///• The emulator system has been replaced by game clients which include emulators, such as DOSBox, and launcher clients, such as Steam
        ///• Added a home page for news and recent/favo [rest of string was truncated]&quot;;.
        /// </summary>
        public static string VersionHistory_13_0_15_0 {
            get {
                return ResourceManager.GetString("VersionHistory_13.0_15.0", resourceCulture);
            }
        }
    }
}
