<UserControl x:Class="RayCarrot.RCP.Metro.ModLoader.Dialogs.ModLoader.ModLoaderDownloadPageControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:rcp="clr-namespace:RayCarrot.RCP.Metro"
             xmlns:modLoader="clr-namespace:RayCarrot.RCP.Metro.ModLoader.Dialogs.ModLoader"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:gameBanana="clr-namespace:RayCarrot.RCP.Metro.ModLoader.Sources.GameBanana"
             mc:Ignorable="d"
             d:DesignWidth="900" d:DesignHeight="600"
             d:Background="{DynamicResource MahApps.Brushes.ThemeBackground}"
             d:Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}"
             d:DataContext="{d:DesignInstance modLoader:DownloadableModsViewModel}"
             ResxExtension.DefaultResxName="{x:Static rcp:LocalizationManager.ResourcePath}">
    <rcp:Card Margin="{StaticResource RCP.Thicknesses.Card}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1.25*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <!-- Available mods -->
            <Grid Grid.Column="0"
                  Background="Transparent"
                  MouseDown="ModsGrid_OnMouseDown">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <!-- Header -->
                <Grid Grid.Row="0" 
                      Margin="0 0 0 8"
                      Height="38">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <!-- NOTE: For now we hard-code the GameBanana header since that's the only source right now. When/if we add
                               more sources we will have to redesign the UI here to support that. -->
                    <Image Grid.Column="0"
                           Source="{Binding Path=DownloadableModsSources[0].Icon, Mode=OneTime, Converter={rcp:AssetEnumToImageSourceConverter}}" 
                           d:Source="pack://application:,,,/RayCarrot.RCP.Metro;component/Assets/ModSourceIcons/GameBanana.png" 
                           Width="32" 
                           Margin="0 0 8 0"/>
                    <TextBlock Grid.Column="1"
                               Text="{Resx ModLoader_GameBanana_Title}" 
                               Style="{StaticResource RCP.Styles.TextBlock.Header}"
                               VerticalAlignment="Center" />

                    <rcp:InfoIcon Grid.Column="2"
                                  Text="{Resx ModLoader_GameBanana_DownloadableModsInfo}" />

                    <!-- TODO-LOC -->
                    <!-- Search box -->
                    <TextBox x:Name="SearchTextBox" 
                             Grid.Column="4"
                             VerticalAlignment="Center"
                             mah:TextBoxHelper.Watermark="Search mods"
                             BorderThickness="0" 
                             Margin="8 0 8 0"
                             Visibility="Collapsed"
                             d:Visibility="Visible"
                             Opacity="0"
                             d:Opacity="1"
                             RenderTransformOrigin="1, 0">
                        <TextBox.RenderTransform>
                            <ScaleTransform x:Name="SearchTextBoxScaleTransform" />
                        </TextBox.RenderTransform>
                    </TextBox>

                    <!-- TODO-LOC -->
                    <!-- Search toggle -->
                    <ToggleButton Grid.Column="5"
                                  Height="{Binding Path=ActualWidth, RelativeSource={RelativeSource Self}}"
                                  ToolTip="Search mods"
                                  Margin="0 0 4 0">
                        <ToggleButton.Triggers>
                            <EventTrigger RoutedEvent="ToggleButton.Checked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SearchTextBox" 
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                         Storyboard.TargetName="SearchTextBox" 
                                                         From="0" To="1"
                                                         Duration="0:0:0.22"/>
                                        <DoubleAnimation Storyboard.TargetName="SearchTextBoxScaleTransform" 
                                                         Storyboard.TargetProperty="(ScaleTransform.ScaleX)" 
                                                         From="0" To="1"
                                                         Duration="0:0:0.22">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SearchTextBox"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         From="1"
                                                         To="0"
                                                         Duration="0:0:0.22" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SearchTextBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.22" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="SearchTextBoxScaleTransform" 
                                                         Storyboard.TargetProperty="(ScaleTransform.ScaleX)" 
                                                         From="1" To="0"
                                                         Duration="0:0:0.22">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ToggleButton.Triggers>

                        <ToggleButton.Style>
                            <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource RCP.Styles.ToggleButton.Flat}">
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="False">
                                        <Setter Property="rcp:Icon.Kind" Value="Magnify" />
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="rcp:Icon.Kind" Value="MagnifyClose" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>

                    </ToggleButton>

                    <!-- Refresh button -->
                    <Button x:Name="RefreshButton" 
                            Click="RefreshButton_OnClick"
                            Grid.Column="6"
                            IsEnabled="{Binding Path=IsLoading, Converter={rcp:InvertedBooleanConverter}}"
                            Style="{StaticResource RCP.Styles.Button.Flat}"
                            rcp:Icon.Kind="Refresh"
                            Height="{Binding Path=ActualWidth, RelativeSource={RelativeSource Self}}"
                            ToolTip="{Resx ModLoader_RefreshDownloadableMods}"
                            Command="{Binding Path=RefreshCommand, Mode=OneTime}" />

                    <!-- Loading indicator -->
                    <mah:ProgressRing Grid.Column="6"
                                      Visibility="{Binding Path=IsLoading, Converter={rcp:BooleanToVisibilityConverter}}"
                                      d:Visibility="Collapsed"
                                      Width="{Binding ElementName=RefreshButton, Path=ActualWidth}"
                                      Height="{Binding ElementName=RefreshButton, Path=ActualHeight}" />

                </Grid>

                <!-- Mods -->
                <ScrollViewer x:Name="ModsScrollViewer" Grid.Row="1" VerticalAlignment="Top" ScrollChanged="ModsScrollViewer_OnScrollChanged">
                    <StackPanel>
                        <ListBox Grid.IsSharedSizeScope="True"
                                 ItemsSource="{Binding Path=CurrentModsFeed.Mods, Mode=OneTime}"
                                 d:ItemsSource="{d:SampleData ItemCount=5}"
                                 SelectedItem="{Binding Path=SelectedMod}"
                                 d:SelectedIndex="1"
                                 VerticalAlignment="Top"
                                 Background="Transparent"
                                 ItemContainerStyle="{StaticResource RCP.Styles.ListBoxItem.Flat}"
                                 PreviewMouseWheel="ModsListBox_OnPreviewMouseWheel"
                                 ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <ContentPresenter Content="{Binding Mode=OneTime}">
                                        <ContentPresenter.Resources>
                                            <DataTemplate DataType="{x:Type gameBanana:GameBananaDownloadableModViewModel}">
                                                <gameBanana:GameBananaDownloadableModItemControl />
                                            </DataTemplate>
                                        </ContentPresenter.Resources>
                                    </ContentPresenter>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </StackPanel>
                </ScrollViewer>
            </Grid>

            <!-- Empty text -->
            <Viewbox Grid.Column="0"
                     Grid.ColumnSpan="2" 
                     Visibility="{Binding Path=CurrentModsFeed.IsEmpty, Converter={rcp:BooleanToVisibilityConverter}}">
                <TextBlock Text="{Resx ModLoader_DownloadableModsEmpty}" 
                           TextAlignment="Center" 
                           Margin="30" 
                           Opacity="0.5" />
            </Viewbox>

            <!-- Error message -->
            <Grid Grid.Column="0"
                  Grid.ColumnSpan="2" 
                  Margin="30"
                  Visibility="{Binding Path=CurrentModsFeed.ErrorMessage, Converter={rcp:InvertedObjectNullToVisibilityConverter}}"
                  HorizontalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <iconPacks:PackIconMaterial Grid.Column="0"
                                            VerticalAlignment="Center"
                                            Kind="InformationOutline" 
                                            Foreground="{StaticResource RCP.Brushes.Warning}"
                                            Margin="0 0 4 0" />

                <TextBlock Grid.Column="1" 
                           VerticalAlignment="Center"
                           TextWrapping="Wrap"
                           Text="{Binding Path=CurrentModsFeed.ErrorMessage}"
                           d:Text="Error message"/>

            </Grid>

            <!-- Selected mod -->
            <rcp:Card Grid.Column="1"
                      DataContext="{Binding Path=SelectedMod}"
                      Visibility="{Binding Converter={rcp:InvertedObjectNullToVisibilityConverter}}"
                      d:Visibility="Visible"
                      Margin="{StaticResource RCP.Thicknesses.Card}" 
                      Background="{DynamicResource RCP.Brushes.Card.SecondaryBackground}">

                <ContentPresenter Content="{Binding Mode=OneTime}">
                    <ContentPresenter.Resources>
                        <DataTemplate DataType="{x:Type gameBanana:GameBananaDownloadableModViewModel}">
                            <gameBanana:GameBananaDownloadableModPanelControl />
                        </DataTemplate>
                    </ContentPresenter.Resources>
                </ContentPresenter>

            </rcp:Card>

        </Grid>
    </rcp:Card>
</UserControl>