<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:RayCarrot.RCP.Metro">

    <!-- Int -->

    <DataTemplate DataType="{x:Type local:EditorIntFieldViewModel}">
        <StackPanel>
            <TextBlock Text="{Binding Path=Header.Value}"
                       TextWrapping="Wrap" />

            <TextBlock FontSize="11"
                       Visibility="{Binding Path=Info, Converter={local:InvertedObjectNullToVisibilityConverter}}"
                       Margin="0 2 0 0"
                       Text="{Binding Path=Info.Value}"
                       TextWrapping="Wrap" />

            <metro:NumericUpDown Margin="0 4 0 0" 
                                 Minimum="{Binding Path=Min}"
                                 Maximum="{Binding Path=Max}"
                                 Value="{Binding Path=Value}"
                                 HorizontalAlignment="Left"
                                 MinWidth="70" />
        </StackPanel>
    </DataTemplate>

    <!-- Int slider -->

    <DataTemplate DataType="{x:Type local:EditorIntSliderFieldViewModel}">
        <StackPanel>
            <TextBlock Text="{Binding Path=Header.Value}"
                       TextWrapping="Wrap" />

            <TextBlock FontSize="11"
                       Visibility="{Binding Path=Info, Converter={local:InvertedObjectNullToVisibilityConverter}}"
                       Margin="0 2 0 0"
                       Text="{Binding Path=Info.Value}"
                       TextWrapping="Wrap" />

            <Slider Margin="0 4 0 0" 
                    Minimum="{Binding Path=Min}"
                    Maximum="{Binding Path=Max}"
                    Value="{Binding Path=Value}"
                    HorizontalAlignment="Left"
                    MinWidth="70"
                    TickPlacement="BottomRight" />
        </StackPanel>
    </DataTemplate>

    <!-- String -->

    <DataTemplate DataType="{x:Type local:EditorStringFieldViewModel}">
        <StackPanel>
            <TextBlock Text="{Binding Path=Header.Value}"
                       TextWrapping="Wrap" />

            <TextBlock FontSize="11"
                       Visibility="{Binding Path=Info, Converter={local:InvertedObjectNullToVisibilityConverter}}"
                       Margin="0 2 0 0"
                       Text="{Binding Path=Info.Value}"
                       TextWrapping="Wrap" />

            <TextBox Margin="0 4 0 0" 
                     MaxLength="{Binding Path=MaxLength, Mode=OneTime}"
                     Text="{Binding Path=Value}"
                     HorizontalAlignment="Left"
                     MinWidth="70" />
        </StackPanel>
    </DataTemplate>

    <!-- Bool -->

    <DataTemplate DataType="{x:Type local:EditorBoolFieldViewModel}">
        <CheckBox Style="{StaticResource RCP.Styles.CheckBox.Default}"
                  IsChecked="{Binding Path=Value}">
            <StackPanel>
                <TextBlock Text="{Binding Path=Header.Value}"
                           TextWrapping="Wrap" />

                <TextBlock FontSize="11"
                           Visibility="{Binding Path=Info, Converter={local:InvertedObjectNullToVisibilityConverter}}"
                           Margin="0 2 0 0"
                           Text="{Binding Path=Info.Value}"
                           TextWrapping="Wrap" />
            </StackPanel>
        </CheckBox>
    </DataTemplate>

    <!-- Drop-down -->

    <DataTemplate DataType="{x:Type local:EditorDropDownFieldViewModel}">
        <StackPanel>
            <TextBlock Text="{Binding Path=Header.Value}"
                       TextWrapping="Wrap" />

            <TextBlock FontSize="11"
                       Visibility="{Binding Path=Info, Converter={local:InvertedObjectNullToVisibilityConverter}}"
                       Margin="0 2 0 0"
                       Text="{Binding Path=Info.Value}"
                       TextWrapping="Wrap" />

            <ComboBox Margin="0 4 0 0" 
                      ItemsSource="{Binding Path=Items}"
                      VirtualizingStackPanel.IsVirtualizing="False"
                      DisplayMemberPath="Header.Value"
                      SelectedIndex="{Binding Path=SelectedItem}"
                      HorizontalAlignment="Left"
                      MinWidth="70" />
        </StackPanel>
    </DataTemplate>

    <!-- Grouped Drop-down -->

    <DataTemplate DataType="{x:Type local:GroupedEditorDropDownFieldViewModel}">
        <StackPanel>
            <TextBlock Text="{Binding Path=Header.Value}"
                       TextWrapping="Wrap" />

            <TextBlock FontSize="11"
                       Visibility="{Binding Path=Info, Converter={local:InvertedObjectNullToVisibilityConverter}}"
                       Margin="0 2 0 0"
                       Text="{Binding Path=Info.Value}"
                       TextWrapping="Wrap" />

            <ComboBox Margin="0 4 0 0" 
                      ItemsSource="{Binding Path=Items}"
                      VirtualizingStackPanel.IsVirtualizing="False"
                      SelectedIndex="{Binding Path=SelectedItem}"
                      HorizontalAlignment="Left"
                      MinWidth="70">
                <ComboBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                        <Setter Property="IsEnabled" Value="{Binding Path=IsGroupHeader, Mode=OneTime, Converter={local:InvertedBooleanConverter}}" />
                    </Style>
                </ComboBox.ItemContainerStyle>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock x:Name="GroupHeaderTextBlock" 
                                       FontWeight="Bold"
                                       Visibility="Collapsed"
                                       Text="{Binding Path=GroupHeader.Value}" />
                            <TextBlock x:Name="HeaderTextBlock" 
                                       Text="{Binding Path=Header.Value}" 
                                       Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                        </StackPanel>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Path=IsGroupHeader, Mode=OneTime}" Value="True">
                                <DataTrigger.Setters>
                                    <Setter TargetName="HeaderTextBlock" Property="FontWeight" Value="Bold" />
                                </DataTrigger.Setters>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=IsGroupHeader, Mode=OneTime}" Value="False">
                                <DataTrigger.Setters>
                                    <Setter TargetName="HeaderTextBlock" Property="Margin" Value="10 0 0 0" />
                                </DataTrigger.Setters>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBoxItem}}" Value="{x:Null}">
                                <DataTrigger.Setters>
                                    <Setter TargetName="GroupHeaderTextBlock" Property="Visibility" Value="Visible" />
                                </DataTrigger.Setters>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </StackPanel>
    </DataTemplate>

    <!-- Fields item control -->

    <Style x:Key="RCP.Styles.ItemsControl.EditorFields" TargetType="{x:Type ItemsControl}" BasedOn="{StaticResource {x:Type ItemsControl}}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type local:EditorFieldViewModel}">
                    <ContentPresenter Content="{Binding}"
                                      Margin="0 0 0 8" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Field groups item control -->

    <Style x:Key="RCP.Styles.ItemsControl.EditorFieldGroups" TargetType="{x:Type ItemsControl}" BasedOn="{StaticResource {x:Type ItemsControl}}">
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type local:EditorFieldGroupViewModel}">
                    <StackPanel>

                        <!-- Header -->

                        <TextBlock Text="{Binding Path=Header.Value}"
                                   Style="{StaticResource RCP.Styles.TextBlock.Header}"
                                   Margin="0 0 0 7" />

                        <!-- Fields -->

                        <ItemsControl Style="{StaticResource RCP.Styles.ItemsControl.EditorFields}"
                                      ItemsSource="{Binding Path=EditorFields, Mode=OneTime}"
                                      Margin="0 0 0 7" />

                    </StackPanel>

                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>