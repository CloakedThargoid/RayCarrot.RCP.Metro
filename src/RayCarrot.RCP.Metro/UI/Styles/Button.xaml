<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:iconpacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:local="clr-namespace:RayCarrot.RCP.Metro">

    <!-- Icon Content -->

    <DataTemplate x:Key="RCP.Templates.Button.IconContent">
        <StackPanel Orientation="Horizontal">
            <iconpacks:PackIconMaterial Kind="{Binding Path=(local:ButtonAssist.IconKind), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                        VerticalAlignment="Center"/>

            <ContentPresenter Margin="10 0"
                              Content="{Binding}"
                              VerticalAlignment="Center" />

        </StackPanel>
    </DataTemplate>

    <!-- Default Button -->

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="mah:ControlsHelper.ContentCharacterCasing" Value="Normal" />
    </Style>

    <!-- Flat Button -->

    <!-- TODO-UPDATE: Update other button styles to use icons like this one -->
    <Style x:Key="RCP.Styles.Button.Flat" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="mah:ControlsHelper.CornerRadius" Value="{StaticResource CornerRadius.Default}" />
        <Setter Property="local:ButtonAssist.IconKind" Value="None" />
        <Setter Property="local:ButtonAssist.IconSize" Value="20" />
        <Setter Property="local:ButtonAssist.IconBrush" Value="{Binding Path=Foreground, RelativeSource={RelativeSource Self}}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <mah:ClipBorder x:Name="RootBorder"
                                    Margin="0"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding mah:ControlsHelper.CornerRadius}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Border x:Name="OpacityBorder" Background="Transparent">
                            <Grid Margin="{TemplateBinding Padding}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <iconpacks:PackIconMaterial x:Name="Icon"
                                                        Grid.Column="0" 
                                                        Kind="{TemplateBinding local:ButtonAssist.IconKind}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        Visibility="{TemplateBinding local:ButtonAssist.IconKind, Converter={local:InvertedEnumVisibilityConverter}, ConverterParameter=None}"
                                                        Width="{TemplateBinding local:ButtonAssist.IconSize}"
                                                        Height="{TemplateBinding local:ButtonAssist.IconSize}"
                                                        Foreground="{TemplateBinding local:ButtonAssist.IconBrush}"
                                                        Margin="0 0 4 0" />

                                <mah:ContentControlEx x:Name="PART_ContentPresenter"
                                                  Grid.Column="1"
                                                  Content="{TemplateBinding Content}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                  RecognizesAccessKey="{TemplateBinding mah:ControlsHelper.RecognizesAccessKey}" />
                            </Grid>
                        </Border>
                    </mah:ClipBorder>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OpacityBorder" 
                                    Property="Background" 
                                    Value="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={local:BrushToBrushWithOpacityConverter}, ConverterParameter=0.16}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="OpacityBorder" 
                                    Property="Background" 
                                    Value="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={local:BrushToBrushWithOpacityConverter}, ConverterParameter=0.32}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.38" />
                        </Trigger>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Margin" Value="0" />
                        </Trigger>
                        <Trigger Property="local:ButtonAssist.IconBrush" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Icon Circle Button -->

    <Style x:Key="RCP.Styles.Button.IconCircle" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.Circle}">
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <iconpacks:PackIconMaterial Kind="{Binding Path=(local:ButtonAssist.IconKind), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                                Width="20" Height="20"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Small Icon Circle Button -->

    <Style x:Key="RCP.Styles.Button.IconCircleSmall" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.Circle}">
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <iconpacks:PackIconMaterial Kind="{Binding Path=(local:ButtonAssist.IconKind), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                                Width="16" Height="16"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Icon Content Button -->

    <Style x:Key="RCP.Styles.Button.IconContent" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="ContentTemplate" Value="{StaticResource RCP.Templates.Button.IconContent}" />
    </Style>

</ResourceDictionary>