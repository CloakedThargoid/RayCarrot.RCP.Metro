<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:iconpacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:local="clr-namespace:RayCarrot.RCP.Metro">

    <!-- Icon Content -->

    <DataTemplate x:Key="RCP.Templates.Button.IconContent" x:Shared="False">
        <StackPanel Orientation="Horizontal">
            <iconpacks:PackIconMaterial Kind="{Binding Path=(local:ButtonAssist.IconKind), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                        VerticalAlignment="Center"/>

            <ContentPresenter Margin="10 0"
                              Content="{Binding}"
                              VerticalAlignment="Center" />

        </StackPanel>
    </DataTemplate>

    <!-- Default Button -->

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="metro:ControlsHelper.ContentCharacterCasing" Value="Normal" />
    </Style>

    <!-- Flat Button -->

    <Style x:Key="RCP.Styles.Button.Flat" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentControl Background="{TemplateBinding Background}"
                                    Foreground="{TemplateBinding Foreground}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Highlight}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Gray2}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Icon Circle Button -->

    <Style x:Key="RCP.Styles.Button.IconCircle" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.Circle}">
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <iconpacks:PackIconMaterial Kind="{Binding Path=(local:ButtonAssist.IconKind), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                                Width="20" Height="20"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Small Icon Circle Button -->

    <Style x:Key="RCP.Styles.Button.IconCircleSmall" TargetType="{x:Type Button}" BasedOn="{StaticResource MahApps.Styles.Button.Circle}">
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <iconpacks:PackIconMaterial Kind="{Binding Path=(local:ButtonAssist.IconKind), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                                                Width="16" Height="16"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Icon Content Button -->

    <Style x:Key="RCP.Styles.Button.IconContent" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="ContentTemplate" Value="{StaticResource RCP.Templates.Button.IconContent}" />
    </Style>

</ResourceDictionary>