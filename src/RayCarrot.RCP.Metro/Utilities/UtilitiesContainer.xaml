<UserControl x:Class="RayCarrot.RCP.Metro.UtilitiesContainer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:RayCarrot.RCP.Metro"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
             ResxExtension.DefaultResxName="{x:Static local:LocalizationManager.ResourcePath}"
             IsTabStop="False"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <ItemsControl x:Name="DataContextRoot"
                  d:DataContext="{d:DesignInstance local:UtilitiesContainer}"
                  ItemsSource="{Binding Path=Utilities}">

        <ItemsControl.ItemTemplate>
            <DataTemplate>
                <StackPanel>

                    <Separator x:Name="ItemSeparator"
                               Margin="{StaticResource RCP.Thicknesses.Vertical}"/>

                    <StackPanel Orientation="Horizontal"
                                Margin="{StaticResource RCP.Thicknesses.Vertical}">

                        <iconPacks:PackIconMaterial Kind="{Binding Path=IconKind, Converter={local:GenericIconToIconKindConverter}, Mode=OneTime}" 
                                                    Foreground="{Binding Path=IconKind, Converter={local:GenericIconToBrushConverter}, Mode=OneTime}"
                                                    Margin="0 0 7 0"
                                                    VerticalAlignment="Center"/>

                        <TextBlock Style="{StaticResource RCP.Styles.TextBlock.Header}"
                                   Text="{Binding Path=DisplayHeader.Value}" />

                        <local:InfoIcon Style="{StaticResource RCP.Styles.InfoIcon.AdditionalFilesRequired}"
                                        Text="{Resx Utility_AdditionalFilesRequired}"
                                        Visibility="{Binding Path=Utility.RequiresAdditionalFiles, Converter={local:BooleanToVisibilityConverter}, Mode=OneTime}"/>

                        <local:InfoIcon Text="{Binding Path=InfoText.Value}"
                                        Visibility="{Binding Path=InfoText.Value, Converter={local:InvertedObjectNullToVisibilityConverter}, Mode=OneTime}"/>

                        <local:InfoIcon Style="{StaticResource RCP.Styles.InfoIcon.Notice}"
                                        Text="{Resx Utility_WIP}"
                                        Visibility="{Binding Path=Utility.IsWorkInProcess, Converter={local:BooleanToVisibilityConverter}, Mode=OneTime}"/>

                        <local:InfoIcon Style="{StaticResource RCP.Styles.InfoIcon.Warning}"
                                        Text="{Binding Path=WarningText.Value}"
                                        Visibility="{Binding Path=WarningText.Value, Converter={local:InvertedObjectNullToVisibilityConverter}, Mode=OneTime}" />

                    </StackPanel>

                    <ContentControl IsTabStop="False" 
                                    Margin="{StaticResource RCP.Thicknesses.Vertical}"
                                    IsEnabled="{Binding Path=IsLoading, Converter={local:InvertedBooleanConverter}}"
                                    Visibility="{Binding Path=IsAvailable, Mode=OneTime, Converter={local:BooleanToVisibilityConverter}}">
                        <ContentControl.Style>
                            <Style TargetType="{x:Type ContentControl}">
                                <Setter Property="Content" Value="{Binding Path=Utility.UIContent, Mode=OneTime}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=RequiresAdmin}" Value="True">
                                        <Setter Property="Content">
                                            <Setter.Value>

                                                <StackPanel HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"
                                                            ResxExtension.DefaultResxName="{x:Static local:LocalizationManager.ResourcePath}">
                                                    <StackPanel Orientation="Horizontal">

                                                        <iconPacks:PackIconMaterial Kind="Security"
                                                                                    Margin="0 0 10 0" />

                                                        <TextBlock Foreground="Red"
                                                                   Text="{Resx Utilities_RequiresAdmin}"
                                                                   TextWrapping="Wrap" />

                                                    </StackPanel>

                                                    <Button HorizontalAlignment="Center"
                                                            Margin="0 10 0 0"
                                                            Content="{Resx App_RestartAsAdmin}"
                                                            Command="{Binding Path=RestartAsAdminCommand, Mode=OneTime, Source={x:Static local:Services.App}}"/>

                                                </StackPanel>

                                            </Setter.Value>
                                        </Setter>

                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>

                    <StackPanel Orientation="Horizontal"
                                Margin="{StaticResource RCP.Thicknesses.Vertical}"
                                HorizontalAlignment="Center"
                                Visibility="{Binding Path=IsAvailable, Mode=OneTime, Converter={local:InvertedBooleanToVisibilityConverter}}">

                        <TextBlock Foreground="Red"
                                   Text="{Resx Utilities_NotAvailable}"
                                   TextWrapping="Wrap" />

                        <local:InfoIcon DataContext="{Binding Path=Utility.NotAvailableInfo, Mode=OneTime}" 
                                        Text="{Binding Path=Value}"
                                        Visibility="{Binding Path=Value, Converter={local:InvertedObjectNullToVisibilityConverter}, FallbackValue=Collapsed}"/>

                    </StackPanel>

                    <metro:MetroProgressBar IsIndeterminate="True" 
                                            Visibility="{Binding Path=IsLoading, Converter={local:BooleanToVisibilityHiddenConverter}}"/>

                </StackPanel>

                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                        <Setter Property="Visibility" TargetName="ItemSeparator" Value="Collapsed"/>
                    </DataTrigger>
                </DataTemplate.Triggers>

            </DataTemplate>
        </ItemsControl.ItemTemplate>

    </ItemsControl>
</UserControl>