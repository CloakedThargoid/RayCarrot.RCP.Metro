//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RayCarrot.RCP.Metro {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RayCarrot.RCP.Metro.Localization.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (BETA).
        /// </summary>
        public static string About_BetaTag {
            get {
                return ResourceManager.GetString("About_BetaTag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to uninstall the Rayman Control Panel? This will remove the executable file and all of the program&apos;s app data. This will NOT remove any installed games, save files or backups. Some applied utilities may still be available..
        /// </summary>
        public static string About_ConfirmUninstall {
            get {
                return ResourceManager.GetString("About_ConfirmUninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm uninstall.
        /// </summary>
        public static string About_ConfirmUninstallHeader {
            get {
                return ResourceManager.GetString("About_ConfirmUninstallHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Credits.
        /// </summary>
        public static string About_Credits {
            get {
                return ResourceManager.GetString("About_Credits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dutch (Netherlands) program translation, program testing.
        /// </summary>
        public static string About_Credits_432Hz {
            get {
                return ResourceManager.GetString("About_Credits_432Hz", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman reverse engineering, Rayman Raving Rabbids mod, BinarySerializer.
        /// </summary>
        public static string About_Credits_Droolie {
            get {
                return ResourceManager.GetString("About_Credits_Droolie", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Polish (Poland) program translation.
        /// </summary>
        public static string About_Credits_Fabiosek {
            get {
                return ResourceManager.GetString("About_Credits_Fabiosek", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Portuguese (Portugal) program translation.
        /// </summary>
        public static string About_Credits_HarukaTavares {
            get {
                return ResourceManager.GetString("About_Credits_HarukaTavares", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Italian (Italy) program translation.
        /// </summary>
        public static string About_Credits_ItzalDrake {
            get {
                return ResourceManager.GetString("About_Credits_ItzalDrake", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman 2 button remapping.
        /// </summary>
        public static string About_Credits_Janmv94 {
            get {
                return ResourceManager.GetString("About_Credits_Janmv94", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to French (France) program translation.
        /// </summary>
        public static string About_Credits_Marteaufou {
            get {
                return ResourceManager.GetString("About_Credits_Marteaufou", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller patches.
        /// </summary>
        public static string About_Credits_Noserdog {
            get {
                return ResourceManager.GetString("About_Credits_Noserdog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Per-level soundtrack utility.
        /// </summary>
        public static string About_Credits_PluMGMK {
            get {
                return ResourceManager.GetString("About_Credits_PluMGMK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Program testing.
        /// </summary>
        public static string About_Credits_RayActivity {
            get {
                return ResourceManager.GetString("About_Credits_RayActivity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman Control Panel, utilities, per-level soundtrack, Archive Explorer, BinarySerializer.
        /// </summary>
        public static string About_Credits_RayCarrot {
            get {
                return ResourceManager.GetString("About_Credits_RayCarrot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Russian (Russia) program translation.
        /// </summary>
        public static string About_Credits_RaymanUniverse {
            get {
                return ResourceManager.GetString("About_Credits_RaymanUniverse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General help with the utilities.
        /// </summary>
        public static string About_Credits_RibShark {
            get {
                return ResourceManager.GetString("About_Credits_RibShark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Per-level soundtrack utility, Rayman M/Arena disc check removal.
        /// </summary>
        public static string About_Credits_Snagglebee {
            get {
                return ResourceManager.GetString("About_Credits_Snagglebee", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hebrew program translation.
        /// </summary>
        public static string About_Credits_XanderNT {
            get {
                return ResourceManager.GetString("About_Credits_XanderNT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to French (France) program translation.
        /// </summary>
        public static string About_Credits_ZetaXO {
            get {
                return ResourceManager.GetString("About_Credits_ZetaXO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Email.
        /// </summary>
        public static string About_Email {
            get {
                return ResourceManager.GetString("About_Email", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GitHub.
        /// </summary>
        public static string About_GitHub {
            get {
                return ResourceManager.GetString("About_GitHub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman Control Panel is an open source community project created by RayCarrot. This software is a single free to use executable file with the intent to easily access settings and fixes for the various Rayman titles released for Windows.
        ///This is a growing project with more features planned on being added with future updates. The utilities and various configuration tools have been created with help from various members of the Rayman community, all credited below..
        /// </summary>
        public static string About_ProgramInfo {
            get {
                return ResourceManager.GetString("About_ProgramInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Special thanks to AuToMaNiAk005, Miss-Cerasus, Evelyn Chickentalk, MilesTheCreator, MixerX, PokGOT4N, Robin, Ryemanni, SilverSpade92, Steo, Szymski and all other Rayman fans!.
        /// </summary>
        public static string About_SpecialThanks {
            get {
                return ResourceManager.GetString("About_SpecialThanks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam group.
        /// </summary>
        public static string About_Steam {
            get {
                return ResourceManager.GetString("About_Steam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Twitter.
        /// </summary>
        public static string About_Twitter {
            get {
                return ResourceManager.GetString("About_Twitter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall.
        /// </summary>
        public static string About_Uninstall {
            get {
                return ResourceManager.GetString("About_Uninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when running the uninstaller. You can manually remove the app data which is located in the following locations:
        ///
        ///{0}.
        /// </summary>
        public static string About_UninstallFailed {
            get {
                return ResourceManager.GetString("About_UninstallFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check for new updates.
        /// </summary>
        public static string About_UpdateCheck {
            get {
                return ResourceManager.GetString("About_UpdateCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update history.
        /// </summary>
        public static string About_UpdateHistory {
            get {
                return ResourceManager.GetString("About_UpdateHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to YouTube.
        /// </summary>
        public static string About_YouTube {
            get {
                return ResourceManager.GetString("About_YouTube", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About.
        /// </summary>
        public static string AboutPageHeader {
            get {
                return ResourceManager.GetString("AboutPageHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accept.
        /// </summary>
        public static string Accept {
            get {
                return ResourceManager.GetString("Accept", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action succeeded.
        /// </summary>
        public static string ActionSucceeded {
            get {
                return ResourceManager.GetString("ActionSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}
        ///
        ///Error message: {1}.
        /// </summary>
        public static string App_ExceptionMessage {
            get {
                return ResourceManager.GetString("App_ExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string App_ExceptionMessageDefaultHeader {
            get {
                return ResourceManager.GetString("App_ExceptionMessageDefaultHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error has occurred..
        /// </summary>
        public static string App_ExceptionMessageDefaultMessage {
            get {
                return ResourceManager.GetString("App_ExceptionMessageDefaultMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application does not have the required permissions for this operation. Restart the app as administrator?.
        /// </summary>
        public static string App_RequiresAdminQuestion {
            get {
                return ResourceManager.GetString("App_RequiresAdminQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restart as Administrator.
        /// </summary>
        public static string App_RestartAsAdmin {
            get {
                return ResourceManager.GetString("App_RestartAsAdmin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman Control Panel.
        /// </summary>
        public static string AppName {
            get {
                return ResourceManager.GetString("AppName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman Control Panel (Administrator).
        /// </summary>
        public static string AppNameAdmin {
            get {
                return ResourceManager.GetString("AppNameAdmin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version History.
        /// </summary>
        public static string AppNews_Header {
            get {
                return ResourceManager.GetString("AppNews_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App News.
        /// </summary>
        public static string AppNews_Title {
            get {
                return ResourceManager.GetString("AppNews_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add files.
        /// </summary>
        public static string Archive_AddFiles {
            get {
                return ResourceManager.GetString("Archive_AddFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file &apos;{0}&apos; has the same name as an existing file. Do you want to replace it?.
        /// </summary>
        public static string Archive_AddFiles_Conflict {
            get {
                return ResourceManager.GetString("Archive_AddFiles_Conflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File name conflict.
        /// </summary>
        public static string Archive_AddFiles_ConflictHeader {
            get {
                return ResourceManager.GetString("Archive_AddFiles_ConflictHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} files have the same name as existing files. Do you want to replace them?
        ///
        ///Conflicts:
        ///{1}.
        /// </summary>
        public static string Archive_AddFiles_ConflictMultiple {
            get {
                return ResourceManager.GetString("Archive_AddFiles_ConflictMultiple", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when adding {0}.
        /// </summary>
        public static string Archive_AddFiles_Error {
            get {
                return ResourceManager.GetString("Archive_AddFiles_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select files to add.
        /// </summary>
        public static string Archive_AddFiles_Header {
            get {
                return ResourceManager.GetString("Archive_AddFiles_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adds the selected files to the directory.
        /// </summary>
        public static string Archive_AddFiles_Info {
            get {
                return ResourceManager.GetString("Archive_AddFiles_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding files.
        /// </summary>
        public static string Archive_AddFiles_Status {
            get {
                return ResourceManager.GetString("Archive_AddFiles_Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to automatically synchronize the game textures when a texture archive is repacked? Synchronizing is required for higher resolution textures to work in some levels. This can be changed at any time in the settings page..
        /// </summary>
        public static string Archive_AutoSyncCPATextures {
            get {
                return ResourceManager.GetString("Archive_AutoSyncCPATextures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Binary file editor.
        /// </summary>
        public static string Archive_BinaryEditor {
            get {
                return ResourceManager.GetString("Archive_BinaryEditor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy directory path.
        /// </summary>
        public static string Archive_CopyDirPath {
            get {
                return ResourceManager.GetString("Archive_CopyDirPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy file path.
        /// </summary>
        public static string Archive_CopyFilePath {
            get {
                return ResourceManager.GetString("Archive_CopyFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create directory.
        /// </summary>
        public static string Archive_CreateDir {
            get {
                return ResourceManager.GetString("Archive_CreateDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify a directory name.
        /// </summary>
        public static string Archive_CreateDir_Header {
            get {
                return ResourceManager.GetString("Archive_CreateDir_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creates a new empty directory.
        /// </summary>
        public static string Archive_CreateDir_Info {
            get {
                return ResourceManager.GetString("Archive_CreateDir_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when creating the archive.
        /// </summary>
        public static string Archive_CreateError {
            get {
                return ResourceManager.GetString("Archive_CreateError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified input directory does not exist.
        /// </summary>
        public static string Archive_CreateErrorInputNotFound {
            get {
                return ResourceManager.GetString("Archive_CreateErrorInputNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create Archive.
        /// </summary>
        public static string Archive_CreateHeader {
            get {
                return ResourceManager.GetString("Archive_CreateHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input directory.
        /// </summary>
        public static string Archive_CreateInputDir {
            get {
                return ResourceManager.GetString("Archive_CreateInputDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output file.
        /// </summary>
        public static string Archive_CreateOutputFile {
            get {
                return ResourceManager.GetString("Archive_CreateOutputFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packing archive.
        /// </summary>
        public static string Archive_CreateStatusPacking {
            get {
                return ResourceManager.GetString("Archive_CreateStatusPacking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The archive was successfully created with {0} files.
        /// </summary>
        public static string Archive_CreateSuccess {
            get {
                return ResourceManager.GetString("Archive_CreateSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred in the Archive Explorer and it had to close.
        /// </summary>
        public static string Archive_CriticalError {
            get {
                return ResourceManager.GetString("Archive_CriticalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        public static string Archive_Delete {
            get {
                return ResourceManager.GetString("Archive_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deletes the directory and all of its content, including files and sub-directories.
        /// </summary>
        public static string Archive_DeleteDir_Info {
            get {
                return ResourceManager.GetString("Archive_DeleteDir_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Binary.
        /// </summary>
        public static string Archive_EditBinary {
            get {
                return ResourceManager.GetString("Archive_EditBinary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Original.
        /// </summary>
        public static string Archive_Export_Format_Original {
            get {
                return ResourceManager.GetString("Archive_Export_Format_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export &amp; convert.
        /// </summary>
        public static string Archive_ExportConvert {
            get {
                return ResourceManager.GetString("Archive_ExportConvert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extracts all files in this directory, including any sub-directories, and allows the files to be converted.
        /// </summary>
        public static string Archive_ExportConvert_Info {
            get {
                return ResourceManager.GetString("Archive_ExportConvert_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected directory contains a file with the same name as {0}.
        /// </summary>
        public static string Archive_ExportDirFileConflict {
            get {
                return ResourceManager.GetString("Archive_ExportDirFileConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} could not be exported.
        /// </summary>
        public static string Archive_ExportError {
            get {
                return ResourceManager.GetString("Archive_ExportError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export.
        /// </summary>
        public static string Archive_ExportFile {
            get {
                return ResourceManager.GetString("Archive_ExportFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The files have been exported.
        /// </summary>
        public static string Archive_ExportFilesSuccess {
            get {
                return ResourceManager.GetString("Archive_ExportFilesSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file has been exported.
        /// </summary>
        public static string Archive_ExportFileSuccess {
            get {
                return ResourceManager.GetString("Archive_ExportFileSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select destination to export to.
        /// </summary>
        public static string Archive_ExportHeader {
            get {
                return ResourceManager.GetString("Archive_ExportHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exporting {0}.
        /// </summary>
        public static string Archive_ExportingFileStatus {
            get {
                return ResourceManager.GetString("Archive_ExportingFileStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extract.
        /// </summary>
        public static string Archive_Extract {
            get {
                return ResourceManager.GetString("Archive_Extract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extracts all files in this directory, including any sub-directories.
        /// </summary>
        public static string Archive_Extract_Info {
            get {
                return ResourceManager.GetString("Archive_Extract_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File editors.
        /// </summary>
        public static string Archive_FileEditors {
            get {
                return ResourceManager.GetString("Archive_FileEditors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Associated program.
        /// </summary>
        public static string Archive_FileEditorsExe {
            get {
                return ResourceManager.GetString("Archive_FileEditorsExe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File extension.
        /// </summary>
        public static string Archive_FileEditorsExt {
            get {
                return ResourceManager.GetString("Archive_FileEditorsExt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Extension Selection.
        /// </summary>
        public static string Archive_FileExtensionSelectionHeader {
            get {
                return ResourceManager.GetString("Archive_FileExtensionSelectionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select file extension to export as for {0} files.
        /// </summary>
        public static string Archive_FileExtensionSelectionInfoHeader {
            get {
                return ResourceManager.GetString("Archive_FileExtensionSelectionInfoHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory:.
        /// </summary>
        public static string Archive_FileInfo_Dir {
            get {
                return ResourceManager.GetString("Archive_FileInfo_Dir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Format:.
        /// </summary>
        public static string Archive_FileInfo_Format {
            get {
                return ResourceManager.GetString("Archive_FileInfo_Format", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transparent:.
        /// </summary>
        public static string Archive_FileInfo_Img_HasAlpha {
            get {
                return ResourceManager.GetString("Archive_FileInfo_Img_HasAlpha", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mipmaps:.
        /// </summary>
        public static string Archive_FileInfo_Img_Mipmaps {
            get {
                return ResourceManager.GetString("Archive_FileInfo_Img_Mipmaps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size:.
        /// </summary>
        public static string Archive_FileInfo_Img_Size {
            get {
                return ResourceManager.GetString("Archive_FileInfo_Img_Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compressed:.
        /// </summary>
        public static string Archive_FileInfo_IsComp {
            get {
                return ResourceManager.GetString("Archive_FileInfo_IsComp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encrypted:.
        /// </summary>
        public static string Archive_FileInfo_IsEncrypted {
            get {
                return ResourceManager.GetString("Archive_FileInfo_IsEncrypted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pointer:.
        /// </summary>
        public static string Archive_FileInfo_Pointer {
            get {
                return ResourceManager.GetString("Archive_FileInfo_Pointer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File size:.
        /// </summary>
        public static string Archive_FileInfo_Size {
            get {
                return ResourceManager.GetString("Archive_FileInfo_Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compressed file size:.
        /// </summary>
        public static string Archive_FileInfo_SizeComp {
            get {
                return ResourceManager.GetString("Archive_FileInfo_SizeComp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type:.
        /// </summary>
        public static string Archive_FileInfo_Type {
            get {
                return ResourceManager.GetString("Archive_FileInfo_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A file with the specified name already exists.
        /// </summary>
        public static string Archive_FileNameConflict {
            get {
                return ResourceManager.GetString("Archive_FileNameConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supported files.
        /// </summary>
        public static string Archive_FileSelectionGroupName {
            get {
                return ResourceManager.GetString("Archive_FileSelectionGroupName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File.
        /// </summary>
        public static string Archive_Format_Default {
            get {
                return ResourceManager.GetString("Archive_Format_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GF (Graphic File).
        /// </summary>
        public static string Archive_Format_GF {
            get {
                return ResourceManager.GetString("Archive_Format_GF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image.
        /// </summary>
        public static string Archive_Format_Img {
            get {
                return ResourceManager.GetString("Archive_Format_Img", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Original.
        /// </summary>
        public static string Archive_Format_Original {
            get {
                return ResourceManager.GetString("Archive_Format_Original", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sound.
        /// </summary>
        public static string Archive_Format_Snd {
            get {
                return ResourceManager.GetString("Archive_Format_Snd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import &amp; convert.
        /// </summary>
        public static string Archive_ImportConvert {
            get {
                return ResourceManager.GetString("Archive_ImportConvert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Imports any files with matching file names from the selected directory and converts them where possible to match the original format.
        /// </summary>
        public static string Archive_ImportConvert_Info {
            get {
                return ResourceManager.GetString("Archive_ImportConvert_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when importing the files.
        /// </summary>
        public static string Archive_ImportDir_Error {
            get {
                return ResourceManager.GetString("Archive_ImportDir_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Importing files.
        /// </summary>
        public static string Archive_ImportDir_Status {
            get {
                return ResourceManager.GetString("Archive_ImportDir_Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select directory to import.
        /// </summary>
        public static string Archive_ImportDirectoryHeader {
            get {
                return ResourceManager.GetString("Archive_ImportDirectoryHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import.
        /// </summary>
        public static string Archive_ImportFile {
            get {
                return ResourceManager.GetString("Archive_ImportFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when importing the file.
        /// </summary>
        public static string Archive_ImportFile_Error {
            get {
                return ResourceManager.GetString("Archive_ImportFile_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select file to import.
        /// </summary>
        public static string Archive_ImportFileHeader {
            get {
                return ResourceManager.GetString("Archive_ImportFileHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No files were found to import.
        /// </summary>
        public static string Archive_ImportNoFilesError {
            get {
                return ResourceManager.GetString("Archive_ImportNoFilesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compress entire block.
        /// </summary>
        public static string Archive_IPK_CompressEntireBlock {
            get {
                return ResourceManager.GetString("Archive_IPK_CompressEntireBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File extensions to compress.
        /// </summary>
        public static string Archive_IPK_CompressExtensions {
            get {
                return ResourceManager.GetString("Archive_IPK_CompressExtensions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Primary version.
        /// </summary>
        public static string Archive_R1PC_PrimaryVersion {
            get {
                return ResourceManager.GetString("Archive_R1PC_PrimaryVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Secondary version.
        /// </summary>
        public static string Archive_R1PC_SecondaryVersion {
            get {
                return ResourceManager.GetString("Archive_R1PC_SecondaryVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename.
        /// </summary>
        public static string Archive_Rename {
            get {
                return ResourceManager.GetString("Archive_Rename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when repacking the archive.
        /// </summary>
        public static string Archive_RepackError {
            get {
                return ResourceManager.GetString("Archive_RepackError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Repacking archive {0}.
        /// </summary>
        public static string Archive_RepackingStatus {
            get {
                return ResourceManager.GetString("Archive_RepackingStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace.
        /// </summary>
        public static string Archive_ReplaceFile {
            get {
                return ResourceManager.GetString("Archive_ReplaceFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when replacing the file.
        /// </summary>
        public static string Archive_ReplaceFile_Error {
            get {
                return ResourceManager.GetString("Archive_ReplaceFile_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select file to replace.
        /// </summary>
        public static string Archive_ReplaceFileHeader {
            get {
                return ResourceManager.GetString("Archive_ReplaceFileHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save Archive.
        /// </summary>
        public static string Archive_Save {
            get {
                return ResourceManager.GetString("Archive_Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search.
        /// </summary>
        public static string Archive_Search {
            get {
                return ResourceManager.GetString("Archive_Search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select an executable to use for {0} files.
        /// </summary>
        public static string Archive_SelectEditExe {
            get {
                return ResourceManager.GetString("Archive_SelectEditExe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify a file name.
        /// </summary>
        public static string Archive_SetFileName {
            get {
                return ResourceManager.GetString("Archive_SetFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort.
        /// </summary>
        public static string Archive_Sort {
            get {
                return ResourceManager.GetString("Archive_Sort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alphabetically (descending).
        /// </summary>
        public static string Archive_Sort_AlphabeticalDescending {
            get {
                return ResourceManager.GetString("Archive_Sort_AlphabeticalDescending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alphabetically (ascending).
        /// </summary>
        public static string Archive_Sort_AlphabeticallyAscending {
            get {
                return ResourceManager.GetString("Archive_Sort_AlphabeticallyAscending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default.
        /// </summary>
        public static string Archive_Sort_Default {
            get {
                return ResourceManager.GetString("Archive_Sort_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} files.
        /// </summary>
        public static string Archive_Status_FilesCount {
            get {
                return ResourceManager.GetString("Archive_Status_FilesCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} files selected.
        /// </summary>
        public static string Archive_Status_SelectedFilesCount {
            get {
                return ResourceManager.GetString("Archive_Status_SelectedFilesCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Archive Explorer.
        /// </summary>
        public static string Archive_Title {
            get {
                return ResourceManager.GetString("Archive_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View/Edit.
        /// </summary>
        public static string Archive_ViewEditFile {
            get {
                return ResourceManager.GetString("Archive_ViewEditFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when opening the file for editing.
        /// </summary>
        public static string Archive_ViewEditFileError {
            get {
                return ResourceManager.GetString("Archive_ViewEditFileError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup.
        /// </summary>
        public static string Backup_Backup {
            get {
                return ResourceManager.GetString("Backup_Backup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup All.
        /// </summary>
        public static string Backup_BackupAll {
            get {
                return ResourceManager.GetString("Backup_BackupAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}/{1} games were backed up.
        /// </summary>
        public static string Backup_BackupAllFailed {
            get {
                return ResourceManager.GetString("Backup_BackupAllFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some games were not backed up.
        /// </summary>
        public static string Backup_BackupAllFailedHeader {
            get {
                return ResourceManager.GetString("Backup_BackupAllFailedHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All games were successfully backed up.
        /// </summary>
        public static string Backup_BackupAllSuccess {
            get {
                return ResourceManager.GetString("Backup_BackupAllSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compress backups.
        /// </summary>
        public static string Backup_Compress {
            get {
                return ResourceManager.GetString("Backup_Compress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compressed backups will take less space and be easier to manage due to being in a single file for each game. The change will go into effect the next time a backup is performed..
        /// </summary>
        public static string Backup_CompressInfo {
            get {
                return ResourceManager.GetString("Backup_CompressInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will replace any previous backups for {0}.
        /// </summary>
        public static string Backup_Confirm {
            get {
                return ResourceManager.GetString("Backup_Confirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to back up all games? This will replace any previous backups. Continue?.
        /// </summary>
        public static string Backup_ConfirmBackupAll {
            get {
                return ResourceManager.GetString("Backup_ConfirmBackupAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm Backups.
        /// </summary>
        public static string Backup_ConfirmBackupAllHeader {
            get {
                return ResourceManager.GetString("Backup_ConfirmBackupAllHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm backup.
        /// </summary>
        public static string Backup_ConfirmHeader {
            get {
                return ResourceManager.GetString("Backup_ConfirmHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup failed for {0}.
        /// </summary>
        public static string Backup_Failed {
            get {
                return ResourceManager.GetString("Backup_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup failed.
        /// </summary>
        public static string Backup_FailedHeader {
            get {
                return ResourceManager.GetString("Backup_FailedHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last backup.
        /// </summary>
        public static string Backup_LastBackupDate {
            get {
                return ResourceManager.GetString("Backup_LastBackupDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup size.
        /// </summary>
        public static string Backup_LastBackupSize {
            get {
                return ResourceManager.GetString("Backup_LastBackupSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup for {0} could not finish due to not all specified directories being found.
        /// </summary>
        public static string Backup_MissingDirectoriesError {
            get {
                return ResourceManager.GetString("Backup_MissingDirectoriesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No files were found to backup for {0}.
        /// </summary>
        public static string Backup_MissingFilesError {
            get {
                return ResourceManager.GetString("Backup_MissingFilesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore.
        /// </summary>
        public static string Backup_Restore {
            get {
                return ResourceManager.GetString("Backup_Restore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your save files for {0} were successfully backed up.
        /// </summary>
        public static string Backup_Success {
            get {
                return ResourceManager.GetString("Backup_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup successful.
        /// </summary>
        public static string Backup_SuccessHeader {
            get {
                return ResourceManager.GetString("Backup_SuccessHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.
        /// </summary>
        public static string Bool_False {
            get {
                return ResourceManager.GetString("Bool_False", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes.
        /// </summary>
        public static string Bool_True {
            get {
                return ResourceManager.GetString("Bool_True", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select destination.
        /// </summary>
        public static string Browse_DestinationHeader {
            get {
                return ResourceManager.GetString("Browse_DestinationHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save a file.
        /// </summary>
        public static string Browse_SaveFile {
            get {
                return ResourceManager.GetString("Browse_SaveFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a folder.
        /// </summary>
        public static string Browse_SelectDir {
            get {
                return ResourceManager.GetString("Browse_SelectDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a drive.
        /// </summary>
        public static string Browse_SelectDrive {
            get {
                return ResourceManager.GetString("Browse_SelectDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a file.
        /// </summary>
        public static string Browse_SelectFile {
            get {
                return ResourceManager.GetString("Browse_SelectFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse.
        /// </summary>
        public static string BrowseBox_Browse {
            get {
                return ResourceManager.GetString("BrowseBox_Browse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory does not exist.
        /// </summary>
        public static string BrowseBox_ValidationError_DirExists {
            get {
                return ResourceManager.GetString("BrowseBox_ValidationError_DirExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Field is required.
        /// </summary>
        public static string BrowseBox_ValidationError_Empty {
            get {
                return ResourceManager.GetString("BrowseBox_ValidationError_Empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file does not exist.
        /// </summary>
        public static string BrowseBox_ValidationError_FileExists {
            get {
                return ResourceManager.GetString("BrowseBox_ValidationError_FileExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        public static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action.
        /// </summary>
        public static string Config_Action_Action {
            get {
                return ResourceManager.GetString("Config_Action_Action", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Center camera.
        /// </summary>
        public static string Config_Action_CamCenter {
            get {
                return ResourceManager.GetString("Config_Action_CamCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Camera left.
        /// </summary>
        public static string Config_Action_CamLeft {
            get {
                return ResourceManager.GetString("Config_Action_CamLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Camera right.
        /// </summary>
        public static string Config_Action_CamRight {
            get {
                return ResourceManager.GetString("Config_Action_CamRight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        public static string Config_Action_Cancel {
            get {
                return ResourceManager.GetString("Config_Action_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Swim down.
        /// </summary>
        public static string Config_Action_Config_Action_SwimDown {
            get {
                return ResourceManager.GetString("Config_Action_Config_Action_SwimDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm.
        /// </summary>
        public static string Config_Action_Confirm {
            get {
                return ResourceManager.GetString("Config_Action_Confirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Down.
        /// </summary>
        public static string Config_Action_Down {
            get {
                return ResourceManager.GetString("Config_Action_Down", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fist.
        /// </summary>
        public static string Config_Action_Fist {
            get {
                return ResourceManager.GetString("Config_Action_Fist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show HUD.
        /// </summary>
        public static string Config_Action_HUD {
            get {
                return ResourceManager.GetString("Config_Action_HUD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jump.
        /// </summary>
        public static string Config_Action_Jump {
            get {
                return ResourceManager.GetString("Config_Action_Jump", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jump / Swim up.
        /// </summary>
        public static string Config_Action_JumpSwimUp {
            get {
                return ResourceManager.GetString("Config_Action_JumpSwimUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Left.
        /// </summary>
        public static string Config_Action_Left {
            get {
                return ResourceManager.GetString("Config_Action_Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Look mode.
        /// </summary>
        public static string Config_Action_Look {
            get {
                return ResourceManager.GetString("Config_Action_Look", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Knowledge of the World.
        /// </summary>
        public static string Config_Action_R2Guide {
            get {
                return ResourceManager.GetString("Config_Action_R2Guide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Right.
        /// </summary>
        public static string Config_Action_Right {
            get {
                return ResourceManager.GetString("Config_Action_Right", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Screenshot.
        /// </summary>
        public static string Config_Action_Screenshot {
            get {
                return ResourceManager.GetString("Config_Action_Screenshot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shoot.
        /// </summary>
        public static string Config_Action_Shoot {
            get {
                return ResourceManager.GetString("Config_Action_Shoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Strafe.
        /// </summary>
        public static string Config_Action_Strafe {
            get {
                return ResourceManager.GetString("Config_Action_Strafe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Up.
        /// </summary>
        public static string Config_Action_Up {
            get {
                return ResourceManager.GetString("Config_Action_Up", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Walk slowly.
        /// </summary>
        public static string Config_Action_WalkSlow {
            get {
                return ResourceManager.GetString("Config_Action_WalkSlow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Background.
        /// </summary>
        public static string Config_Background {
            get {
                return ResourceManager.GetString("Config_Background", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Border.
        /// </summary>
        public static string Config_Border {
            get {
                return ResourceManager.GetString("Config_Border", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Button Mapping (keyboard).
        /// </summary>
        public static string Config_ButtonMapping {
            get {
                return ResourceManager.GetString("Config_ButtonMapping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action.
        /// </summary>
        public static string Config_ButtonMappingActionHeader {
            get {
                return ResourceManager.GetString("Config_ButtonMappingActionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to As the game doesn&apos;t allow native button remapping you change it here. This will not work for controllers..
        /// </summary>
        public static string Config_ButtonMappingInfo {
            get {
                return ResourceManager.GetString("Config_ButtonMappingInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key.
        /// </summary>
        public static string Config_ButtonMappingKeyHeader {
            get {
                return ResourceManager.GetString("Config_ButtonMappingKeyHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset.
        /// </summary>
        public static string Config_ButtonMappingReset {
            get {
                return ResourceManager.GetString("Config_ButtonMappingReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character.
        /// </summary>
        public static string Config_CharacterHeader {
            get {
                return ResourceManager.GetString("Config_CharacterHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selecting a character here will change the currently selected character in the game. The last two Teensy characters can only be set from here as there is no option to do so in the game..
        /// </summary>
        public static string Config_CharacterHeaderRJRInfo {
            get {
                return ResourceManager.GetString("Config_CharacterHeaderRJRInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cheats.
        /// </summary>
        public static string Config_Cheats {
            get {
                return ResourceManager.GetString("Config_Cheats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compressed.
        /// </summary>
        public static string Config_Compressed {
            get {
                return ResourceManager.GetString("Config_Compressed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller.
        /// </summary>
        public static string Config_Controller {
            get {
                return ResourceManager.GetString("Config_Controller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Horizontal Axis.
        /// </summary>
        public static string Config_ControllerHorizontal {
            get {
                return ResourceManager.GetString("Config_ControllerHorizontal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If your controller is not recognized you can enable controller support here.
        /// </summary>
        public static string Config_ControllerInfo {
            get {
                return ResourceManager.GetString("Config_ControllerInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If your controller is not recognized you can enable controller support here. This will remove any custom button mapping..
        /// </summary>
        public static string Config_ControllerR2Info {
            get {
                return ResourceManager.GetString("Config_ControllerR2Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vertical Axis.
        /// </summary>
        public static string Config_ControllerVertical {
            get {
                return ResourceManager.GetString("Config_ControllerVertical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls.
        /// </summary>
        public static string Config_Controls {
            get {
                return ResourceManager.GetString("Config_Controls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device.
        /// </summary>
        public static string Config_Device {
            get {
                return ResourceManager.GetString("Config_Device", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cards.
        /// </summary>
        public static string Config_Device_Cards {
            get {
                return ResourceManager.GetString("Config_Device_Cards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dma.
        /// </summary>
        public static string Config_Device_Dma {
            get {
                return ResourceManager.GetString("Config_Device_Dma", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Device ID.
        /// </summary>
        public static string Config_Device_ID {
            get {
                return ResourceManager.GetString("Config_Device_ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Irq.
        /// </summary>
        public static string Config_Device_Irq {
            get {
                return ResourceManager.GetString("Config_Device_Irq", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Param.
        /// </summary>
        public static string Config_Device_Param {
            get {
                return ResourceManager.GetString("Config_Device_Param", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port.
        /// </summary>
        public static string Config_Device_Port {
            get {
                return ResourceManager.GetString("Config_Device_Port", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable disc checking.
        /// </summary>
        public static string Config_DisableDiscCheck {
            get {
                return ResourceManager.GetString("Config_DisableDiscCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disc Check.
        /// </summary>
        public static string Config_DiscCheck {
            get {
                return ResourceManager.GetString("Config_DiscCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disabling the disc checking allows the game to be played without having to insert the game disc.
        /// </summary>
        public static string Config_DiscCheckInfo {
            get {
                return ResourceManager.GetString("Config_DiscCheckInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when saving your DOSBox configuration.
        /// </summary>
        public static string Config_DosBoxSaveError {
            get {
                return ResourceManager.GetString("Config_DosBoxSaveError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable native controller support.
        /// </summary>
        public static string Config_EnableNativeController {
            get {
                return ResourceManager.GetString("Config_EnableNativeController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Frame Rate.
        /// </summary>
        public static string Config_FPS {
            get {
                return ResourceManager.GetString("Config_FPS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fullscreen.
        /// </summary>
        public static string Config_Fullscreen {
            get {
                return ResourceManager.GetString("Config_Fullscreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Makes the game run in fullscreen, otherwise it&apos;ll run in windowed mode.
        /// </summary>
        public static string Config_FullscreenInfo {
            get {
                return ResourceManager.GetString("Config_FullscreenInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gamepad.
        /// </summary>
        public static string Config_GamePad {
            get {
                return ResourceManager.GetString("Config_GamePad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Graphics.
        /// </summary>
        public static string Config_Graphics {
            get {
                return ResourceManager.GetString("Config_Graphics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No valid ubi.ini file was found and creating a new one failed. Try running the program as administrator or changing the folder permissions for the following path: {0}.
        /// </summary>
        public static string Config_InvalidUbiIni {
            get {
                return ResourceManager.GetString("Config_InvalidUbiIni", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        public static string Config_Language {
            get {
                return ResourceManager.GetString("Config_Language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This sets the default language selected when launching the game. The language can still be changed from the game menu..
        /// </summary>
        public static string Config_LanguageR2Info {
            get {
                return ResourceManager.GetString("Config_LanguageR2Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mono.
        /// </summary>
        public static string Config_Mono {
            get {
                return ResourceManager.GetString("Config_Mono", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Music.
        /// </summary>
        public static string Config_Music {
            get {
                return ResourceManager.GetString("Config_Music", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Music Volume.
        /// </summary>
        public static string Config_MusicVolumeHeader {
            get {
                return ResourceManager.GetString("Config_MusicVolumeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Network.
        /// </summary>
        public static string Config_Network {
            get {
                return ResourceManager.GetString("Config_Network", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The applied patch is outdated. Keep the patch enabled and save to update it to the newest version..
        /// </summary>
        public static string Config_OutdatedPatchNotice {
            get {
                return ResourceManager.GetString("Config_OutdatedPatchNotice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resolution.
        /// </summary>
        public static string Config_Resolution {
            get {
                return ResourceManager.GetString("Config_Resolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the widescreen support is not enabled the game will stretch if set to an aspect ratio other than 4:3.
        /// </summary>
        public static string Config_ResolutionR2Info {
            get {
                return ResourceManager.GetString("Config_ResolutionR2Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dark Rayman.
        /// </summary>
        public static string Config_RJRHeroes_DarkRayman {
            get {
                return ResourceManager.GetString("Config_RJRHeroes_DarkRayman", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Globox.
        /// </summary>
        public static string Config_RJRHeroes_Globox {
            get {
                return ResourceManager.GetString("Config_RJRHeroes_Globox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Globox Outfit.
        /// </summary>
        public static string Config_RJRHeroes_GloboxOutfit {
            get {
                return ResourceManager.GetString("Config_RJRHeroes_GloboxOutfit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Goth Teensy.
        /// </summary>
        public static string Config_RJRHeroes_GothTeensy {
            get {
                return ResourceManager.GetString("Config_RJRHeroes_GothTeensy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Green Teensy.
        /// </summary>
        public static string Config_RJRHeroes_GreenTeensy {
            get {
                return ResourceManager.GetString("Config_RJRHeroes_GreenTeensy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman.
        /// </summary>
        public static string Config_RJRHeroes_Rayman {
            get {
                return ResourceManager.GetString("Config_RJRHeroes_Rayman", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cheats will go into effect when first loading a map. Sometimes it is also required to return to the menu afterwards for everything to update..
        /// </summary>
        public static string Config_RRRCheatsInfo {
            get {
                return ResourceManager.GetString("Config_RRRCheatsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mirror camera.
        /// </summary>
        public static string Config_RRRInvertHor {
            get {
                return ResourceManager.GetString("Config_RRRInvertHor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Old movie.
        /// </summary>
        public static string Config_RRROldMovie {
            get {
                return ResourceManager.GetString("Config_RRROldMovie", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Screen Mode.
        /// </summary>
        public static string Config_RRRScreenMode {
            get {
                return ResourceManager.GetString("Config_RRRScreenMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 16:9.
        /// </summary>
        public static string Config_RRRScreenMode_16_9 {
            get {
                return ResourceManager.GetString("Config_RRRScreenMode_16_9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 4:3.
        /// </summary>
        public static string Config_RRRScreenMode_4_3 {
            get {
                return ResourceManager.GetString("Config_RRRScreenMode_4_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 4:3 borders.
        /// </summary>
        public static string Config_RRRScreenMode_4_3Borders {
            get {
                return ResourceManager.GetString("Config_RRRScreenMode_4_3Borders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The screen mode options will behave differently depending on the selected resolution. Usually keeping the 4:3 mode enabled will allow the game not to be stretched on different aspect ratios..
        /// </summary>
        public static string Config_RRRScreenModeInfo {
            get {
                return ResourceManager.GetString("Config_RRRScreenModeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when saving your {0} configuration.
        /// </summary>
        public static string Config_SaveError {
            get {
                return ResourceManager.GetString("Config_SaveError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error saving.
        /// </summary>
        public static string Config_SaveErrorHeader {
            get {
                return ResourceManager.GetString("Config_SaveErrorHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when saving your Rayman Raving Rabbids configuration.
        /// </summary>
        public static string Config_SaveRRRError {
            get {
                return ResourceManager.GetString("Config_SaveRRRError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your changes have been saved.
        /// </summary>
        public static string Config_SaveSuccess {
            get {
                return ResourceManager.GetString("Config_SaveSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when saving. Not all changes have been saved..
        /// </summary>
        public static string Config_SaveWarning {
            get {
                return ResourceManager.GetString("Config_SaveWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Parallax Background.
        /// </summary>
        public static string Config_ScrollBackground {
            get {
                return ResourceManager.GetString("Config_ScrollBackground", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected Save Slot.
        /// </summary>
        public static string Config_SelectedSlotHeader {
            get {
                return ResourceManager.GetString("Config_SelectedSlotHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show HUD.
        /// </summary>
        public static string Config_ShowHUD {
            get {
                return ResourceManager.GetString("Config_ShowHUD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sound.
        /// </summary>
        public static string Config_Sound {
            get {
                return ResourceManager.GetString("Config_Sound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sound Volume.
        /// </summary>
        public static string Config_SoundVolumeHeader {
            get {
                return ResourceManager.GetString("Config_SoundVolumeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stereo.
        /// </summary>
        public static string Config_Stereo {
            get {
                return ResourceManager.GetString("Config_Stereo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Textures.
        /// </summary>
        public static string Config_Textures {
            get {
                return ResourceManager.GetString("Config_Textures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 16 bit.
        /// </summary>
        public static string Config_Textures16 {
            get {
                return ResourceManager.GetString("Config_Textures16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 32 bit.
        /// </summary>
        public static string Config_Textures32 {
            get {
                return ResourceManager.GetString("Config_Textures32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transform and Lighting.
        /// </summary>
        public static string Config_TnL {
            get {
                return ResourceManager.GetString("Config_TnL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uncheck this if there are graphical glitches in the game.
        /// </summary>
        public static string Config_TnLInfo {
            get {
                return ResourceManager.GetString("Config_TnLInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TriLinear.
        /// </summary>
        public static string Config_TriLinear {
            get {
                return ResourceManager.GetString("Config_TriLinear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use connected controller.
        /// </summary>
        public static string Config_UseController {
            get {
                return ResourceManager.GetString("Config_UseController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vertical widescreen.
        /// </summary>
        public static string Config_VerticalHorizontal {
            get {
                return ResourceManager.GetString("Config_VerticalHorizontal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Video.
        /// </summary>
        public static string Config_Video {
            get {
                return ResourceManager.GetString("Config_Video", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 16 bits per pixel.
        /// </summary>
        public static string Config_Video16Bpp {
            get {
                return ResourceManager.GetString("Config_Video16Bpp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 32 bits per pixel.
        /// </summary>
        public static string Config_Video32Bpp {
            get {
                return ResourceManager.GetString("Config_Video32Bpp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto adjust quality.
        /// </summary>
        public static string Config_VideoAuto {
            get {
                return ResourceManager.GetString("Config_VideoAuto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bad quality.
        /// </summary>
        public static string Config_VideoBad {
            get {
                return ResourceManager.GetString("Config_VideoBad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Good quality.
        /// </summary>
        public static string Config_VideoGood {
            get {
                return ResourceManager.GetString("Config_VideoGood", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Voices Volume.
        /// </summary>
        public static string Config_VolumeVoices {
            get {
                return ResourceManager.GetString("Config_VolumeVoices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to V-Sync.
        /// </summary>
        public static string Config_VSync {
            get {
                return ResourceManager.GetString("Config_VSync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Horizontal widescreen.
        /// </summary>
        public static string Config_WidescreenHorizontal {
            get {
                return ResourceManager.GetString("Config_WidescreenHorizontal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make the widescreen expand horizontally.
        /// </summary>
        public static string Config_WidescreenHorizontalInfo {
            get {
                return ResourceManager.GetString("Config_WidescreenHorizontalInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Widescreen support.
        /// </summary>
        public static string Config_WidescreenSupport {
            get {
                return ResourceManager.GetString("Config_WidescreenSupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Widescreen support ensures that the game is not stretched when running in an aspect ratio other than 4:3.
        /// </summary>
        public static string Config_WidescreenSupportInfo {
            get {
                return ResourceManager.GetString("Config_WidescreenSupportInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make the widescreen shrink vertically.
        /// </summary>
        public static string Config_WidescreenVerticalInfo {
            get {
                return ResourceManager.GetString("Config_WidescreenVerticalInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to reset the app settings? This can not be undone..
        /// </summary>
        public static string ConfirmResetData {
            get {
                return ResourceManager.GetString("ConfirmResetData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm reset.
        /// </summary>
        public static string ConfirmResetDataHeader {
            get {
                return ResourceManager.GetString("ConfirmResetDataHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy.
        /// </summary>
        public static string ContextMenu_Copy {
            get {
                return ResourceManager.GetString("ContextMenu_Copy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cut.
        /// </summary>
        public static string ContextMenu_Cut {
            get {
                return ResourceManager.GetString("ContextMenu_Cut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Location.
        /// </summary>
        public static string ContextMenu_OpenLocation {
            get {
                return ResourceManager.GetString("ContextMenu_OpenLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paste.
        /// </summary>
        public static string ContextMenu_Paste {
            get {
                return ResourceManager.GetString("ContextMenu_Paste", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Redo.
        /// </summary>
        public static string ContextMenu_Redo {
            get {
                return ResourceManager.GetString("ContextMenu_Redo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Undo.
        /// </summary>
        public static string ContextMenu_Undo {
            get {
                return ResourceManager.GetString("ContextMenu_Undo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue.
        /// </summary>
        public static string Continue {
            get {
                return ResourceManager.GetString("Continue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug.
        /// </summary>
        public static string DebugPageHeader {
            get {
                return ResourceManager.GetString("DebugPageHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when setting up the additional required files. Certain features of the program might not function like intended. It is recommended to attempt to restart the program..
        /// </summary>
        public static string DeployFilesError {
            get {
                return ResourceManager.GetString("DeployFilesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The available languages may vary between releases.
        /// </summary>
        public static string DosBoxConfig_LanguageInfo {
            get {
                return ResourceManager.GetString("DosBoxConfig_LanguageInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cycles value is not in a valid format.
        /// </summary>
        public static string DosBoxCyclesValidation_InvalidFormat {
            get {
                return ResourceManager.GetString("DosBoxCyclesValidation_InvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only digits are allowed when using a specified value.
        /// </summary>
        public static string DosBoxCyclesValidation_NonDigit {
            get {
                return ResourceManager.GetString("DosBoxCyclesValidation_NonDigit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cycles value can not be empty.
        /// </summary>
        public static string DosBoxCyclesValidation_NullOrEmpty {
            get {
                return ResourceManager.GetString("DosBoxCyclesValidation_NullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aspect ratio correction.
        /// </summary>
        public static string DosBoxOptions_AspectCorrection {
            get {
                return ResourceManager.GetString("DosBoxOptions_AspectCorrection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do aspect correction, if your output method doesn&apos;t support scaling this can slow things down!.
        /// </summary>
        public static string DosBoxOptions_AspectCorrectionInfo {
            get {
                return ResourceManager.GetString("DosBoxOptions_AspectCorrectionInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DOSBox commands.
        /// </summary>
        public static string DosBoxOptions_Commands {
            get {
                return ResourceManager.GetString("DosBoxOptions_Commands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Optional).
        /// </summary>
        public static string DosBoxOptions_CommandsOptional {
            get {
                return ResourceManager.GetString("DosBoxOptions_CommandsOptional", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Core.
        /// </summary>
        public static string DosBoxOptions_Core {
            get {
                return ResourceManager.GetString("DosBoxOptions_Core", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CPU Core used in emulation. Auto switches from normal to dynamic if appropriate..
        /// </summary>
        public static string DosBoxOptions_CoreInfo {
            get {
                return ResourceManager.GetString("DosBoxOptions_CoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cycles.
        /// </summary>
        public static string DosBoxOptions_Cycles {
            get {
                return ResourceManager.GetString("DosBoxOptions_Cycles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Amount of instructions DOSBox tries to emulate each millisecond. Setting this value too high results in sound dropouts and lags. You can also let DOSBox guess the correct value by setting it to max. The default setting (auto) switches to max if appropriate..
        /// </summary>
        public static string DosBoxOptions_CyclesInfo {
            get {
                return ResourceManager.GetString("DosBoxOptions_CyclesInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Frameskip.
        /// </summary>
        public static string DosBoxOptions_Frameskip {
            get {
                return ResourceManager.GetString("DosBoxOptions_Frameskip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How many frames DOSBox skips before drawing one.
        /// </summary>
        public static string DosBoxOptions_FrameskipInfo {
            get {
                return ResourceManager.GetString("DosBoxOptions_FrameskipInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fullscreen.
        /// </summary>
        public static string DosBoxOptions_Fullscreeen {
            get {
                return ResourceManager.GetString("DosBoxOptions_Fullscreeen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start DOSBox directly in fullscreen.
        /// </summary>
        public static string DosBoxOptions_FullscreeenInfo {
            get {
                return ResourceManager.GetString("DosBoxOptions_FullscreeenInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fullscreen double buffering.
        /// </summary>
        public static string DosBoxOptions_FullscreenDubbleBuffering {
            get {
                return ResourceManager.GetString("DosBoxOptions_FullscreenDubbleBuffering", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use double buffering in fullscreen.
        /// </summary>
        public static string DosBoxOptions_FullscreenDubbleBufferingInfo {
            get {
                return ResourceManager.GetString("DosBoxOptions_FullscreenDubbleBufferingInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fullscreen resolution.
        /// </summary>
        public static string DosBoxOptions_FullscreenRes {
            get {
                return ResourceManager.GetString("DosBoxOptions_FullscreenRes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to What resolution to use for fullscreen: original, desktop or fixed size (e.g. 1024x768).
        /// </summary>
        public static string DosBoxOptions_FullscreenResInfo {
            get {
                return ResourceManager.GetString("DosBoxOptions_FullscreenResInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Memory Size.
        /// </summary>
        public static string DosBoxOptions_MemorySize {
            get {
                return ResourceManager.GetString("DosBoxOptions_MemorySize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Amount of memory DOSBox has in megabytes.
        /// </summary>
        public static string DosBoxOptions_MemorySizeInfo {
            get {
                return ResourceManager.GetString("DosBoxOptions_MemorySizeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output.
        /// </summary>
        public static string DosBoxOptions_Output {
            get {
                return ResourceManager.GetString("DosBoxOptions_Output", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to What to use for output.
        /// </summary>
        public static string DosBoxOptions_OutputInfo {
            get {
                return ResourceManager.GetString("DosBoxOptions_OutputInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use recommended settings.
        /// </summary>
        public static string DosBoxOptions_Recommended {
            get {
                return ResourceManager.GetString("DosBoxOptions_Recommended", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scaler.
        /// </summary>
        public static string DosBoxOptions_Scaler {
            get {
                return ResourceManager.GetString("DosBoxOptions_Scaler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scaler used to enlarge/enhance low resolution modes.
        /// </summary>
        public static string DosBoxOptions_ScalerInfo {
            get {
                return ResourceManager.GetString("DosBoxOptions_ScalerInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windowed resolution.
        /// </summary>
        public static string DosBoxOptions_WindowedRes {
            get {
                return ResourceManager.GetString("DosBoxOptions_WindowedRes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scale the window to this size IF the output device supports hardware scaling.
        /// </summary>
        public static string DosBoxOptions_WindowedResInfo {
            get {
                return ResourceManager.GetString("DosBoxOptions_WindowedResInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The character &apos;{0}&apos; is not valid.
        /// </summary>
        public static string DosBoxResolutionValidation_InvalidCharacter {
            get {
                return ResourceManager.GetString("DosBoxResolutionValidation_InvalidCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid format.
        /// </summary>
        public static string DosBoxResolutionValidation_InvalidFormat {
            get {
                return ResourceManager.GetString("DosBoxResolutionValidation_InvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A valid height must be specified.
        /// </summary>
        public static string DosBoxResolutionValidation_InvalidHeight {
            get {
                return ResourceManager.GetString("DosBoxResolutionValidation_InvalidHeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resolution separator &apos;x&apos; must be used.
        /// </summary>
        public static string DosBoxResolutionValidation_MissingSeparator {
            get {
                return ResourceManager.GetString("DosBoxResolutionValidation_MissingSeparator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resolution separator &apos;x&apos; can only be used once.
        /// </summary>
        public static string DosBoxResolutionValidation_MultipleSeparators {
            get {
                return ResourceManager.GetString("DosBoxResolutionValidation_MultipleSeparators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The resolution value can not be empty.
        /// </summary>
        public static string DosBoxResolutionValidation_NullOrEmpty {
            get {
                return ResourceManager.GetString("DosBoxResolutionValidation_NullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DOSBox Settings.
        /// </summary>
        public static string DosBoxSettingsHeader {
            get {
                return ResourceManager.GetString("DosBoxSettingsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting one of the below options to disabled or empty will use the default value specified in the DOSBox configuration file. If a specific configuration file has been specified in the settings it may overwrite some of the settings below..
        /// </summary>
        public static string DosBoxSettingsInfo {
            get {
                return ResourceManager.GetString("DosBoxSettingsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are using an older version of the program ({0}) compared to the version of the current app data ({1}). This is not recommended and may cause compatibility issues. These may be fixed by resetting the app data for this program..
        /// </summary>
        public static string DowngradeWarning {
            get {
                return ResourceManager.GetString("DowngradeWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downgrade detected.
        /// </summary>
        public static string DowngradeWarningHeader {
            get {
                return ResourceManager.GetString("DowngradeWarningHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you wish to cancel the download?.
        /// </summary>
        public static string Download_Cancel {
            get {
                return ResourceManager.GetString("Download_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The download operation was canceled.
        /// </summary>
        public static string Download_Canceled {
            get {
                return ResourceManager.GetString("Download_Canceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operation canceled.
        /// </summary>
        public static string Download_CanceledHeader {
            get {
                return ResourceManager.GetString("Download_CanceledHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel ongoing download.
        /// </summary>
        public static string Download_CancelHeader {
            get {
                return ResourceManager.GetString("Download_CancelHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This patch requires its files to be downloaded. Continue?.
        /// </summary>
        public static string Download_Confirm {
            get {
                return ResourceManager.GetString("Download_Confirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm download.
        /// </summary>
        public static string Download_ConfirmHeader {
            get {
                return ResourceManager.GetString("Download_ConfirmHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This patch requires its files to be downloaded. The total size of the download is {0}. Continue?.
        /// </summary>
        public static string Download_ConfirmSize {
            get {
                return ResourceManager.GetString("Download_ConfirmSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current File Progress.
        /// </summary>
        public static string Download_CurrentFileProgress {
            get {
                return ResourceManager.GetString("Download_CurrentFileProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The files could not be downloaded.
        /// </summary>
        public static string Download_Error {
            get {
                return ResourceManager.GetString("Download_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The download operation failed.
        /// </summary>
        public static string Download_Failed {
            get {
                return ResourceManager.GetString("Download_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operation failed.
        /// </summary>
        public static string Download_FailedHeader {
            get {
                return ResourceManager.GetString("Download_FailedHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download Files.
        /// </summary>
        public static string Download_ManualDownload {
            get {
                return ResourceManager.GetString("Download_ManualDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manual Download.
        /// </summary>
        public static string Download_ManualHeader {
            get {
                return ResourceManager.GetString("Download_ManualHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download files:
        ///
        ///1. Press the download button to manually download the files.
        ///2. Move the files to the destination directory. If they&apos;re compressed, extract them.
        ///3. Press &apos;Ok&apos; to continue..
        /// </summary>
        public static string Download_ManualInstructions {
            get {
                return ResourceManager.GetString("Download_ManualInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Destination Directory.
        /// </summary>
        public static string Download_ManualOpenDestination {
            get {
                return ResourceManager.GetString("Download_ManualOpenDestination", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No files were found to download.
        /// </summary>
        public static string Download_NoFilesFound {
            get {
                return ResourceManager.GetString("Download_NoFilesFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation is currently canceling.
        /// </summary>
        public static string Download_OperationCanceling {
            get {
                return ResourceManager.GetString("Download_OperationCanceling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel request already received.
        /// </summary>
        public static string Download_OperationCancelingHeader {
            get {
                return ResourceManager.GetString("Download_OperationCancelingHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some files could not be restored. Check {0} &amp; {1} to recover lost files..
        /// </summary>
        public static string Download_RestoreStoppedDownloadError {
            get {
                return ResourceManager.GetString("Download_RestoreStoppedDownloadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The files were downloaded successfully.
        /// </summary>
        public static string Download_Success {
            get {
                return ResourceManager.GetString("Download_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download operation complete.
        /// </summary>
        public static string Download_SuccessHeader {
            get {
                return ResourceManager.GetString("Download_SuccessHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download.
        /// </summary>
        public static string Download_Title {
            get {
                return ResourceManager.GetString("Download_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total Progress.
        /// </summary>
        public static string Download_TotalProgress {
            get {
                return ResourceManager.GetString("Download_TotalProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This game requires its files to be downloaded. Continue?.
        /// </summary>
        public static string DownloadGame_Confirm {
            get {
                return ResourceManager.GetString("DownloadGame_Confirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This game requires its files to be downloaded. The total size of the download is {0}. Continue?.
        /// </summary>
        public static string DownloadGame_ConfirmSize {
            get {
                return ResourceManager.GetString("DownloadGame_ConfirmSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when finding available drives.
        /// </summary>
        public static string DriveSelection_RefreshError {
            get {
                return ResourceManager.GetString("DriveSelection_RefreshError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        public static string EmuSelection_None {
            get {
                return ResourceManager.GetString("EmuSelection_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a file destination to export to.
        /// </summary>
        public static string ExportDestinationSelectionHeader {
            get {
                return ResourceManager.GetString("ExportDestinationSelectionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when attempting to run {0}.
        /// </summary>
        public static string File_ErrorLaunchingFile {
            get {
                return ResourceManager.GetString("File_ErrorLaunchingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified file could not be found: {0}.
        /// </summary>
        public static string File_FileNotFound {
            get {
                return ResourceManager.GetString("File_FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File not found.
        /// </summary>
        public static string File_FileNotFoundHeader {
            get {
                return ResourceManager.GetString("File_FileNotFoundHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location not found.
        /// </summary>
        public static string File_LocationNotFound {
            get {
                return ResourceManager.GetString("File_LocationNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory could not be opened.
        /// </summary>
        public static string File_OpenLocationError {
            get {
                return ResourceManager.GetString("File_OpenLocationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory error.
        /// </summary>
        public static string File_OpenLocationErrorHeader {
            get {
                return ResourceManager.GetString("File_OpenLocationErrorHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key could not be opened.
        /// </summary>
        public static string File_OpenRegKeyError {
            get {
                return ResourceManager.GetString("File_OpenRegKeyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error opening key.
        /// </summary>
        public static string File_OpenRegKeyErrorHeader {
            get {
                return ResourceManager.GetString("File_OpenRegKeyErrorHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The registry key was not found.
        /// </summary>
        public static string File_RegKeyNotFound {
            get {
                return ResourceManager.GetString("File_RegKeyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Registry key not found.
        /// </summary>
        public static string File_RegKeyNotFoundHeader {
            get {
                return ResourceManager.GetString("File_RegKeyNotFoundHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to JSON Files.
        /// </summary>
        public static string FileFilterDescription_JSON {
            get {
                return ResourceManager.GetString("FileFilterDescription_JSON", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image.
        /// </summary>
        public static string FileSelection_ImageFormat {
            get {
                return ResourceManager.GetString("FileSelection_ImageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome to the Rayman Control Panel.
        /// </summary>
        public static string FirstLaunchInfo_Header {
            get {
                return ResourceManager.GetString("FirstLaunchInfo_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This program is an unofficial open source community project created by RayCarrot. It allows quick and easy access to all installed PC Rayman games on your computer, with additional features such as extended configuration support, utilities, save file backups, save data management, texture modifications and more.
        ///Supported games can be installed directly from their disc through the program.
        ///To get started, change the settings you want below and press &apos;Continue&apos;. The settings can be changed at any time in t [rest of string was truncated]&quot;;.
        /// </summary>
        public static string FirstLaunchInfo_Text {
            get {
                return ResourceManager.GetString("FirstLaunchInfo_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome to the Rayman Control Panel.
        /// </summary>
        public static string FirstLaunchInfo_Title {
            get {
                return ResourceManager.GetString("FirstLaunchInfo_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install from disc.
        /// </summary>
        public static string GameDisplay_DiscInstall {
            get {
                return ResourceManager.GetString("GameDisplay_DiscInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download from Ubisoft Connect.
        /// </summary>
        public static string GameDisplay_DownloadUplay {
            get {
                return ResourceManager.GetString("GameDisplay_DownloadUplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download from GameJolt.
        /// </summary>
        public static string GameDisplay_GameJolt {
            get {
                return ResourceManager.GetString("GameDisplay_GameJolt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Locate.
        /// </summary>
        public static string GameDisplay_Locate {
            get {
                return ResourceManager.GetString("GameDisplay_Locate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open GameJolt page.
        /// </summary>
        public static string GameDisplay_OpenGameJoltPage {
            get {
                return ResourceManager.GetString("GameDisplay_OpenGameJoltPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open in Microsoft Store.
        /// </summary>
        public static string GameDisplay_OpenInWinStore {
            get {
                return ResourceManager.GetString("GameDisplay_OpenInWinStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open location.
        /// </summary>
        public static string GameDisplay_OpenLocation {
            get {
                return ResourceManager.GetString("GameDisplay_OpenLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open community page.
        /// </summary>
        public static string GameDisplay_OpenSteamCommunity {
            get {
                return ResourceManager.GetString("GameDisplay_OpenSteamCommunity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open store page.
        /// </summary>
        public static string GameDisplay_OpenSteamStore {
            get {
                return ResourceManager.GetString("GameDisplay_OpenSteamStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Options.
        /// </summary>
        public static string GameDisplay_Options {
            get {
                return ResourceManager.GetString("GameDisplay_Options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Purchase from GOG.
        /// </summary>
        public static string GameDisplay_PurchaseGOG {
            get {
                return ResourceManager.GetString("GameDisplay_PurchaseGOG", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Purchase from Ubisoft Connect.
        /// </summary>
        public static string GameDisplay_PurchaseUplay {
            get {
                return ResourceManager.GetString("GameDisplay_PurchaseUplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View maps.
        /// </summary>
        public static string GameDisplay_Raymap {
            get {
                return ResourceManager.GetString("GameDisplay_Raymap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run as Admin.
        /// </summary>
        public static string GameDisplay_RunAsAdmin {
            get {
                return ResourceManager.GetString("GameDisplay_RunAsAdmin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Purchase from Steam.
        /// </summary>
        public static string GameDisplay_Steam {
            get {
                return ResourceManager.GetString("GameDisplay_Steam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred during the game finder operation.
        /// </summary>
        public static string GameFinder_Error {
            get {
                return ResourceManager.GetString("GameFinder_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following new games were found:.
        /// </summary>
        public static string GameFinder_GamesFound {
            get {
                return ResourceManager.GetString("GameFinder_GamesFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed games found.
        /// </summary>
        public static string GameFinder_GamesFoundHeader {
            get {
                return ResourceManager.GetString("GameFinder_GamesFoundHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No new games were found.
        /// </summary>
        public static string GameFinder_NoResults {
            get {
                return ResourceManager.GetString("GameFinder_NoResults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game finder result.
        /// </summary>
        public static string GameFinder_ResultHeader {
            get {
                return ResourceManager.GetString("GameFinder_ResultHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install location:.
        /// </summary>
        public static string GameInfo_InstallDir {
            get {
                return ResourceManager.GetString("GameInfo_InstallDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch arguments:.
        /// </summary>
        public static string GameInfo_LaunchArgs {
            get {
                return ResourceManager.GetString("GameInfo_LaunchArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch path:.
        /// </summary>
        public static string GameInfo_LaunchPath {
            get {
                return ResourceManager.GetString("GameInfo_LaunchPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam ID:.
        /// </summary>
        public static string GameInfo_SteamID {
            get {
                return ResourceManager.GetString("GameInfo_SteamID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Architecture.
        /// </summary>
        public static string GameInfo_WinStoreArchitecture {
            get {
                return ResourceManager.GetString("GameInfo_WinStoreArchitecture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dependencies.
        /// </summary>
        public static string GameInfo_WinStoreDependencies {
            get {
                return ResourceManager.GetString("GameInfo_WinStoreDependencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Full name.
        /// </summary>
        public static string GameInfo_WinStoreFullName {
            get {
                return ResourceManager.GetString("GameInfo_WinStoreFullName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installed.
        /// </summary>
        public static string GameInfo_WinStoreInstallDate {
            get {
                return ResourceManager.GetString("GameInfo_WinStoreInstallDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        public static string GameInfo_WinStoreVersion {
            get {
                return ResourceManager.GetString("GameInfo_WinStoreVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to dgVoodoo.
        /// </summary>
        public static string GameLink_R2dgVoodoo {
            get {
                return ResourceManager.GetString("GameLink_R2dgVoodoo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ray2Fix.
        /// </summary>
        public static string GameLink_R2Fix {
            get {
                return ResourceManager.GetString("GameLink_R2Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to nGlide config.
        /// </summary>
        public static string GameLink_R2nGlide {
            get {
                return ResourceManager.GetString("GameLink_R2nGlide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mapper.
        /// </summary>
        public static string GameLink_RDMapper {
            get {
                return ResourceManager.GetString("GameLink_RDMapper", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setup.
        /// </summary>
        public static string GameLink_Setup {
            get {
                return ResourceManager.GetString("GameLink_Setup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration.
        /// </summary>
        public static string GameOptions_Config {
            get {
                return ResourceManager.GetString("GameOptions_Config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create shortcut.
        /// </summary>
        public static string GameOptions_CreateShortcut {
            get {
                return ResourceManager.GetString("GameOptions_CreateShortcut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Information.
        /// </summary>
        public static string GameOptions_Info {
            get {
                return ResourceManager.GetString("GameOptions_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove from program.
        /// </summary>
        public static string GameOptions_Remove {
            get {
                return ResourceManager.GetString("GameOptions_Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall.
        /// </summary>
        public static string GameOptions_Uninstall {
            get {
                return ResourceManager.GetString("GameOptions_Uninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your configuration changes have not been saved. Do you want to exit and discard them?.
        /// </summary>
        public static string GameOptions_UnsavedChanges {
            get {
                return ResourceManager.GetString("GameOptions_UnsavedChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm exit.
        /// </summary>
        public static string GameOptions_UnsavedChangesHeader {
            get {
                return ResourceManager.GetString("GameOptions_UnsavedChangesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Utilities.
        /// </summary>
        public static string GameOptions_Utilities {
            get {
                return ResourceManager.GetString("GameOptions_Utilities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select shortcut destination.
        /// </summary>
        public static string GameShortcut_BrowseHeader {
            get {
                return ResourceManager.GetString("GameShortcut_BrowseHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The shortcut could not be created.
        /// </summary>
        public static string GameShortcut_Error {
            get {
                return ResourceManager.GetString("GameShortcut_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shortcut creation failed.
        /// </summary>
        public static string GameShortcut_ErrorHeader {
            get {
                return ResourceManager.GetString("GameShortcut_ErrorHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch {0}.
        /// </summary>
        public static string GameShortcut_ShortcutName {
            get {
                return ResourceManager.GetString("GameShortcut_ShortcutName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shortcut created successfully.
        /// </summary>
        public static string GameShortcut_Success {
            get {
                return ResourceManager.GetString("GameShortcut_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fan-games.
        /// </summary>
        public static string GamesPage_Category_Fan {
            get {
                return ResourceManager.GetString("GamesPage_Category_Fan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Other.
        /// </summary>
        public static string GamesPage_Category_Other {
            get {
                return ResourceManager.GetString("GamesPage_Category_Other", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rabbids.
        /// </summary>
        public static string GamesPage_Category_Rabbids {
            get {
                return ResourceManager.GetString("GamesPage_Category_Rabbids", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman.
        /// </summary>
        public static string GamesPage_Category_Rayman {
            get {
                return ResourceManager.GetString("GamesPage_Category_Rayman", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Games.
        /// </summary>
        public static string GamesPageHeader {
            get {
                return ResourceManager.GetString("GamesPageHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The existing backups for {0} could not be obtained.
        /// </summary>
        public static string GetExistingBackupsError {
            get {
                return ResourceManager.GetString("GetExistingBackupsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Big file.
        /// </summary>
        public static string GoHomeConfig_BigFile {
            get {
                return ResourceManager.GetString("GoHomeConfig_BigFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom commands.
        /// </summary>
        public static string GoHomeConfig_Commands {
            get {
                return ResourceManager.GetString("GoHomeConfig_Commands", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom launch settings.
        /// </summary>
        public static string GoHomeConfig_CustomLaunchHeader {
            get {
                return ResourceManager.GetString("GoHomeConfig_CustomLaunchHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, the below settings will be used when launching the game from the Rayman Control Panel.
        /// </summary>
        public static string GoHomeConfig_CustomLaunchInfo {
            get {
                return ResourceManager.GetString("GoHomeConfig_CustomLaunchInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version index.
        /// </summary>
        public static string GoHomeConfig_VersionIndex {
            get {
                return ResourceManager.GetString("GoHomeConfig_VersionIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a converted JSON file to import from.
        /// </summary>
        public static string ImportSelectionHeader {
            get {
                return ResourceManager.GetString("ImportSelectionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select disc to install from.
        /// </summary>
        public static string Installer_BrowseDiscHeader {
            get {
                return ResourceManager.GetString("Installer_BrowseDiscHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation canceled.
        /// </summary>
        public static string Installer_Canceled {
            get {
                return ResourceManager.GetString("Installer_Canceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you wish to cancel the installation?.
        /// </summary>
        public static string Installer_CancelQuestion {
            get {
                return ResourceManager.GetString("Installer_CancelQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel ongoing installation.
        /// </summary>
        public static string Installer_CancelQuestionHeader {
            get {
                return ResourceManager.GetString("Installer_CancelQuestionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Part of the installation could not be cleaned up under {0}.
        /// </summary>
        public static string Installer_CleanupError {
            get {
                return ResourceManager.GetString("Installer_CleanupError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create desktop shortcut.
        /// </summary>
        public static string Installer_CreateDesktopShortcut {
            get {
                return ResourceManager.GetString("Installer_CreateDesktopShortcut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create start menu shortcut.
        /// </summary>
        public static string Installer_CreateStartMenuShortcut {
            get {
                return ResourceManager.GetString("Installer_CreateStartMenuShortcut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current File Progress.
        /// </summary>
        public static string Installer_CurrentProgress {
            get {
                return ResourceManager.GetString("Installer_CurrentProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access was denied to the selected install location. Select another location or run the program as administrator..
        /// </summary>
        public static string Installer_DirMissingWritePermission {
            get {
                return ResourceManager.GetString("Installer_DirMissingWritePermission", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access denied.
        /// </summary>
        public static string Installer_DirMissingWritePermissionHeader {
            get {
                return ResourceManager.GetString("Installer_DirMissingWritePermissionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected disc has the same label and root path as a previously inserted one. Due to this the installer can not differentiate them. Please rename one of the discs and try again, or mount them as different root directories..
        /// </summary>
        public static string Installer_DriveNameConflict {
            get {
                return ResourceManager.GetString("Installer_DriveNameConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disc conflict.
        /// </summary>
        public static string Installer_DriveNameConflictHeader {
            get {
                return ResourceManager.GetString("Installer_DriveNameConflictHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation failed.
        /// </summary>
        public static string Installer_Failed {
            get {
                return ResourceManager.GetString("Installer_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action failed.
        /// </summary>
        public static string Installer_FailedHeader {
            get {
                return ResourceManager.GetString("Installer_FailedHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file {0} failed to copy over with the error message: {1}
        ///
        ///Try again?.
        /// </summary>
        public static string Installer_FileCopyError {
            get {
                return ResourceManager.GetString("Installer_FileCopyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to copy item to destination.
        /// </summary>
        public static string Installer_FileCopyErrorHeader {
            get {
                return ResourceManager.GetString("Installer_FileCopyErrorHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please insert &quot;{0}&quot; to port {1} and continue, or cancel to cancel the installation.
        /// </summary>
        public static string Installer_InsertDriveRequest {
            get {
                return ResourceManager.GetString("Installer_InsertDriveRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert Disc.
        /// </summary>
        public static string Installer_InsertDriveRequestHeader {
            get {
                return ResourceManager.GetString("Installer_InsertDriveRequestHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        public static string Installer_Install {
            get {
                return ResourceManager.GetString("Installer_Install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install for all users.
        /// </summary>
        public static string Installer_InstallAllUsers {
            get {
                return ResourceManager.GetString("Installer_InstallAllUsers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need to run the program as administrator in order to install for all users.
        /// </summary>
        public static string Installer_InstallAllUsersError {
            get {
                return ResourceManager.GetString("Installer_InstallAllUsersError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing permissions.
        /// </summary>
        public static string Installer_InstallAllUsersErrorHeader {
            get {
                return ResourceManager.GetString("Installer_InstallAllUsersErrorHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified directory does not exist.
        /// </summary>
        public static string Installer_InvalidDirectory {
            get {
                return ResourceManager.GetString("Installer_InvalidDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory not found.
        /// </summary>
        public static string Installer_InvalidDirectoryHeader {
            get {
                return ResourceManager.GetString("Installer_InvalidDirectoryHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} paths were not found on the specified disc. If the game requires more than one disc for installation, please insert the next one..
        /// </summary>
        public static string Installer_MissingFiles {
            get {
                return ResourceManager.GetString("Installer_MissingFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing Paths.
        /// </summary>
        public static string Installer_MissingFilesHeader {
            get {
                return ResourceManager.GetString("Installer_MissingFilesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directory {0} already exists. Do you want to overwrite it?.
        /// </summary>
        public static string Installer_OverwriteOutput {
            get {
                return ResourceManager.GetString("Installer_OverwriteOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overwrite directory.
        /// </summary>
        public static string Installer_OverwriteOutputHeader {
            get {
                return ResourceManager.GetString("Installer_OverwriteOutputHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch {0}.
        /// </summary>
        public static string Installer_ShortcutName {
            get {
                return ResourceManager.GetString("Installer_ShortcutName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation complete. Run configuration tool for {0} to set up the game..
        /// </summary>
        public static string Installer_Success {
            get {
                return ResourceManager.GetString("Installer_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation Complete.
        /// </summary>
        public static string Installer_SuccessHeader {
            get {
                return ResourceManager.GetString("Installer_SuccessHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install {0}.
        /// </summary>
        public static string Installer_Title {
            get {
                return ResourceManager.GetString("Installer_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total Progress.
        /// </summary>
        public static string Installer_TotalProgress {
            get {
                return ResourceManager.GetString("Installer_TotalProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some items were not handled during the installation. Do you wish to retry handling those items?.
        /// </summary>
        public static string Installer_UnhandledItems {
            get {
                return ResourceManager.GetString("Installer_UnhandledItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unhandled Items.
        /// </summary>
        public static string Installer_UnhandledItemsHeader {
            get {
                return ResourceManager.GetString("Installer_UnhandledItemsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid resolution. Must be in the format of &apos;Width x Height&apos;..
        /// </summary>
        public static string InvalidResolution {
            get {
                return ResourceManager.GetString("InvalidResolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is enabled.
        /// </summary>
        public static string IsEnabled {
            get {
                return ResourceManager.GetString("IsEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit jump list items.
        /// </summary>
        public static string JumpListEditor_Header {
            get {
                return ResourceManager.GetString("JumpListEditor_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Included.
        /// </summary>
        public static string JumpListEditor_IncludedHeader {
            get {
                return ResourceManager.GetString("JumpListEditor_IncludedHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not Included.
        /// </summary>
        public static string JumpListEditor_NotIncludedHeader {
            get {
                return ResourceManager.GetString("JumpListEditor_NotIncludedHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch {0}.
        /// </summary>
        public static string JumpListItemDescription {
            get {
                return ResourceManager.GetString("JumpListItemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Danish.
        /// </summary>
        public static string Lang_Danish {
            get {
                return ResourceManager.GetString("Lang_Danish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dutch.
        /// </summary>
        public static string Lang_Dutch {
            get {
                return ResourceManager.GetString("Lang_Dutch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to English.
        /// </summary>
        public static string Lang_English {
            get {
                return ResourceManager.GetString("Lang_English", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finnish.
        /// </summary>
        public static string Lang_Finnish {
            get {
                return ResourceManager.GetString("Lang_Finnish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to French.
        /// </summary>
        public static string Lang_French {
            get {
                return ResourceManager.GetString("Lang_French", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to German.
        /// </summary>
        public static string Lang_German {
            get {
                return ResourceManager.GetString("Lang_German", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Italian.
        /// </summary>
        public static string Lang_Italian {
            get {
                return ResourceManager.GetString("Lang_Italian", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Norwegian.
        /// </summary>
        public static string Lang_Norwegian {
            get {
                return ResourceManager.GetString("Lang_Norwegian", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spanish.
        /// </summary>
        public static string Lang_Spanish {
            get {
                return ResourceManager.GetString("Lang_Spanish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Swedish.
        /// </summary>
        public static string Lang_Swedish {
            get {
                return ResourceManager.GetString("Lang_Swedish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The mount path could not be found. Specify a valid path under the game options to run this game..
        /// </summary>
        public static string LaunchGame_MountPathNotFound {
            get {
                return ResourceManager.GetString("LaunchGame_MountPathNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when attempting to run {0}.
        /// </summary>
        public static string LaunchGame_WinStoreError {
            get {
                return ResourceManager.GetString("LaunchGame_WinStoreError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to App user data.
        /// </summary>
        public static string Links_Local_AppData {
            get {
                return ResourceManager.GetString("Links_Local_AppData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log file.
        /// </summary>
        public static string Links_Local_LogFile {
            get {
                return ResourceManager.GetString("Links_Local_LogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Registry app data.
        /// </summary>
        public static string Links_Local_RegAppData {
            get {
                return ResourceManager.GetString("Links_Local_RegAppData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Temporary files.
        /// </summary>
        public static string Links_Local_Temp {
            get {
                return ResourceManager.GetString("Links_Local_Temp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Install Directory.
        /// </summary>
        public static string LocateGame_BrowserHeader {
            get {
                return ResourceManager.GetString("LocateGame_BrowserHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when locating the game.
        /// </summary>
        public static string LocateGame_Error {
            get {
                return ResourceManager.GetString("LocateGame_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error locating game.
        /// </summary>
        public static string LocateGame_ErrorHeader {
            get {
                return ResourceManager.GetString("LocateGame_ErrorHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected directory is not valid for this game.
        /// </summary>
        public static string LocateGame_InvalidLocation {
            get {
                return ResourceManager.GetString("LocateGame_InvalidLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Location.
        /// </summary>
        public static string LocateGame_InvalidLocationHeader {
            get {
                return ResourceManager.GetString("LocateGame_InvalidLocationHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Message.
        /// </summary>
        public static string MessageHeader_Error {
            get {
                return ResourceManager.GetString("MessageHeader_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generic Message.
        /// </summary>
        public static string MessageHeader_Generic {
            get {
                return ResourceManager.GetString("MessageHeader_Generic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Information Message.
        /// </summary>
        public static string MessageHeader_Information {
            get {
                return ResourceManager.GetString("MessageHeader_Information", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Question Message.
        /// </summary>
        public static string MessageHeader_Question {
            get {
                return ResourceManager.GetString("MessageHeader_Question", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success Message.
        /// </summary>
        public static string MessageHeader_Success {
            get {
                return ResourceManager.GetString("MessageHeader_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning Message.
        /// </summary>
        public static string MessageHeader_Warning {
            get {
                return ResourceManager.GetString("MessageHeader_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Actions.
        /// </summary>
        public static string Mod_Mem_ActionsHeader {
            get {
                return ResourceManager.GetString("Mod_Mem_ActionsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All cages.
        /// </summary>
        public static string Mod_Mem_AllCagesAction {
            get {
                return ResourceManager.GetString("Mod_Mem_AllCagesAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when attaching to the process.
        /// </summary>
        public static string Mod_Mem_AttachError {
            get {
                return ResourceManager.GetString("Mod_Mem_AttachError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bonus.
        /// </summary>
        public static string Mod_Mem_BonusLevelsCategory {
            get {
                return ResourceManager.GetString("Mod_Mem_BonusLevelsCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Camera X.
        /// </summary>
        public static string Mod_Mem_CamX {
            get {
                return ResourceManager.GetString("Mod_Mem_CamX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Camera Y.
        /// </summary>
        public static string Mod_Mem_CamY {
            get {
                return ResourceManager.GetString("Mod_Mem_CamY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Credits.
        /// </summary>
        public static string Mod_Mem_CreditsLevel {
            get {
                return ResourceManager.GetString("Mod_Mem_CreditsLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current map.
        /// </summary>
        public static string Mod_Mem_CurrentMap {
            get {
                return ResourceManager.GetString("Mod_Mem_CurrentMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cutscenes.
        /// </summary>
        public static string Mod_Mem_CutsceneLevelsCategory {
            get {
                return ResourceManager.GetString("Mod_Mem_CutsceneLevelsCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug.
        /// </summary>
        public static string Mod_Mem_DebugCategory {
            get {
                return ResourceManager.GetString("Mod_Mem_DebugCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Properties.
        /// </summary>
        public static string Mod_Mem_EditorFieldsHeader {
            get {
                return ResourceManager.GetString("Mod_Mem_EditorFieldsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Emulator.
        /// </summary>
        public static string Mod_Mem_EmuSelection {
            get {
                return ResourceManager.GetString("Mod_Mem_EmuSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finish level.
        /// </summary>
        public static string Mod_Mem_FinishLvlAction {
            get {
                return ResourceManager.GetString("Mod_Mem_FinishLvlAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman Advance (GBA - EU).
        /// </summary>
        public static string Mod_Mem_Game_R1_GBA_EU {
            get {
                return ResourceManager.GetString("Mod_Mem_Game_R1_GBA_EU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman 1 (PC - 1.21).
        /// </summary>
        public static string Mod_Mem_Game_R1_PC_1_21 {
            get {
                return ResourceManager.GetString("Mod_Mem_Game_R1_PC_1_21", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman 1 (PS1 - US).
        /// </summary>
        public static string Mod_Mem_Game_R1_PS1_US {
            get {
                return ResourceManager.GetString("Mod_Mem_Game_R1_PS1_US", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman 2 (PC).
        /// </summary>
        public static string Mod_Mem_Game_R2_PC {
            get {
                return ResourceManager.GetString("Mod_Mem_Game_R2_PC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman 2 (PS1 - Prototype).
        /// </summary>
        public static string Mod_Mem_Game_R2_PS1_Proto {
            get {
                return ResourceManager.GetString("Mod_Mem_Game_R2_PS1_Proto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman 3 (PC).
        /// </summary>
        public static string Mod_Mem_Game_R3_PC {
            get {
                return ResourceManager.GetString("Mod_Mem_Game_R3_PC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game.
        /// </summary>
        public static string Mod_Mem_GameSelection {
            get {
                return ResourceManager.GetString("Mod_Mem_GameSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General.
        /// </summary>
        public static string Mod_Mem_GeneralCategory {
            get {
                return ResourceManager.GetString("Mod_Mem_GeneralCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Memory Mods.
        /// </summary>
        public static string Mod_Mem_Header {
            get {
                return ResourceManager.GetString("Mod_Mem_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hit-points.
        /// </summary>
        public static string Mod_Mem_HP {
            get {
                return ResourceManager.GetString("Mod_Mem_HP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Info.
        /// </summary>
        public static string Mod_Mem_InfoHeader {
            get {
                return ResourceManager.GetString("Mod_Mem_InfoHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        public static string Mod_Mem_Lang {
            get {
                return ResourceManager.GetString("Mod_Mem_Lang", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Log.
        /// </summary>
        public static string Mod_Mem_LogHeader {
            get {
                return ResourceManager.GetString("Mod_Mem_LogHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Map.
        /// </summary>
        public static string Mod_Mem_Map {
            get {
                return ResourceManager.GetString("Mod_Mem_Map", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max hit points.
        /// </summary>
        public static string Mod_Mem_MaxHP {
            get {
                return ResourceManager.GetString("Mod_Mem_MaxHP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Main Menu.
        /// </summary>
        public static string Mod_Mem_MenuLevel {
            get {
                return ResourceManager.GetString("Mod_Mem_MenuLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Menu.
        /// </summary>
        public static string Mod_Mem_MenuLevelsCategory {
            get {
                return ResourceManager.GetString("Mod_Mem_MenuLevelsCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiplayer.
        /// </summary>
        public static string Mod_Mem_MultiplayerCategory {
            get {
                return ResourceManager.GetString("Mod_Mem_MultiplayerCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Powers.
        /// </summary>
        public static string Mod_Mem_PowersCategory {
            get {
                return ResourceManager.GetString("Mod_Mem_PowersCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Process.
        /// </summary>
        public static string Mod_Mem_ProcessHeader {
            get {
                return ResourceManager.GetString("Mod_Mem_ProcessHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By attaching to a running game process you will be able to modify and view game values in real-time. For certain games this will allow you to enable unused features..
        /// </summary>
        public static string Mod_Mem_ProcessInfo {
            get {
                return ResourceManager.GetString("Mod_Mem_ProcessInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Active objects.
        /// </summary>
        public static string Mod_Mem_R1_ActiveObjs {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_ActiveObjs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug mode.
        /// </summary>
        public static string Mod_Mem_R1_DebugMode {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_DebugMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start in demo mode.
        /// </summary>
        public static string Mod_Mem_R1_DemoMode {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_DemoMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled then the game will start playing the unused two recorded demos when the level loads. This can be triggered by losing all lives and choosing to try again..
        /// </summary>
        public static string Mod_Mem_R1_DemoModeInfo {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_DemoModeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show engine info.
        /// </summary>
        public static string Mod_Mem_R1_EngineText {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_EngineText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Return to world map.
        /// </summary>
        public static string Mod_Mem_R1_ExitLvlAction {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_ExitLvlAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Firefly.
        /// </summary>
        public static string Mod_Mem_R1_FireflyPower {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_FireflyPower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fist charge.
        /// </summary>
        public static string Mod_Mem_R1_FistCharge {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_FistCharge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fist platform.
        /// </summary>
        public static string Mod_Mem_R1_FistPlatform {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_FistPlatform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fist.
        /// </summary>
        public static string Mod_Mem_R1_FistPower {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_FistPower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force run.
        /// </summary>
        public static string Mod_Mem_R1_ForcedRunPower {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_ForcedRunPower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Grab.
        /// </summary>
        public static string Mod_Mem_R1_GrabPower {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_GrabPower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hang.
        /// </summary>
        public static string Mod_Mem_R1_HangPower {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_HangPower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Helico.
        /// </summary>
        public static string Mod_Mem_R1_HelicoPower {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_HelicoPower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Helico time.
        /// </summary>
        public static string Mod_Mem_R1_HelicoTime {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_HelicoTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Map selection.
        /// </summary>
        public static string Mod_Mem_R1_MapSelect {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_MapSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggles the in-game map selection on the world map.
        /// </summary>
        public static string Mod_Mem_R1_MapSelectInfo {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_MapSelectInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Map time.
        /// </summary>
        public static string Mod_Mem_R1_MapTime {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_MapTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Menu.
        /// </summary>
        public static string Mod_Mem_R1_Menu {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected map.
        /// </summary>
        public static string Mod_Mem_R1_MultiplayerMap {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_MultiplayerMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load multiplayer menus.
        /// </summary>
        public static string Mod_Mem_R1_MultiplayerMenus {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_MultiplayerMenus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When this is enabled the game will load the unused multiplayer menus on startup. If the game has already been started then this can be accessed by choosing to quit the game from the pause menu.
        ///The multiplayer menus themselves are not complete due to this feature never being fully implemented. The first menu is the player selection and the second one the level selection. Due to these not being functional the only way to change these are by using the below fields..
        /// </summary>
        public static string Mod_Mem_R1_MultiplayerMenusInfo {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_MultiplayerMenusInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is player 2.
        /// </summary>
        public static string Mod_Mem_R1_MultiplayerP2 {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_MultiplayerP2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Level timeout.
        /// </summary>
        public static string Mod_Mem_R1_MultiplayerTimeout {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_MultiplayerTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show objects info.
        /// </summary>
        public static string Mod_Mem_R1_ObjText {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_ObjText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Place Ray.
        /// </summary>
        public static string Mod_Mem_R1_PlaceRay {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_PlaceRay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows Rayman to be placed freely in the level.
        /// </summary>
        public static string Mod_Mem_R1_PlaceRayInfo {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_PlaceRayInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Random index.
        /// </summary>
        public static string Mod_Mem_R1_RandIndex {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_RandIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reverse controls.
        /// </summary>
        public static string Mod_Mem_R1_ReversePower {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_ReversePower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run.
        /// </summary>
        public static string Mod_Mem_R1_RunPower {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_RunPower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Seed.
        /// </summary>
        public static string Mod_Mem_R1_SeedPower {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_SeedPower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Squished.
        /// </summary>
        public static string Mod_Mem_R1_SquishedPower {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_SquishedPower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Super-helico.
        /// </summary>
        public static string Mod_Mem_R1_SuperHelicoPower {
            get {
                return ResourceManager.GetString("Mod_Mem_R1_SuperHelicoPower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman&apos;s state.
        /// </summary>
        public static string Mod_Mem_RayState {
            get {
                return ResourceManager.GetString("Mod_Mem_RayState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when updating the game values.
        /// </summary>
        public static string Mod_Mem_TickError {
            get {
                return ResourceManager.GetString("Mod_Mem_TickError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown {0}.
        /// </summary>
        public static string Mod_Mem_Unk {
            get {
                return ResourceManager.GetString("Mod_Mem_Unk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unlock all levels.
        /// </summary>
        public static string Mod_Mem_UnlockAllLvlsAction {
            get {
                return ResourceManager.GetString("Mod_Mem_UnlockAllLvlsAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to X position.
        /// </summary>
        public static string Mod_Mem_XPos {
            get {
                return ResourceManager.GetString("Mod_Mem_XPos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Y position.
        /// </summary>
        public static string Mod_Mem_YPos {
            get {
                return ResourceManager.GetString("Mod_Mem_YPos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply executable patch.
        /// </summary>
        public static string Mod_RRR_ApplyExePatch {
            get {
                return ResourceManager.GetString("Mod_RRR_ApplyExePatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The executable patch is required for patched BF files due to a memory limit.
        /// </summary>
        public static string Mod_RRR_ApplyExePatchInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_ApplyExePatchInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply to running game.
        /// </summary>
        public static string Mod_RRR_ApplyMemoryMod {
            get {
                return ResourceManager.GetString("Mod_RRR_ApplyMemoryMod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BF Mods.
        /// </summary>
        public static string Mod_RRR_BFModsHeader {
            get {
                return ResourceManager.GetString("Mod_RRR_BFModsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modified .bf files. These will only be used when running the game from the option below..
        /// </summary>
        public static string Mod_RRR_BFModsInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_BFModsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when patching the executable.
        /// </summary>
        public static string Mod_RRR_BFPatch_ApplyExePatchError {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatch_ApplyExePatchError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The executable was successfully patched.
        /// </summary>
        public static string Mod_RRR_BFPatch_ApplyExePatchSuccess {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatch_ApplyExePatchSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make bat sound like eagle.
        /// </summary>
        public static string Mod_RRR_BFPatch_BatSoundLikeEagle {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatch_BatSoundLikeEagle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change playable character.
        /// </summary>
        public static string Mod_RRR_BFPatch_ChangePlayer {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatch_ChangePlayer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Baby Globox.
        /// </summary>
        public static string Mod_RRR_BFPatch_ChangePlayer_BabyGlobox {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatch_ChangePlayer_BabyGlobox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Grey Leader Rabbid.
        /// </summary>
        public static string Mod_RRR_BFPatch_ChangePlayer_LeaderRabbid {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatch_ChangePlayer_LeaderRabbid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nurgle Demon.
        /// </summary>
        public static string Mod_RRR_BFPatch_ChangePlayer_NurgleDemon {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatch_ChangePlayer_NurgleDemon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rabbid.
        /// </summary>
        public static string Mod_RRR_BFPatch_ChangePlayer_Rabbid {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatch_ChangePlayer_Rabbid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sam Fisher Rabbid.
        /// </summary>
        public static string Mod_RRR_BFPatch_ChangePlayer_SamFisherRabbid {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatch_ChangePlayer_SamFisherRabbid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Serguei.
        /// </summary>
        public static string Mod_RRR_BFPatch_ChangePlayer_Serguei {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatch_ChangePlayer_Serguei", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Superman Rabbid.
        /// </summary>
        public static string Mod_RRR_BFPatch_ChangePlayer_SupermanRabbid {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatch_ChangePlayer_SupermanRabbid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Terminator Rabbid (Pink).
        /// </summary>
        public static string Mod_RRR_BFPatch_ChangePlayer_TerminatorRabbid {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatch_ChangePlayer_TerminatorRabbid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add custom helicopter texture.
        /// </summary>
        public static string Mod_RRR_BFPatch_CustomHelicoTexture {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatch_CustomHelicoTexture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to determine game version.
        /// </summary>
        public static string Mod_RRR_BFPatch_DetermineGameVerError {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatch_DetermineGameVerError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fix sound effects.
        /// </summary>
        public static string Mod_RRR_BFPatch_FixSounds {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatch_FixSounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable flashlight (toggle with LB).
        /// </summary>
        public static string Mod_RRR_BFPatch_Flashlight {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatch_Flashlight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add flashlight to Bunnies Love Digging Tunnels.
        /// </summary>
        public static string Mod_RRR_BFPatch_FlashlightMines {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatch_FlashlightMines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The game install directory is invalid.
        /// </summary>
        public static string Mod_RRR_BFPatch_InvalidGameDir {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatch_InvalidGameDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add unused rabbid items to Bunnies Aren&apos;t Scared Of The Dark.
        /// </summary>
        public static string Mod_RRR_BFPatch_RabbidItems {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatch_RabbidItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add fur to rabbids.
        /// </summary>
        public static string Mod_RRR_BFPatch_RabbidsFur {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatch_RabbidsFur", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to remove patched BF file.
        /// </summary>
        public static string Mod_RRR_BFPatch_RemovePatchedBFError {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatch_RemovePatchedBFError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The patched BF file has been removed.
        /// </summary>
        public static string Mod_RRR_BFPatch_RemovePatchedBFSuccess {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatch_RemovePatchedBFSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The executable patch was successfully reverted.
        /// </summary>
        public static string Mod_RRR_BFPatch_RevertExePatchSuccess {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatch_RevertExePatchSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make spider robot sound like spider.
        /// </summary>
        public static string Mod_RRR_BFPatch_SpiderRobotSoundLikeSpider {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatch_SpiderRobotSoundLikeSpider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The game version is not supported.
        /// </summary>
        public static string Mod_RRR_BFPatch_UnsupportedGameExe {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatch_UnsupportedGameExe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when updating the patched BF file.
        /// </summary>
        public static string Mod_RRR_BFPatch_UpdatePatchedBFError {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatch_UpdatePatchedBFError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The patched BF file was successfully updated.
        /// </summary>
        public static string Mod_RRR_BFPatch_UpdatePatchedBFSuccess {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatch_UpdatePatchedBFSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patches.
        /// </summary>
        public static string Mod_RRR_BFPatchesHeader {
            get {
                return ResourceManager.GetString("Mod_RRR_BFPatchesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyboard Button Mapping.
        /// </summary>
        public static string Mod_RRR_ButtonMappingHeader {
            get {
                return ResourceManager.GetString("Mod_RRR_ButtonMappingHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use custom keyboard button mapping.
        /// </summary>
        public static string Mod_RRR_ButtonMappingToggle {
            get {
                return ResourceManager.GetString("Mod_RRR_ButtonMappingToggle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download patched BF.
        /// </summary>
        public static string Mod_RRR_DownloadBFPatch {
            get {
                return ResourceManager.GetString("Mod_RRR_DownloadBFPatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Directory.
        /// </summary>
        public static string Mod_RRR_GameDirHeader {
            get {
                return ResourceManager.GetString("Mod_RRR_GameDirHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman Raving Rabbids
        ///Prototype Restoration.
        /// </summary>
        public static string Mod_RRR_Header {
            get {
                return ResourceManager.GetString("Mod_RRR_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jump.
        /// </summary>
        public static string Mod_RRR_KeyAction_0 {
            get {
                return ResourceManager.GetString("Mod_RRR_KeyAction_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attack (finisher).
        /// </summary>
        public static string Mod_RRR_KeyAction_10 {
            get {
                return ResourceManager.GetString("Mod_RRR_KeyAction_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Look mode.
        /// </summary>
        public static string Mod_RRR_KeyAction_12 {
            get {
                return ResourceManager.GetString("Mod_RRR_KeyAction_12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Roll/Ground pound.
        /// </summary>
        public static string Mod_RRR_KeyAction_14 {
            get {
                return ResourceManager.GetString("Mod_RRR_KeyAction_14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No-clip.
        /// </summary>
        public static string Mod_RRR_KeyAction_16 {
            get {
                return ResourceManager.GetString("Mod_RRR_KeyAction_16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pause.
        /// </summary>
        public static string Mod_RRR_KeyAction_18 {
            get {
                return ResourceManager.GetString("Mod_RRR_KeyAction_18", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dance mode: turn.
        /// </summary>
        public static string Mod_RRR_KeyAction_2 {
            get {
                return ResourceManager.GetString("Mod_RRR_KeyAction_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dance toggle.
        /// </summary>
        public static string Mod_RRR_KeyAction_24 {
            get {
                return ResourceManager.GetString("Mod_RRR_KeyAction_24", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Walk.
        /// </summary>
        public static string Mod_RRR_KeyAction_28 {
            get {
                return ResourceManager.GetString("Mod_RRR_KeyAction_28", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attack.
        /// </summary>
        public static string Mod_RRR_KeyAction_4 {
            get {
                return ResourceManager.GetString("Mod_RRR_KeyAction_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Grapple hook.
        /// </summary>
        public static string Mod_RRR_KeyAction_6 {
            get {
                return ResourceManager.GetString("Mod_RRR_KeyAction_6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Light/Tempo.
        /// </summary>
        public static string Mod_RRR_KeyAction_8 {
            get {
                return ResourceManager.GetString("Mod_RRR_KeyAction_8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch with patched BF.
        /// </summary>
        public static string Mod_RRR_LaunchBFPatch {
            get {
                return ResourceManager.GetString("Mod_RRR_LaunchBFPatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activate all activator triggers.
        /// </summary>
        public static string Mod_RRR_MemMod_ActivatorTriggers {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_ActivatorTriggers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forces all activator triggers to be true constantly. Causes chaos in many levels and spawns many more enemies (and Globox babies).
        /// </summary>
        public static string Mod_RRR_MemMod_ActivatorTriggersInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_ActivatorTriggersInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add boost button.
        /// </summary>
        public static string Mod_RRR_MemMod_AddBoostButton {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_AddBoostButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Normally reserved to an item not present in the game, pressing RT will make Rayman run really fast and enable speed attacks.
        /// </summary>
        public static string Mod_RRR_MemMod_AddBoostButtonInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_AddBoostButtonInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add camera controls.
        /// </summary>
        public static string Mod_RRR_MemMod_AddCamControls {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_AddCamControls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Camera controls are mapped to the right stick.
        /// </summary>
        public static string Mod_RRR_MemMod_AddCamControlsInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_AddCamControlsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Duel, the lost minigame.
        /// </summary>
        public static string Mod_RRR_MemMod_AddDuel {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_AddDuel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Bunnies are shooting all over the place&quot; replaces &quot;Bunnies don&apos;t milk cows part 2&quot;. Play it in multiplayer!.
        /// </summary>
        public static string Mod_RRR_MemMod_AddDuelInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_AddDuelInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add finishers.
        /// </summary>
        public static string Mod_RRR_MemMod_AddFinishers {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_AddFinishers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hold or press RB to add finishers into your combos.
        /// </summary>
        public static string Mod_RRR_MemMod_AddFinishersInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_AddFinishersInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add look mode.
        /// </summary>
        public static string Mod_RRR_MemMod_AddLookMode {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_AddLookMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A first-person look mode is added and mapped to LT.
        /// </summary>
        public static string Mod_RRR_MemMod_AddLookModeInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_AddLookModeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable playtest menu.
        /// </summary>
        public static string Mod_RRR_MemMod_AddPlaytestMenu {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_AddPlaytestMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not recommended. The playtest menu replaces the game type selection, but you cannot pause or exit loaded levels..
        /// </summary>
        public static string Mod_RRR_MemMod_AddPlaytestMenuInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_AddPlaytestMenuInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rhinos become aggressive.
        /// </summary>
        public static string Mod_RRR_MemMod_AggressiveRhinos {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_AggressiveRhinos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The rhinos from the races will attack you. Be prepared to die (or use the immortal cheat)!.
        /// </summary>
        public static string Mod_RRR_MemMod_AggressiveRhinosInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_AggressiveRhinosInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The memory patch could not be applied.
        /// </summary>
        public static string Mod_RRR_MemMod_ApplyError {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_ApplyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Memory patch applied successfully.
        /// </summary>
        public static string Mod_RRR_MemMod_ApplySuccess {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_ApplySuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bats act like eagles.
        /// </summary>
        public static string Mod_RRR_MemMod_BatsActLikeEagles {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_BatsActLikeEagles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bats become huge and act like the eagle with different animations.
        /// </summary>
        public static string Mod_RRR_MemMod_BatsActLikeEaglesInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_BatsActLikeEaglesInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bats can shoot.
        /// </summary>
        public static string Mod_RRR_MemMod_BatShoot {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_BatShoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bats can shoot projectiles with the attack button.
        /// </summary>
        public static string Mod_RRR_MemMod_BatShootInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_BatShootInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activate all bounding volume triggers.
        /// </summary>
        public static string Mod_RRR_MemMod_BoundingVolumeTriggers {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_BoundingVolumeTriggers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some rabbid spawn triggers are difficult to reach. This triggers them, but beware, it also causes crashes in many levels!.
        /// </summary>
        public static string Mod_RRR_MemMod_BoundingVolumeTriggersInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_BoundingVolumeTriggersInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunny hunts.
        /// </summary>
        public static string Mod_RRR_MemMod_BunnyHuntsHeader {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_BunnyHuntsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set cheat page.
        /// </summary>
        public static string Mod_RRR_MemMod_CheatPage {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_CheatPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays various debug info.
        /// </summary>
        public static string Mod_RRR_MemMod_CheatPageInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_CheatPageInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Climb walls.
        /// </summary>
        public static string Mod_RRR_MemMod_ClimbWalls {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_ClimbWalls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows Rayman to grab hold of any wall by using his hook.
        /// </summary>
        public static string Mod_RRR_MemMod_ClimbWallsInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_ClimbWallsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dance: control tempo.
        /// </summary>
        public static string Mod_RRR_MemMod_ControlTempo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_ControlTempo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In dance mode, holding LB will start a beat for Rayman to dance to.
        /// </summary>
        public static string Mod_RRR_MemMod_ControlTempoInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_ControlTempoInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable footstep sound.
        /// </summary>
        public static string Mod_RRR_MemMod_DisableFootstepSound {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_DisableFootstepSound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If BF mods aren&apos;t activated, Rayman&apos;s footstep sound in most areas can be annoying - use this option to turn it off.
        /// </summary>
        public static string Mod_RRR_MemMod_DisableFootstepSoundInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_DisableFootstepSoundInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable minigame intros.
        /// </summary>
        public static string Mod_RRR_MemMod_DisableIntros {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_DisableIntros", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minigame intro cinematics change the state of the world and sometimes deactivate Rayman (e.g. Bunnies don&apos;t give gifts).
        /// </summary>
        public static string Mod_RRR_MemMod_DisableIntrosInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_DisableIntrosInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t destroy bipods.
        /// </summary>
        public static string Mod_RRR_MemMod_DontDestroyBipods {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_DontDestroyBipods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Most bipods collapse by default when not in FPS mode. This prevents them from being destroyed..
        /// </summary>
        public static string Mod_RRR_MemMod_DontDestroyBipodsInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_DontDestroyBipodsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable health &amp; mana debug display.
        /// </summary>
        public static string Mod_RRR_MemMod_DrawHealthMana {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_DrawHealthMana", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whenever Rayman performs a special attack or gets hit, his HP and Mana will be displayed.
        /// </summary>
        public static string Mod_RRR_MemMod_DrawHealthManaInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_DrawHealthManaInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable prototype features.
        /// </summary>
        public static string Mod_RRR_MemMod_EnableProtoFeatures {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_EnableProtoFeatures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman&apos;s prototype behavior is enabled in all levels.
        /// </summary>
        public static string Mod_RRR_MemMod_EnableProtoFeaturesInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_EnableProtoFeaturesInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change hook graphics.
        /// </summary>
        public static string Mod_RRR_MemMod_GrappinGFX {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_GrappinGFX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line.
        /// </summary>
        public static string Mod_RRR_MemMod_GrappinGFX_0 {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_GrappinGFX_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lightning.
        /// </summary>
        public static string Mod_RRR_MemMod_GrappinGFX_1 {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_GrappinGFX_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sparks.
        /// </summary>
        public static string Mod_RRR_MemMod_GrappinGFX_2 {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_GrappinGFX_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rope.
        /// </summary>
        public static string Mod_RRR_MemMod_GrappinGFX_3 {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_GrappinGFX_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        public static string Mod_RRR_MemMod_GrappinGFX_4 {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_GrappinGFX_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables even earlier looks for Rayman&apos;s hook.
        /// </summary>
        public static string Mod_RRR_MemMod_GrappinGFXInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_GrappinGFXInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dance: groovy moveset.
        /// </summary>
        public static string Mod_RRR_MemMod_GroovyMoveset {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_GroovyMoveset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman uses different dance moves.
        /// </summary>
        public static string Mod_RRR_MemMod_GroovyMovesetInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_GroovyMovesetInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hang from grab spots.
        /// </summary>
        public static string Mod_RRR_MemMod_HangFromSpots {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_HangFromSpots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Breaks hook behavior but enables a broken system for using the hook as a rope to hang and jump from.
        /// </summary>
        public static string Mod_RRR_MemMod_HangFromSpotsInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_HangFromSpotsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Immortal.
        /// </summary>
        public static string Mod_RRR_MemMod_Immortal {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_Immortal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A developer cheat - Rayman does not die.
        /// </summary>
        public static string Mod_RRR_MemMod_ImmortalInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_ImmortalInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Increased enemy HP.
        /// </summary>
        public static string Mod_RRR_MemMod_IncreasedRabbidHP {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_IncreasedRabbidHP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Each Rabbid has 100 HP.
        /// </summary>
        public static string Mod_RRR_MemMod_IncreasedRabbidHPInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_IncreasedRabbidHPInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make Rayman less slippery.
        /// </summary>
        public static string Mod_RRR_MemMod_LessSlippery {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_LessSlippery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman feels slippery by default, this slightly improves that.
        /// </summary>
        public static string Mod_RRR_MemMod_LessSlipperyInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_LessSlipperyInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Main.
        /// </summary>
        public static string Mod_RRR_MemMod_MainHeader {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_MainHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missile launchers target Rayman.
        /// </summary>
        public static string Mod_RRR_MemMod_MissileLaunchersTarget {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_MissileLaunchersTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missiles will target Rayman, but 1 hit from them will kill Rayman!.
        /// </summary>
        public static string Mod_RRR_MemMod_MissileLaunchersTargetInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_MissileLaunchersTargetInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mounts.
        /// </summary>
        public static string Mod_RRR_MemMod_MountsHeader {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_MountsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reduce damage taken.
        /// </summary>
        public static string Mod_RRR_MemMod_NoInstaKill {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_NoInstaKill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instead of instantly dying Rayman will now die after 4 hits.
        /// </summary>
        public static string Mod_RRR_MemMod_NoInstaKillInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_NoInstaKillInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pigs act like plums.
        /// </summary>
        public static string Mod_RRR_MemMod_PigsActLikePlums {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_PigsActLikePlums", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pigs use plum behavior and become very bouncy. Try throwing them onto the rabbids&apos; heads!.
        /// </summary>
        public static string Mod_RRR_MemMod_PigsActLikePlumsInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_PigsActLikePlumsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rabbids drop items.
        /// </summary>
        public static string Mod_RRR_MemMod_RabbidsDropItems {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_RabbidsDropItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rabbids drop their items for Rayman to use.
        /// </summary>
        public static string Mod_RRR_MemMod_RabbidsDropItemsInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_RabbidsDropItemsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rabbids.
        /// </summary>
        public static string Mod_RRR_MemMod_RabbidsHeader {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_RabbidsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rabbids receive randomized prototype powers.
        /// </summary>
        public static string Mod_RRR_MemMod_RandomProtoRabbidPowers {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_RandomProtoRabbidPowers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some Rabbids are given one of 4 prototype powers. Discover them while playing!.
        /// </summary>
        public static string Mod_RRR_MemMod_RandomProtoRabbidPowersInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_RandomProtoRabbidPowersInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman.
        /// </summary>
        public static string Mod_RRR_MemMod_RaymanHeader {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_RaymanHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For an Xbox 360 controller, the controls are mapped as follows:
        ///    A: Jump / Hold in the air to use helicopter
        ///    X: Attack
        ///    Y: Use grappling hook
        ///    LB: Toggle light / Hold to control dance tempo if enabled
        ///    LT: Look mode if enabled
        ///    RB: Attack / Press or hold to use finishers if enabled
        ///    RT: Dodge roll / Ground pound / Roll and jump multiple times to boost if enabled
        ///    D-Pad Up: Toggle dance mode. In dance mode, press ABXY or use the left analog stick to perform dance moves
        ///    L [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Mod_RRR_MemMod_RaymanInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_RaymanInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saucers start off flying.
        /// </summary>
        public static string Mod_RRR_MemMod_SaucersStartFlying {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_SaucersStartFlying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saucers can be found flying around, but this makes them harder to mount.
        /// </summary>
        public static string Mod_RRR_MemMod_SaucersStartFlyingInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_SaucersStartFlyingInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use selected disguise.
        /// </summary>
        public static string Mod_RRR_MemMod_SetCostume {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_SetCostume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman&apos;s costume will always be based on the player&apos;s costume selection in the menu.
        /// </summary>
        public static string Mod_RRR_MemMod_SetCostumeInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_SetCostumeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spider robots can jump.
        /// </summary>
        public static string Mod_RRR_MemMod_SpiderJump {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_SpiderJump", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When riding the spider-like robots, you can jump like spiders could in the prototype.
        /// </summary>
        public static string Mod_RRR_MemMod_SpiderJumpInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_SpiderJumpInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tame mounts.
        /// </summary>
        public static string Mod_RRR_MemMod_TameMounts {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_TameMounts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mounts become controllable when you first ride them.
        /// </summary>
        public static string Mod_RRR_MemMod_TameMountsInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_TameMountsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unlock everything.
        /// </summary>
        public static string Mod_RRR_MemMod_UnlockAllMinigames {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_UnlockAllMinigames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A developer cheat. Everything in score mode and the bonus section is unlocked regardless of your progress in the game..
        /// </summary>
        public static string Mod_RRR_MemMod_UnlockAllMinigamesInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_UnlockAllMinigamesInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgraded powers.
        /// </summary>
        public static string Mod_RRR_MemMod_UpgradedPowers {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_UpgradedPowers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows Rayman to use the helicopter for a longer time and, if Climb walls is enabled, hold onto walls infinitely.
        /// </summary>
        public static string Mod_RRR_MemMod_UpgradedPowersInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemMod_UpgradedPowersInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Memory Mods.
        /// </summary>
        public static string Mod_RRR_MemoryModsHeader {
            get {
                return ResourceManager.GetString("Mod_RRR_MemoryModsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable removed prototype features in the game by selecting the mods you want and then apply them. This requires the game to be running and only works with the GOG and Steam versions. Applied mods will only be in effect when the game is running and will be reset when closed..
        /// </summary>
        public static string Mod_RRR_MemoryModsInfo {
            get {
                return ResourceManager.GetString("Mod_RRR_MemoryModsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove patched BF.
        /// </summary>
        public static string Mod_RRR_RemoveBFPatch {
            get {
                return ResourceManager.GetString("Mod_RRR_RemoveBFPatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Revert executable patch.
        /// </summary>
        public static string Mod_RRR_RevertExePatch {
            get {
                return ResourceManager.GetString("Mod_RRR_RevertExePatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update patched BF.
        /// </summary>
        public static string Mod_RRR_UpdateBFPatch {
            get {
                return ResourceManager.GetString("Mod_RRR_UpdateBFPatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mods.
        /// </summary>
        public static string ModsPageHeader {
            get {
                return ResourceManager.GetString("ModsPageHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drive.
        /// </summary>
        public static string MountOption_Drive {
            get {
                return ResourceManager.GetString("MountOption_Drive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicate that the mount path is a drive or disc.
        /// </summary>
        public static string MountOption_DriveInfo {
            get {
                return ResourceManager.GetString("MountOption_DriveInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File.
        /// </summary>
        public static string MountOption_File {
            get {
                return ResourceManager.GetString("MountOption_File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicate that the mount path is a file.
        /// </summary>
        public static string MountOption_FileInfo {
            get {
                return ResourceManager.GetString("MountOption_FileInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mount Path.
        /// </summary>
        public static string MountPathHeader {
            get {
                return ResourceManager.GetString("MountPathHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The mount path can either be a file or a drive. If you&apos;re using the GOG version it&apos;ll be the &apos;game.inst&apos; file. If you have a disc image it is usually the .cue file. Otherwise use the drive letter of the game disc..
        /// </summary>
        public static string MountPathInfo {
            get {
                return ResourceManager.GetString("MountPathInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backups were not moved. A backup already exists in {0}.
        /// </summary>
        public static string MoveBackups_BackupAlreadyExists {
            get {
                return ResourceManager.GetString("MoveBackups_BackupAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error moving backup.
        /// </summary>
        public static string MoveBackups_Error {
            get {
                return ResourceManager.GetString("MoveBackups_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Moving backups failed.
        /// </summary>
        public static string MoveBackups_ErrorHeader {
            get {
                return ResourceManager.GetString("MoveBackups_ErrorHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No backups found in {0}.
        /// </summary>
        public static string MoveBackups_NoBackupsFound {
            get {
                return ResourceManager.GetString("MoveBackups_NoBackupsFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to move existing backups to the new location?.
        /// </summary>
        public static string MoveBackups_Question {
            get {
                return ResourceManager.GetString("MoveBackups_Question", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move old backups.
        /// </summary>
        public static string MoveBackups_QuestionHeader {
            get {
                return ResourceManager.GetString("MoveBackups_QuestionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The backups have been moved successfully.
        /// </summary>
        public static string MoveBackups_Success {
            get {
                return ResourceManager.GetString("MoveBackups_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This feature has not been implemented yet.
        /// </summary>
        public static string NotImplemented {
            get {
                return ResourceManager.GetString("NotImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ok.
        /// </summary>
        public static string Ok {
            get {
                return ResourceManager.GetString("Ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh.
        /// </summary>
        public static string Page_Refresh {
            get {
                return ResourceManager.GetString("Page_Refresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Part {0}.
        /// </summary>
        public static string PartX {
            get {
                return ResourceManager.GetString("PartX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add.
        /// </summary>
        public static string PatchCreator_AddFile {
            get {
                return ResourceManager.GetString("PatchCreator_AddFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add from files.
        /// </summary>
        public static string PatchCreator_AddFromFiles {
            get {
                return ResourceManager.GetString("PatchCreator_AddFromFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select files to add.
        /// </summary>
        public static string PatchCreator_AddFromFilesHeader {
            get {
                return ResourceManager.GetString("PatchCreator_AddFromFilesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add from folder.
        /// </summary>
        public static string PatchCreator_AddFromFolder {
            get {
                return ResourceManager.GetString("PatchCreator_AddFromFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when adding the selected files.
        /// </summary>
        public static string PatchCreator_AddFromFolderError {
            get {
                return ResourceManager.GetString("PatchCreator_AddFromFolderError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select folder to add.
        /// </summary>
        public static string PatchCreator_AddFromFolderHeader {
            get {
                return ResourceManager.GetString("PatchCreator_AddFromFolderHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a thumbnail. The recommended size is 128x128..
        /// </summary>
        public static string PatchCreator_AddThumbnailInfo {
            get {
                return ResourceManager.GetString("PatchCreator_AddThumbnailInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Author.
        /// </summary>
        public static string PatchCreator_AuthorField {
            get {
                return ResourceManager.GetString("PatchCreator_AuthorField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create.
        /// </summary>
        public static string PatchCreator_Create {
            get {
                return ResourceManager.GetString("PatchCreator_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating patch.
        /// </summary>
        public static string PatchCreator_Create_Status {
            get {
                return ResourceManager.GetString("PatchCreator_Create_Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when creating the patch.
        /// </summary>
        public static string PatchCreator_CreateError {
            get {
                return ResourceManager.GetString("PatchCreator_CreateError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create new patch.
        /// </summary>
        public static string PatchCreator_CreateNew {
            get {
                return ResourceManager.GetString("PatchCreator_CreateNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save patch file.
        /// </summary>
        public static string PatchCreator_CreateSaveFileHeader {
            get {
                return ResourceManager.GetString("PatchCreator_CreateSaveFileHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The patch was saved successfully.
        /// </summary>
        public static string PatchCreator_CreateSuccess {
            get {
                return ResourceManager.GetString("PatchCreator_CreateSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description.
        /// </summary>
        public static string PatchCreator_DescriptionField {
            get {
                return ResourceManager.GetString("PatchCreator_DescriptionField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Importing from existing patch.
        /// </summary>
        public static string PatchCreator_ImportingPatch_Status {
            get {
                return ResourceManager.GetString("PatchCreator_ImportingPatch_Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string PatchCreator_NameField {
            get {
                return ResourceManager.GetString("PatchCreator_NameField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path can not be empty.
        /// </summary>
        public static string PatchCreator_PathEmptyError {
            get {
                return ResourceManager.GetString("PatchCreator_PathEmptyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path can not contain invalid characters.
        /// </summary>
        public static string PatchCreator_PathInvalidCharsError {
            get {
                return ResourceManager.GetString("PatchCreator_PathInvalidCharsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path can not be the same as an archive file.
        /// </summary>
        public static string PatchCreator_PathLocationCollisionError {
            get {
                return ResourceManager.GetString("PatchCreator_PathLocationCollisionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove the thumbnail.
        /// </summary>
        public static string PatchCreator_RemoveThumbnailInfo {
            get {
                return ResourceManager.GetString("PatchCreator_RemoveThumbnailInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a patch to import from.
        /// </summary>
        public static string PatchCreator_SelectImportPatch {
            get {
                return ResourceManager.GetString("PatchCreator_SelectImportPatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a thumbnail.
        /// </summary>
        public static string PatchCreator_SelectThumbnailHeader {
            get {
                return ResourceManager.GetString("PatchCreator_SelectThumbnailHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path of the file to add to the specified destination. If this is empty then any existing file at the destination will be removed instead..
        /// </summary>
        public static string PatchCreator_SourcePathInfo {
            get {
                return ResourceManager.GetString("PatchCreator_SourcePathInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch Creator.
        /// </summary>
        public static string PatchCreator_Title {
            get {
                return ResourceManager.GetString("PatchCreator_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        public static string PatchCreator_VersionField {
            get {
                return ResourceManager.GetString("PatchCreator_VersionField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Website.
        /// </summary>
        public static string PatchCreator_WebsiteField {
            get {
                return ResourceManager.GetString("PatchCreator_WebsiteField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add patch.
        /// </summary>
        public static string Patcher_AddPatch {
            get {
                return ResourceManager.GetString("Patcher_AddPatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select patches to add.
        /// </summary>
        public static string Patcher_AddPatchHeader {
            get {
                return ResourceManager.GetString("Patcher_AddPatchHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply.
        /// </summary>
        public static string Patcher_Apply {
            get {
                return ResourceManager.GetString("Patcher_Apply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applying patches.
        /// </summary>
        public static string Patcher_Apply_Status {
            get {
                return ResourceManager.GetString("Patcher_Apply_Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when applying the patches. Not all changes were applied and some data might have been lost. Make sure to not have any files from the game open while applying patches..
        /// </summary>
        public static string Patcher_ApplyError {
            get {
                return ResourceManager.GetString("Patcher_ApplyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully applied all patches.
        /// </summary>
        public static string Patcher_ApplySuccess {
            get {
                return ResourceManager.GetString("Patcher_ApplySuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finished applying patches. Some files could not be modified..
        /// </summary>
        public static string Patcher_ApplySuccessWithErrors {
            get {
                return ResourceManager.GetString("Patcher_ApplySuccessWithErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when setting the file type association for patch files. Try running the Rayman Control Panel as admin and try again..
        /// </summary>
        public static string Patcher_AssociateFileTypeError {
            get {
                return ResourceManager.GetString("Patcher_AssociateFileTypeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when setting the URI protocol association for patch files. Try running the Rayman Control Panel as admin and try again..
        /// </summary>
        public static string Patcher_AssociateURIProtocolError {
            get {
                return ResourceManager.GetString("Patcher_AssociateURIProtocolError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred in the patcher and it had to close.
        /// </summary>
        public static string Patcher_CriticalError {
            get {
                return ResourceManager.GetString("Patcher_CriticalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patcher - {0}.
        /// </summary>
        public static string Patcher_DialogTitle {
            get {
                return ResourceManager.GetString("Patcher_DialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download.
        /// </summary>
        public static string Patcher_DownloadPatch {
            get {
                return ResourceManager.GetString("Patcher_DownloadPatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exporting patch.
        /// </summary>
        public static string Patcher_Export_Status {
            get {
                return ResourceManager.GetString("Patcher_Export_Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when exporting the patch.
        /// </summary>
        public static string Patcher_ExportError {
            get {
                return ResourceManager.GetString("Patcher_ExportError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export patch.
        /// </summary>
        public static string Patcher_ExportPatch {
            get {
                return ResourceManager.GetString("Patcher_ExportPatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The patch was successfully exported.
        /// </summary>
        public static string Patcher_ExportSuccess {
            get {
                return ResourceManager.GetString("Patcher_ExportSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extracting patch contents.
        /// </summary>
        public static string Patcher_ExtractContents_Status {
            get {
                return ResourceManager.GetString("Patcher_ExtractContents_Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when extracting the patch contents.
        /// </summary>
        public static string Patcher_ExtractContentsError {
            get {
                return ResourceManager.GetString("Patcher_ExtractContentsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The patch contents were successfully extracted.
        /// </summary>
        public static string Patcher_ExtractContentsSuccess {
            get {
                return ResourceManager.GetString("Patcher_ExtractContentsSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extract contents.
        /// </summary>
        public static string Patcher_ExtractPatch {
            get {
                return ResourceManager.GetString("Patcher_ExtractPatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Patch.
        /// </summary>
        public static string Patcher_FileType {
            get {
                return ResourceManager.GetString("Patcher_FileType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ID.
        /// </summary>
        public static string Patcher_ID {
            get {
                return ResourceManager.GetString("Patcher_ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch Library.
        /// </summary>
        public static string Patcher_LibraryHeader {
            get {
                return ResourceManager.GetString("Patcher_LibraryHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added files:.
        /// </summary>
        public static string Patcher_LibraryInfo_AddedFiles {
            get {
                return ResourceManager.GetString("Patcher_LibraryInfo_AddedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applied patches:.
        /// </summary>
        public static string Patcher_LibraryInfo_AppliedPatches {
            get {
                return ResourceManager.GetString("Patcher_LibraryInfo_AppliedPatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Format version:.
        /// </summary>
        public static string Patcher_LibraryInfo_FormatVersion {
            get {
                return ResourceManager.GetString("Patcher_LibraryInfo_FormatVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game:.
        /// </summary>
        public static string Patcher_LibraryInfo_Game {
            get {
                return ResourceManager.GetString("Patcher_LibraryInfo_Game", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Directory:.
        /// </summary>
        public static string Patcher_LibraryInfo_Location {
            get {
                return ResourceManager.GetString("Patcher_LibraryInfo_Location", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last modified:.
        /// </summary>
        public static string Patcher_LibraryInfo_ModifiedDate {
            get {
                return ResourceManager.GetString("Patcher_LibraryInfo_ModifiedDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patches:.
        /// </summary>
        public static string Patcher_LibraryInfo_Patches {
            get {
                return ResourceManager.GetString("Patcher_LibraryInfo_Patches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removed files:.
        /// </summary>
        public static string Patcher_LibraryInfo_RemovedFiles {
            get {
                return ResourceManager.GetString("Patcher_LibraryInfo_RemovedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replaced files:.
        /// </summary>
        public static string Patcher_LibraryInfo_ReplacedFiles {
            get {
                return ResourceManager.GetString("Patcher_LibraryInfo_ReplacedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when loading the patches.
        /// </summary>
        public static string Patcher_LoadError {
            get {
                return ResourceManager.GetString("Patcher_LoadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when loading external patches.
        /// </summary>
        public static string Patcher_LoadExternalGenericError {
            get {
                return ResourceManager.GetString("Patcher_LoadExternalGenericError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File.
        /// </summary>
        public static string Patcher_Modifications_FileColumn {
            get {
                return ResourceManager.GetString("Patcher_Modifications_FileColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location.
        /// </summary>
        public static string Patcher_Modifications_LocationColumn {
            get {
                return ResourceManager.GetString("Patcher_Modifications_LocationColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overridden Patches.
        /// </summary>
        public static string Patcher_Modifications_OverridesColumn {
            get {
                return ResourceManager.GetString("Patcher_Modifications_OverridesColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patch.
        /// </summary>
        public static string Patcher_Modifications_PatchColumn {
            get {
                return ResourceManager.GetString("Patcher_Modifications_PatchColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add and enable a patch to modify the game files.
        /// </summary>
        public static string Patcher_ModificationsEmpty {
            get {
                return ResourceManager.GetString("Patcher_ModificationsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modified files.
        /// </summary>
        public static string Patcher_ModificationsHeader {
            get {
                return ResourceManager.GetString("Patcher_ModificationsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patches.
        /// </summary>
        public static string Patcher_PatchesHeader {
            get {
                return ResourceManager.GetString("Patcher_PatchesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patches are modifications to the game files which can be applied to change or improve the game in various ways. The patch won&apos;t go into effect until it&apos;s enabled and applied, allowing patches to be easily toggled on and off. It is not recommended manually changing game files which a patch modifies as it might result in some changes being lost..
        /// </summary>
        public static string Patcher_PatchesInfo {
            get {
                return ResourceManager.GetString("Patcher_PatchesInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added files:.
        /// </summary>
        public static string Patcher_PatchInfo_AddedFiles {
            get {
                return ResourceManager.GetString("Patcher_PatchInfo_AddedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Author:.
        /// </summary>
        public static string Patcher_PatchInfo_Author {
            get {
                return ResourceManager.GetString("Patcher_PatchInfo_Author", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File path:.
        /// </summary>
        public static string Patcher_PatchInfo_FilePath {
            get {
                return ResourceManager.GetString("Patcher_PatchInfo_FilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Format version:.
        /// </summary>
        public static string Patcher_PatchInfo_FormatVersion {
            get {
                return ResourceManager.GetString("Patcher_PatchInfo_FormatVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ID:.
        /// </summary>
        public static string Patcher_PatchInfo_ID {
            get {
                return ResourceManager.GetString("Patcher_PatchInfo_ID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last modified:.
        /// </summary>
        public static string Patcher_PatchInfo_ModifiedDate {
            get {
                return ResourceManager.GetString("Patcher_PatchInfo_ModifiedDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removed files:.
        /// </summary>
        public static string Patcher_PatchInfo_RemovedFiles {
            get {
                return ResourceManager.GetString("Patcher_PatchInfo_RemovedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size:.
        /// </summary>
        public static string Patcher_PatchInfo_Size {
            get {
                return ResourceManager.GetString("Patcher_PatchInfo_Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version:.
        /// </summary>
        public static string Patcher_PatchInfo_Version {
            get {
                return ResourceManager.GetString("Patcher_PatchInfo_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Website.
        /// </summary>
        public static string Patcher_PatchWebsiteLink {
            get {
                return ResourceManager.GetString("Patcher_PatchWebsiteLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game.
        /// </summary>
        public static string Patcher_PhysicalGameLocation {
            get {
                return ResourceManager.GetString("Patcher_PhysicalGameLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The game patch library was made with a newer version of the Rayman Control Panel and can not be read.
        /// </summary>
        public static string Patcher_ReadLibraryNewerVersionError {
            get {
                return ResourceManager.GetString("Patcher_ReadLibraryNewerVersionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected patch could not be read.
        /// </summary>
        public static string Patcher_ReadPatchGenericError {
            get {
                return ResourceManager.GetString("Patcher_ReadPatchGenericError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected patch was made with a newer version of the Rayman Control Panel and can not be read.
        /// </summary>
        public static string Patcher_ReadPatchNewerVersionError {
            get {
                return ResourceManager.GetString("Patcher_ReadPatchNewerVersionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove.
        /// </summary>
        public static string Patcher_RemovePatch {
            get {
                return ResourceManager.GetString("Patcher_RemovePatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The patch {0} adds or replaces sensitive files, such as executable files, in the game. Only add this patch if you trust the author. Continue?.
        /// </summary>
        public static string Patcher_SecurityWarning {
            get {
                return ResourceManager.GetString("Patcher_SecurityWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patcher.
        /// </summary>
        public static string Patcher_Title {
            get {
                return ResourceManager.GetString("Patcher_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup migration error.
        /// </summary>
        public static string PostUpdate_MigrateBackupErrorHeader {
            get {
                return ResourceManager.GetString("PostUpdate_MigrateBackupErrorHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when migrating the existing Rayman Fiesta Run backup to the new 5.0.0 backup standard. Due to this your backup will become unavailable, but will remain in your backup folder and can be restored manually..
        /// </summary>
        public static string PostUpdate_MigrateFiestaRunBackup5Error {
            get {
                return ResourceManager.GetString("PostUpdate_MigrateFiestaRunBackup5Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2003 Version.
        /// </summary>
        public static string PrintStudioOptions_Version03 {
            get {
                return ResourceManager.GetString("PrintStudioOptions_Version03", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2005 Version.
        /// </summary>
        public static string PrintStudioOptions_Version05 {
            get {
                return ResourceManager.GetString("PrintStudioOptions_Version05", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Print Studio version.
        /// </summary>
        public static string PrintStudioOptions_VersionHeader {
            get {
                return ResourceManager.GetString("PrintStudioOptions_VersionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changing the version will change the available options in the game. The 2003 version has calenders for the years 2003 and 2004. The 2005 version has calenders for the years 2006 and 2007 as well as the &apos;goodies&apos; section..
        /// </summary>
        public static string PrintStudioOptions_VersionInfo {
            get {
                return ResourceManager.GetString("PrintStudioOptions_VersionInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when updating the Print Studio version.
        /// </summary>
        public static string PrintStudioOptions_VersionUpdateError {
            get {
                return ResourceManager.GetString("PrintStudioOptions_VersionUpdateError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attach.
        /// </summary>
        public static string ProcessAttacher_Attach {
            get {
                return ResourceManager.GetString("ProcessAttacher_Attach", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detach.
        /// </summary>
        public static string ProcessAttacher_Detach {
            get {
                return ResourceManager.GetString("ProcessAttacher_Detach", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup.
        /// </summary>
        public static string Progression_BackupSlots {
            get {
                return ResourceManager.GetString("Progression_BackupSlots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New changes are not backed up.
        /// </summary>
        public static string Progression_BackupStatus_Outdated {
            get {
                return ResourceManager.GetString("Progression_BackupStatus_Outdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backed up.
        /// </summary>
        public static string Progression_BackupStatus_UpToDate {
            get {
                return ResourceManager.GetString("Progression_BackupStatus_UpToDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cages.
        /// </summary>
        public static string Progression_Cages {
            get {
                return ResourceManager.GetString("Progression_Cages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change save editor program.
        /// </summary>
        public static string Progression_ChangeEditProgram {
            get {
                return ResourceManager.GetString("Progression_ChangeEditProgram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continues.
        /// </summary>
        public static string Progression_Continues {
            get {
                return ResourceManager.GetString("Progression_Continues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data source.
        /// </summary>
        public static string Progression_DataSource {
            get {
                return ResourceManager.GetString("Progression_DataSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto.
        /// </summary>
        public static string Progression_DataSource_Auto {
            get {
                return ResourceManager.GetString("Progression_DataSource_Auto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When creating a new backup or using the save files for the progression view then the location with the most recent files is chosen. When restoring a backup it will restore to both locations..
        /// </summary>
        public static string Progression_DataSource_AutoInfo {
            get {
                return ResourceManager.GetString("Progression_DataSource_AutoInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default.
        /// </summary>
        public static string Progression_DataSource_Default {
            get {
                return ResourceManager.GetString("Progression_DataSource_Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default location is always used. This corresponds to the location the game uses when it is running as admin..
        /// </summary>
        public static string Progression_DataSource_DefaultInfo {
            get {
                return ResourceManager.GetString("Progression_DataSource_DefaultInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VirtualStore.
        /// </summary>
        public static string Progression_DataSource_VirtualStore {
            get {
                return ResourceManager.GetString("Progression_DataSource_VirtualStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The VirtualStore location is always used. This corresponds to the location the game uses when it is not running as admin..
        /// </summary>
        public static string Progression_DataSource_VirtualStoreInfo {
            get {
                return ResourceManager.GetString("Progression_DataSource_VirtualStoreInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For older applications Windows will in some cases redirect save/config files to the VirtualStore if the application is not running as admin. The side effect of this is that you will have different save/config files being used for the game depending on if you&apos;re running it as admin or not.
        ///By changing the data source here you can choose which location is used for backups and the progression view..
        /// </summary>
        public static string Progression_DataSourceInfo {
            get {
                return ResourceManager.GetString("Progression_DataSourceInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit.
        /// </summary>
        public static string Progression_EditSlot {
            get {
                return ResourceManager.GetString("Progression_EditSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Electoons.
        /// </summary>
        public static string Progression_Electoons {
            get {
                return ResourceManager.GetString("Progression_Electoons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export.
        /// </summary>
        public static string Progression_Export {
            get {
                return ResourceManager.GetString("Progression_Export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when exporting the save file. Make sure the file is supported..
        /// </summary>
        public static string Progression_ExportError {
            get {
                return ResourceManager.GetString("Progression_ExportError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The save file has been successfully exported.
        /// </summary>
        public static string Progression_ExportSuccess {
            get {
                return ResourceManager.GetString("Progression_ExportSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Slot {0}.
        /// </summary>
        public static string Progression_GenericSlot {
            get {
                return ResourceManager.GetString("Progression_GenericSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Progression.
        /// </summary>
        public static string Progression_Header {
            get {
                return ResourceManager.GetString("Progression_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import.
        /// </summary>
        public static string Progression_Import {
            get {
                return ResourceManager.GetString("Progression_Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when importing the save file. Make sure the format of the .JSON file is correct and that the save file is supported..
        /// </summary>
        public static string Progression_ImportError {
            get {
                return ResourceManager.GetString("Progression_ImportError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The save file has been successfully imported.
        /// </summary>
        public static string Progression_ImportSuccess {
            get {
                return ResourceManager.GetString("Progression_ImportSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completed levels.
        /// </summary>
        public static string Progression_LevelsCompleted {
            get {
                return ResourceManager.GetString("Progression_LevelsCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lives.
        /// </summary>
        public static string Progression_Lives {
            get {
                return ResourceManager.GetString("Progression_Lives", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lums.
        /// </summary>
        public static string Progression_Lums {
            get {
                return ResourceManager.GetString("Progression_Lums", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Fairy Council.
        /// </summary>
        public static string Progression_R3_Level1Header {
            get {
                return ResourceManager.GetString("Progression_R3_Level1Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clearleaf Forest.
        /// </summary>
        public static string Progression_R3_Level2Header {
            get {
                return ResourceManager.GetString("Progression_R3_Level2Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Bog of Murk.
        /// </summary>
        public static string Progression_R3_Level3Header {
            get {
                return ResourceManager.GetString("Progression_R3_Level3Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Land of the Livid Dead.
        /// </summary>
        public static string Progression_R3_Level4Header {
            get {
                return ResourceManager.GetString("Progression_R3_Level4Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Desert of the Knaaren.
        /// </summary>
        public static string Progression_R3_Level5Header {
            get {
                return ResourceManager.GetString("Progression_R3_Level5Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Longest Shortcut.
        /// </summary>
        public static string Progression_R3_Level6Header {
            get {
                return ResourceManager.GetString("Progression_R3_Level6Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Summit Beyond the Clouds.
        /// </summary>
        public static string Progression_R3_Level7Header {
            get {
                return ResourceManager.GetString("Progression_R3_Level7Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hoodlum Headquarters.
        /// </summary>
        public static string Progression_R3_Level8Header {
            get {
                return ResourceManager.GetString("Progression_R3_Level8Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Tower of the Leptys.
        /// </summary>
        public static string Progression_R3_Level9Header {
            get {
                return ResourceManager.GetString("Progression_R3_Level9Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stamps.
        /// </summary>
        public static string Progression_R3Stamps {
            get {
                return ResourceManager.GetString("Progression_R3Stamps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stars.
        /// </summary>
        public static string Progression_RabbidsBigBangStars {
            get {
                return ResourceManager.GetString("Progression_RabbidsBigBangStars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rank.
        /// </summary>
        public static string Progression_Rank {
            get {
                return ResourceManager.GetString("Progression_Rank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bzzit skins.
        /// </summary>
        public static string Progression_RedemptionBzzitSkins {
            get {
                return ResourceManager.GetString("Progression_RedemptionBzzitSkins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checkpoint skins.
        /// </summary>
        public static string Progression_RedemptionCheckpointSkins {
            get {
                return ResourceManager.GetString("Progression_RedemptionCheckpointSkins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Presents.
        /// </summary>
        public static string Progression_RedemptionPresents {
            get {
                return ResourceManager.GetString("Progression_RedemptionPresents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman skins.
        /// </summary>
        public static string Progression_RedemptionRaySkins {
            get {
                return ResourceManager.GetString("Progression_RedemptionRaySkins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tokens.
        /// </summary>
        public static string Progression_RedemptionTokens {
            get {
                return ResourceManager.GetString("Progression_RedemptionTokens", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Crowns.
        /// </summary>
        public static string Progression_RFRCrowns {
            get {
                return ResourceManager.GetString("Progression_RFRCrowns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nightmare mode.
        /// </summary>
        public static string Progression_RFRNightmareMode {
            get {
                return ResourceManager.GetString("Progression_RFRNightmareMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bronze cups.
        /// </summary>
        public static string Progression_RLBronzeCups {
            get {
                return ResourceManager.GetString("Progression_RLBronzeCups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Diamond cups.
        /// </summary>
        public static string Progression_RLDiamondCups {
            get {
                return ResourceManager.GetString("Progression_RLDiamondCups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gold cups.
        /// </summary>
        public static string Progression_RLGoldCups {
            get {
                return ResourceManager.GetString("Progression_RLGoldCups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Silver cups.
        /// </summary>
        public static string Progression_RLSilverCups {
            get {
                return ResourceManager.GetString("Progression_RLSilverCups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Best Lap - Lums.
        /// </summary>
        public static string Progression_RM_LapLums {
            get {
                return ResourceManager.GetString("Progression_RM_LapLums", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Best Lap - Race.
        /// </summary>
        public static string Progression_RM_LapRace {
            get {
                return ResourceManager.GetString("Progression_RM_LapRace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Best Lap - Target.
        /// </summary>
        public static string Progression_RM_LapTarget {
            get {
                return ResourceManager.GetString("Progression_RM_LapTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Best Lap - Training.
        /// </summary>
        public static string Progression_RM_LapTraining {
            get {
                return ResourceManager.GetString("Progression_RM_LapTraining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lums.
        /// </summary>
        public static string Progression_RM_Lums {
            get {
                return ResourceManager.GetString("Progression_RM_Lums", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Targets.
        /// </summary>
        public static string Progression_RM_Targets {
            get {
                return ResourceManager.GetString("Progression_RM_Targets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Best Time - Lums.
        /// </summary>
        public static string Progression_RM_TimeLums {
            get {
                return ResourceManager.GetString("Progression_RM_TimeLums", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Best Time - Race.
        /// </summary>
        public static string Progression_RM_TimeRace {
            get {
                return ResourceManager.GetString("Progression_RM_TimeRace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Best Time - Target.
        /// </summary>
        public static string Progression_RM_TimeTarget {
            get {
                return ResourceManager.GetString("Progression_RM_TimeTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finished battles.
        /// </summary>
        public static string Progression_RMBattlesCompleted {
            get {
                return ResourceManager.GetString("Progression_RMBattlesCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finished races.
        /// </summary>
        public static string Progression_RMRacesCompleted {
            get {
                return ResourceManager.GetString("Progression_RMRacesCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lum medals.
        /// </summary>
        public static string Progression_ROLumMedals {
            get {
                return ResourceManager.GetString("Progression_ROLumMedals", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Speed trophies.
        /// </summary>
        public static string Progression_ROSpeedTrophies {
            get {
                return ResourceManager.GetString("Progression_ROSpeedTrophies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Days.
        /// </summary>
        public static string Progression_RRRDays {
            get {
                return ResourceManager.GetString("Progression_RRRDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completed minigames.
        /// </summary>
        public static string Progression_RRRMinigamesCompleted {
            get {
                return ResourceManager.GetString("Progression_RRRMinigamesCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} (Points).
        /// </summary>
        public static string Progression_RRRPoints {
            get {
                return ResourceManager.GetString("Progression_RRRPoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} (Score).
        /// </summary>
        public static string Progression_RRRScore {
            get {
                return ResourceManager.GetString("Progression_RRRScore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Score.
        /// </summary>
        public static string Progression_RRRScoreSlot {
            get {
                return ResourceManager.GetString("Progression_RRRScoreSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total points.
        /// </summary>
        public static string Progression_RRRTotalPoints {
            get {
                return ResourceManager.GetString("Progression_RRRTotalPoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The save file has been successfully modified.
        /// </summary>
        public static string Progression_SaveEditSuccess {
            get {
                return ResourceManager.GetString("Progression_SaveEditSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Editing save files may corrupt them if done incorrectly. It is highly recommended to keep a backup before proceeding. Continue?.
        /// </summary>
        public static string Progression_SaveEditWarning {
            get {
                return ResourceManager.GetString("Progression_SaveEditWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm save file editing.
        /// </summary>
        public static string Progression_SaveEditWarningHeader {
            get {
                return ResourceManager.GetString("Progression_SaveEditWarningHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select an executable for editing JSON save files.
        /// </summary>
        public static string Progression_SelectEditProgram {
            get {
                return ResourceManager.GetString("Progression_SelectEditProgram", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File.
        /// </summary>
        public static string Progression_SlotInfo_File {
            get {
                return ResourceManager.GetString("Progression_SlotInfo_File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last modified.
        /// </summary>
        public static string Progression_SlotInfo_LastModified {
            get {
                return ResourceManager.GetString("Progression_SlotInfo_LastModified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Size.
        /// </summary>
        public static string Progression_SlotInfo_Size {
            get {
                return ResourceManager.GetString("Progression_SlotInfo_Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Teensies.
        /// </summary>
        public static string Progression_Teensies {
            get {
                return ResourceManager.GetString("Progression_Teensies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Teeth.
        /// </summary>
        public static string Progression_Teeth {
            get {
                return ResourceManager.GetString("Progression_Teeth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tings.
        /// </summary>
        public static string Progression_Tings {
            get {
                return ResourceManager.GetString("Progression_Tings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total score.
        /// </summary>
        public static string Progression_TotalScore {
            get {
                return ResourceManager.GetString("Progression_TotalScore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pink Plant Woods.
        /// </summary>
        public static string R1_LevelName_0 {
            get {
                return ResourceManager.GetString("R1_LevelName_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anguish Lagoon.
        /// </summary>
        public static string R1_LevelName_1 {
            get {
                return ResourceManager.GetString("R1_LevelName_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mr Stone&apos;s Peaks.
        /// </summary>
        public static string R1_LevelName_10 {
            get {
                return ResourceManager.GetString("R1_LevelName_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Eraser Plains.
        /// </summary>
        public static string R1_LevelName_11 {
            get {
                return ResourceManager.GetString("R1_LevelName_11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pencil Pentathlon.
        /// </summary>
        public static string R1_LevelName_12 {
            get {
                return ResourceManager.GetString("R1_LevelName_12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Space Mama&apos;s Crater.
        /// </summary>
        public static string R1_LevelName_13 {
            get {
                return ResourceManager.GetString("R1_LevelName_13", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Crystal Palace.
        /// </summary>
        public static string R1_LevelName_14 {
            get {
                return ResourceManager.GetString("R1_LevelName_14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Eat at Joe&apos;s.
        /// </summary>
        public static string R1_LevelName_15 {
            get {
                return ResourceManager.GetString("R1_LevelName_15", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mr Skops&apos; Stalactites.
        /// </summary>
        public static string R1_LevelName_16 {
            get {
                return ResourceManager.GetString("R1_LevelName_16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mr Dark&apos;s Dare.
        /// </summary>
        public static string R1_LevelName_17 {
            get {
                return ResourceManager.GetString("R1_LevelName_17", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Swamps of Forgetfulness.
        /// </summary>
        public static string R1_LevelName_2 {
            get {
                return ResourceManager.GetString("R1_LevelName_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Moskito&apos;s Nest.
        /// </summary>
        public static string R1_LevelName_3 {
            get {
                return ResourceManager.GetString("R1_LevelName_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bongo Hills.
        /// </summary>
        public static string R1_LevelName_4 {
            get {
                return ResourceManager.GetString("R1_LevelName_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allegro Presto.
        /// </summary>
        public static string R1_LevelName_5 {
            get {
                return ResourceManager.GetString("R1_LevelName_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gong Heights.
        /// </summary>
        public static string R1_LevelName_6 {
            get {
                return ResourceManager.GetString("R1_LevelName_6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mr Sax&apos;s Hullaballoo.
        /// </summary>
        public static string R1_LevelName_7 {
            get {
                return ResourceManager.GetString("R1_LevelName_7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Twilight Gulch.
        /// </summary>
        public static string R1_LevelName_8 {
            get {
                return ResourceManager.GetString("R1_LevelName_8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Hard Rocks.
        /// </summary>
        public static string R1_LevelName_9 {
            get {
                return ResourceManager.GetString("R1_LevelName_9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continues.
        /// </summary>
        public static string R1Passwords_Continues {
            get {
                return ResourceManager.GetString("R1Passwords_Continues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Beaten boss.
        /// </summary>
        public static string R1Passwords_FinBoss {
            get {
                return ResourceManager.GetString("R1Passwords_FinBoss", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generate.
        /// </summary>
        public static string R1Passwords_Generate {
            get {
                return ResourceManager.GetString("R1Passwords_Generate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Helped The Musician.
        /// </summary>
        public static string R1Passwords_HelpedMus {
            get {
                return ResourceManager.GetString("R1Passwords_HelpedMus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid password.
        /// </summary>
        public static string R1Passwords_Invalid {
            get {
                return ResourceManager.GetString("R1Passwords_Invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid password character {0}.
        /// </summary>
        public static string R1Passwords_InvalidChar {
            get {
                return ResourceManager.GetString("R1Passwords_InvalidChar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password data is invalid.
        /// </summary>
        public static string R1Passwords_InvalidData {
            get {
                return ResourceManager.GetString("R1Passwords_InvalidData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password must contain 10 characters.
        /// </summary>
        public static string R1Passwords_InvalidLength {
            get {
                return ResourceManager.GetString("R1Passwords_InvalidLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All cages.
        /// </summary>
        public static string R1Passwords_LevAllCages {
            get {
                return ResourceManager.GetString("R1Passwords_LevAllCages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unlocked.
        /// </summary>
        public static string R1Passwords_LevUnlocked {
            get {
                return ResourceManager.GetString("R1Passwords_LevUnlocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lives.
        /// </summary>
        public static string R1Passwords_Lives {
            get {
                return ResourceManager.GetString("R1Passwords_Lives", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load.
        /// </summary>
        public static string R1Passwords_Load {
            get {
                return ResourceManager.GetString("R1Passwords_Load", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Complete Soundtrack.
        /// </summary>
        public static string R1U_CompleteOSTHeader {
            get {
                return ResourceManager.GetString("R1U_CompleteOSTHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman Forever, including the GOG version, does not come with the complete soundtrack due to disc space originally not being available. This utility can replace the existing incomplete soundtrack with the complete one, or alternatively revert it back..
        /// </summary>
        public static string R1U_CompleteOSTInfo {
            get {
                return ResourceManager.GetString("R1U_CompleteOSTInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace with complete soundtrack.
        /// </summary>
        public static string R1U_CompleteOSTReplace {
            get {
                return ResourceManager.GetString("R1U_CompleteOSTReplace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Soundtrack replacement failed..
        /// </summary>
        public static string R1U_CompleteOSTReplaceError {
            get {
                return ResourceManager.GetString("R1U_CompleteOSTReplaceError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Revert back to incomplete soundtrack.
        /// </summary>
        public static string R1U_CompleteOSTRevert {
            get {
                return ResourceManager.GetString("R1U_CompleteOSTRevert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1.00.
        /// </summary>
        public static string R1U_TPLS_RayVersions_1_00 {
            get {
                return ResourceManager.GetString("R1U_TPLS_RayVersions_1_00", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1.10.
        /// </summary>
        public static string R1U_TPLS_RayVersions_1_10 {
            get {
                return ResourceManager.GetString("R1U_TPLS_RayVersions_1_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1.12 (Edition 1).
        /// </summary>
        public static string R1U_TPLS_RayVersions_1_12 {
            get {
                return ResourceManager.GetString("R1U_TPLS_RayVersions_1_12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1.12 (Edition 2).
        /// </summary>
        public static string R1U_TPLS_RayVersions_1_12_1 {
            get {
                return ResourceManager.GetString("R1U_TPLS_RayVersions_1_12_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1.12 (Edition 3).
        /// </summary>
        public static string R1U_TPLS_RayVersions_1_12_2 {
            get {
                return ResourceManager.GetString("R1U_TPLS_RayVersions_1_12_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1.20.
        /// </summary>
        public static string R1U_TPLS_RayVersions_1_20 {
            get {
                return ResourceManager.GetString("R1U_TPLS_RayVersions_1_20", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1.21.
        /// </summary>
        public static string R1U_TPLS_RayVersions_1_21 {
            get {
                return ResourceManager.GetString("R1U_TPLS_RayVersions_1_21", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1.21 (Chinese).
        /// </summary>
        public static string R1U_TPLS_RayVersions_1_21_Chinese {
            get {
                return ResourceManager.GetString("R1U_TPLS_RayVersions_1_21_Chinese", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto.
        /// </summary>
        public static string R1U_TPLS_RayVersions_Auto {
            get {
                return ResourceManager.GetString("R1U_TPLS_RayVersions_Auto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to uninstall the Per-Level Soundtrack utility?.
        /// </summary>
        public static string R1U_TPLSConfirmUninstall {
            get {
                return ResourceManager.GetString("R1U_TPLSConfirmUninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm Uninstall.
        /// </summary>
        public static string R1U_TPLSConfirmUninstallHeader {
            get {
                return ResourceManager.GetString("R1U_TPLSConfirmUninstallHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Per-Level Soundtrack.
        /// </summary>
        public static string R1U_TPLSHeader {
            get {
                return ResourceManager.GetString("R1U_TPLSHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By default the PC version only has a single music track for each world. This patch makes each level have its own track, similarily to on PlayStation..
        /// </summary>
        public static string R1U_TPLSInfo {
            get {
                return ResourceManager.GetString("R1U_TPLSInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        public static string R1U_TPLSInstall {
            get {
                return ResourceManager.GetString("R1U_TPLSInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation failed.
        /// </summary>
        public static string R1U_TPLSInstallationFailed {
            get {
                return ResourceManager.GetString("R1U_TPLSInstallationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation Failed.
        /// </summary>
        public static string R1U_TPLSInstallationFailedHeader {
            get {
                return ResourceManager.GetString("R1U_TPLSInstallationFailedHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman version.
        /// </summary>
        public static string R1U_TPLSRaymanVersion {
            get {
                return ResourceManager.GetString("R1U_TPLSRaymanVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall.
        /// </summary>
        public static string R1U_TPLSUninstall {
            get {
                return ResourceManager.GetString("R1U_TPLSUninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when uninstalling.
        /// </summary>
        public static string R1U_TPLSUninstallError {
            get {
                return ResourceManager.GetString("R1U_TPLSUninstallError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstallation Failed.
        /// </summary>
        public static string R1U_TPLSUninstallErrorHeader {
            get {
                return ResourceManager.GetString("R1U_TPLSUninstallErrorHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Utility was successfully uninstalled.
        /// </summary>
        public static string R1U_TPLSUninstallSuccess {
            get {
                return ResourceManager.GetString("R1U_TPLSUninstallSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall Complete.
        /// </summary>
        public static string R1U_TPLSUninstallSuccessHeader {
            get {
                return ResourceManager.GetString("R1U_TPLSUninstallSuccessHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Walk of Life.
        /// </summary>
        public static string R2_BonusLevelName_1 {
            get {
                return ResourceManager.GetString("R2_BonusLevelName_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Walk of Power.
        /// </summary>
        public static string R2_BonusLevelName_2 {
            get {
                return ResourceManager.GetString("R2_BonusLevelName_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Prison Ship.
        /// </summary>
        public static string R2_LevelName_astro {
            get {
                return ResourceManager.GetString("R2_LevelName_astro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Iron Mountains Balloon Cutscene.
        /// </summary>
        public static string R2_LevelName_ball {
            get {
                return ResourceManager.GetString("R2_LevelName_ball", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Fairy Glade.
        /// </summary>
        public static string R2_LevelName_bast {
            get {
                return ResourceManager.GetString("R2_LevelName_bast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Echoing Caves Intro.
        /// </summary>
        public static string R2_LevelName_bast_09 {
            get {
                return ResourceManager.GetString("R2_LevelName_bast_09", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Meanwhile in the Prison Ship Part 1.
        /// </summary>
        public static string R2_LevelName_batam_10 {
            get {
                return ResourceManager.GetString("R2_LevelName_batam_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Meanwhile in the Prison Ship Part 2.
        /// </summary>
        public static string R2_LevelName_batam_20 {
            get {
                return ResourceManager.GetString("R2_LevelName_batam_20", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bonus Stage.
        /// </summary>
        public static string R2_LevelName_bonux {
            get {
                return ResourceManager.GetString("R2_LevelName_bonux", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Echoing Caves.
        /// </summary>
        public static string R2_LevelName_cask {
            get {
                return ResourceManager.GetString("R2_LevelName_cask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Bayou.
        /// </summary>
        public static string R2_LevelName_chase {
            get {
                return ResourceManager.GetString("R2_LevelName_chase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Sanctuary of Rock and Lava.
        /// </summary>
        public static string R2_LevelName_earth {
            get {
                return ResourceManager.GetString("R2_LevelName_earth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ending.
        /// </summary>
        public static string R2_LevelName_end_10 {
            get {
                return ResourceManager.GetString("R2_LevelName_end_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Canopy.
        /// </summary>
        public static string R2_LevelName_glob {
            get {
                return ResourceManager.GetString("R2_LevelName_glob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Beneath the Sanctuary of Rock and Lava.
        /// </summary>
        public static string R2_LevelName_helic {
            get {
                return ResourceManager.GetString("R2_LevelName_helic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Iron Mountains.
        /// </summary>
        public static string R2_LevelName_ile {
            get {
                return ResourceManager.GetString("R2_LevelName_ile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intro Part 1.
        /// </summary>
        public static string R2_LevelName_jail_10 {
            get {
                return ResourceManager.GetString("R2_LevelName_jail_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Intro Part 2.
        /// </summary>
        public static string R2_LevelName_jail_20 {
            get {
                return ResourceManager.GetString("R2_LevelName_jail_20", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Woods of Light.
        /// </summary>
        public static string R2_LevelName_learn_10 {
            get {
                return ResourceManager.GetString("R2_LevelName_learn_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Hall of Doors.
        /// </summary>
        public static string R2_LevelName_mapmonde {
            get {
                return ResourceManager.GetString("R2_LevelName_mapmonde", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tomb of the Ancients.
        /// </summary>
        public static string R2_LevelName_morb {
            get {
                return ResourceManager.GetString("R2_LevelName_morb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Precipice.
        /// </summary>
        public static string R2_LevelName_nave {
            get {
                return ResourceManager.GetString("R2_LevelName_nave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Council Chamber of the Teensies.
        /// </summary>
        public static string R2_LevelName_nego_10 {
            get {
                return ResourceManager.GetString("R2_LevelName_nego_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Sanctuary of Stone and Fire.
        /// </summary>
        public static string R2_LevelName_plum {
            get {
                return ResourceManager.GetString("R2_LevelName_plum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Polokus Mask Part 1.
        /// </summary>
        public static string R2_LevelName_poloc_10 {
            get {
                return ResourceManager.GetString("R2_LevelName_poloc_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Polokus Mask Part 2.
        /// </summary>
        public static string R2_LevelName_poloc_20 {
            get {
                return ResourceManager.GetString("R2_LevelName_poloc_20", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Polokus Mask Part 3.
        /// </summary>
        public static string R2_LevelName_poloc_30 {
            get {
                return ResourceManager.GetString("R2_LevelName_poloc_30", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Polokus Mask Part 4.
        /// </summary>
        public static string R2_LevelName_poloc_40 {
            get {
                return ResourceManager.GetString("R2_LevelName_poloc_40", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Score Screen.
        /// </summary>
        public static string R2_LevelName_raycap {
            get {
                return ResourceManager.GetString("R2_LevelName_raycap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Crow&apos;s Nest.
        /// </summary>
        public static string R2_LevelName_rhop {
            get {
                return ResourceManager.GetString("R2_LevelName_rhop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Menhir Hills.
        /// </summary>
        public static string R2_LevelName_rodeo {
            get {
                return ResourceManager.GetString("R2_LevelName_rodeo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Top of the World.
        /// </summary>
        public static string R2_LevelName_seat {
            get {
                return ResourceManager.GetString("R2_LevelName_seat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Marshes of Awakening.
        /// </summary>
        public static string R2_LevelName_ski {
            get {
                return ResourceManager.GetString("R2_LevelName_ski", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Cave of Bad Dreams.
        /// </summary>
        public static string R2_LevelName_vulca {
            get {
                return ResourceManager.GetString("R2_LevelName_vulca", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Sanctuary of Water and Ice.
        /// </summary>
        public static string R2_LevelName_water {
            get {
                return ResourceManager.GetString("R2_LevelName_water", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whale Bay.
        /// </summary>
        public static string R2_LevelName_whale {
            get {
                return ResourceManager.GetString("R2_LevelName_whale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom.
        /// </summary>
        public static string R2Config_Graphics_Custom {
            get {
                return ResourceManager.GetString("R2Config_Graphics_Custom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DirectX.
        /// </summary>
        public static string R2Config_Graphics_DirectX {
            get {
                return ResourceManager.GetString("R2Config_Graphics_DirectX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Glide.
        /// </summary>
        public static string R2Config_Graphics_nGlide {
            get {
                return ResourceManager.GetString("R2Config_Graphics_nGlide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid format.
        /// </summary>
        public static string R2HotKeyValidation_InvalidFormat {
            get {
                return ResourceManager.GetString("R2HotKeyValidation_InvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key is not valid.
        /// </summary>
        public static string R2HotKeyValidation_InvalidKey {
            get {
                return ResourceManager.GetString("R2HotKeyValidation_InvalidKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Single key must be used.
        /// </summary>
        public static string R2HotKeyValidation_ModifierKeysUsed {
            get {
                return ResourceManager.GetString("R2HotKeyValidation_ModifierKeysUsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when setting the Rayman 2 aspect ratio.
        /// </summary>
        public static string R2Widescreen_Error {
            get {
                return ResourceManager.GetString("R2Widescreen_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The aspect ratio could not be set due to the game executable not being found.
        /// </summary>
        public static string R2Widescreen_ExeNotFound {
            get {
                return ResourceManager.GetString("R2Widescreen_ExeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The aspect ratio could not be set due to the game executable not being valid.
        /// </summary>
        public static string R2Widescreen_ExeNotValid {
            get {
                return ResourceManager.GetString("R2Widescreen_ExeNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Balloons.
        /// </summary>
        public static string R3_LevelName_ballmap {
            get {
                return ResourceManager.GetString("R3_LevelName_ballmap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bonus.
        /// </summary>
        public static string R3_LevelName_BonusTXT {
            get {
                return ResourceManager.GetString("R3_LevelName_BonusTXT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commando.
        /// </summary>
        public static string R3_LevelName_commando {
            get {
                return ResourceManager.GetString("R3_LevelName_commando", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Crush.
        /// </summary>
        public static string R3_LevelName_crush {
            get {
                return ResourceManager.GetString("R3_LevelName_crush", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Endgame.
        /// </summary>
        public static string R3_LevelName_endgame {
            get {
                return ResourceManager.GetString("R3_LevelName_endgame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Razoff Circus.
        /// </summary>
        public static string R3_LevelName_raz_map {
            get {
                return ResourceManager.GetString("R3_LevelName_raz_map", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sentinel.
        /// </summary>
        public static string R3_LevelName_sentinel {
            get {
                return ResourceManager.GetString("R3_LevelName_sentinel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Special Invaders.
        /// </summary>
        public static string R3_LevelName_ship_map {
            get {
                return ResourceManager.GetString("R3_LevelName_ship_map", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missile Command.
        /// </summary>
        public static string R3_LevelName_snipe_00 {
            get {
                return ResourceManager.GetString("R3_LevelName_snipe_00", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Racket Jump.
        /// </summary>
        public static string R3_LevelName_ten_map {
            get {
                return ResourceManager.GetString("R3_LevelName_ten_map", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2D Madness.
        /// </summary>
        public static string R3_LevelName_toudi_00 {
            get {
                return ResourceManager.GetString("R3_LevelName_toudi_00", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DirectPlay.
        /// </summary>
        public static string R3U_DirectPlayHeader {
            get {
                return ResourceManager.GetString("R3U_DirectPlayHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DirectPlay needs to be enabled in order to run Rayman 3. By default it is usually disabled on Windows 10..
        /// </summary>
        public static string R3U_DirectPlayInfo {
            get {
                return ResourceManager.GetString("R3U_DirectPlayInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DirectPlay can only be toggled on Windows 8 or above.
        /// </summary>
        public static string R3U_DirectPlayNotAvailable {
            get {
                return ResourceManager.GetString("R3U_DirectPlayNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The game may take a few seconds to launch. If a black screen appears, then press the ESC key on your keyboard to play the game. This message will not show again..
        /// </summary>
        public static string RabbidsActivityCenter_LaunchMessage {
            get {
                return ResourceManager.GetString("RabbidsActivityCenter_LaunchMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when updating the language.
        /// </summary>
        public static string Ray1MinigamesOptions_LanguageUpdateError {
            get {
                return ResourceManager.GetString("Ray1MinigamesOptions_LanguageUpdateError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File could not be created.
        /// </summary>
        public static string RDU_CreateConfig_Error {
            get {
                return ResourceManager.GetString("RDU_CreateConfig_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration file already exists. You can still recreate it if it is corrupt. Continue?.
        /// </summary>
        public static string RDU_CreateConfig_ReplaceQuestion {
            get {
                return ResourceManager.GetString("RDU_CreateConfig_ReplaceQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace File.
        /// </summary>
        public static string RDU_CreateConfig_ReplaceQuestionHeader {
            get {
                return ResourceManager.GetString("RDU_CreateConfig_ReplaceQuestionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file was successfully created..
        /// </summary>
        public static string RDU_CreateConfig_Success {
            get {
                return ResourceManager.GetString("RDU_CreateConfig_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create.
        /// </summary>
        public static string RDU_CreateConfigCreate {
            get {
                return ResourceManager.GetString("RDU_CreateConfigCreate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create Missing Configuration File.
        /// </summary>
        public static string RDU_CreateConfigHeader {
            get {
                return ResourceManager.GetString("RDU_CreateConfigHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to During some Rayman Designer installations the configuration file won&apos;t be created, causing the Mapper to give an error when launching. This utility will fix that issue by creating the configuration file if not present..
        /// </summary>
        public static string RDU_CreateConfigInfo {
            get {
                return ResourceManager.GetString("RDU_CreateConfigInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replacement complete.
        /// </summary>
        public static string RDU_ReplaceFiles_Complete {
            get {
                return ResourceManager.GetString("RDU_ReplaceFiles_Complete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File replacement failed.
        /// </summary>
        public static string RDU_ReplaceFiles_Error {
            get {
                return ResourceManager.GetString("RDU_ReplaceFiles_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}/{1} files were found to replace. This might require several downloads depending on their locations..
        /// </summary>
        public static string RDU_ReplaceFiles_InfoMessage {
            get {
                return ResourceManager.GetString("RDU_ReplaceFiles_InfoMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace Infected Files.
        /// </summary>
        public static string RDU_ReplaceFilesHeader {
            get {
                return ResourceManager.GetString("RDU_ReplaceFilesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some versions of Rayman Designer, including Rayman Forever, have some of the RayKit files infected with a malware. Although it does not appear to be harmful, or even active, and GOG has confirmed there is no danger, you can still safely replace the files with their non-infected versions using this utility..
        /// </summary>
        public static string RDU_ReplaceFilesInfo {
            get {
                return ResourceManager.GetString("RDU_ReplaceFilesInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        public static string RDU_ReplaceFilesLanguage {
            get {
                return ResourceManager.GetString("RDU_ReplaceFilesLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace.
        /// </summary>
        public static string RDU_ReplaceFilesReplace {
            get {
                return ResourceManager.GetString("RDU_ReplaceFilesReplace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred reading the backup for {0}.
        /// </summary>
        public static string ReadingBackupError {
            get {
                return ResourceManager.GetString("ReadingBackupError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Read-Only.
        /// </summary>
        public static string ReadOnly {
            get {
                return ResourceManager.GetString("ReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are {0} patches which have been applied to this game. Do you want to continue removing the game and keep the patches applied?.
        /// </summary>
        public static string RemoveGame_PatchWarning {
            get {
                return ResourceManager.GetString("RemoveGame_PatchWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to remove {0} from the Rayman Control Panel? This will not remove the game from your computer or any of its files, including the backups created using this program..
        /// </summary>
        public static string RemoveGameQuestion {
            get {
                return ResourceManager.GetString("RemoveGameQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm remove.
        /// </summary>
        public static string RemoveGameQuestionHeader {
            get {
                return ResourceManager.GetString("RemoveGameQuestionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} was originally installed using the Rayman Control Panel. Removing the game from the program will not remove the game from your computer or any of its files, including the backups created using this program. It is instead recommended to uninstall the game..
        /// </summary>
        public static string RemoveInstalledGameQuestion {
            get {
                return ResourceManager.GetString("RemoveInstalledGameQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will replace current {0} save files with backed up ones..
        /// </summary>
        public static string Restore_Confirm {
            get {
                return ResourceManager.GetString("Restore_Confirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm restore.
        /// </summary>
        public static string Restore_ConfirmHeader {
            get {
                return ResourceManager.GetString("Restore_ConfirmHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore failed for {0}.
        /// </summary>
        public static string Restore_Failed {
            get {
                return ResourceManager.GetString("Restore_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore failed.
        /// </summary>
        public static string Restore_FailedHeader {
            get {
                return ResourceManager.GetString("Restore_FailedHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was no backup found for {0}.
        /// </summary>
        public static string Restore_MissingBackup {
            get {
                return ResourceManager.GetString("Restore_MissingBackup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your save files for {0} were successfully restored.
        /// </summary>
        public static string Restore_Success {
            get {
                return ResourceManager.GetString("Restore_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore successful.
        /// </summary>
        public static string Restore_SuccessHeader {
            get {
                return ResourceManager.GetString("Restore_SuccessHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Back to the Roots.
        /// </summary>
        public static string RFR_LevelName_1_10 {
            get {
                return ResourceManager.GetString("RFR_LevelName_1_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Leap of Faith.
        /// </summary>
        public static string RFR_LevelName_2_10 {
            get {
                return ResourceManager.GetString("RFR_LevelName_2_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Watch the snakes.
        /// </summary>
        public static string RFR_LevelName_3_10 {
            get {
                return ResourceManager.GetString("RFR_LevelName_3_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Breath of Death.
        /// </summary>
        public static string RFR_LevelName_4_10 {
            get {
                return ResourceManager.GetString("RFR_LevelName_4_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fix save.
        /// </summary>
        public static string RFRU_SaveFixAction {
            get {
                return ResourceManager.GetString("RFRU_SaveFixAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when fixing the save.
        /// </summary>
        public static string RFRU_SaveFixError {
            get {
                return ResourceManager.GetString("RFRU_SaveFixError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fix save progress.
        /// </summary>
        public static string RFRU_SaveFixHeader {
            get {
                return ResourceManager.GetString("RFRU_SaveFixHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Due to a bug in earlier versions of the game the save file progress might get out of sync causing you to have fewer teensies than actually earned. This can cause certain levels to become inaccessible. This utility will attempt to correct this..
        /// </summary>
        public static string RFRU_SaveFixInfo {
            get {
                return ResourceManager.GetString("RFRU_SaveFixInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No issues found.
        /// </summary>
        public static string RFRU_SaveFixNotRequired {
            get {
                return ResourceManager.GetString("RFRU_SaveFixNotRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The save was successfully fixed.
        /// </summary>
        public static string RFRU_SaveFixSuccess {
            get {
                return ResourceManager.GetString("RFRU_SaveFixSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Once upon a Time.
        /// </summary>
        public static string RL_LevelName_1_1 {
            get {
                return ResourceManager.GetString("RL_LevelName_1_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creepy Castle.
        /// </summary>
        public static string RL_LevelName_1_2 {
            get {
                return ResourceManager.GetString("RL_LevelName_1_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enchanted Forest.
        /// </summary>
        public static string RL_LevelName_1_3 {
            get {
                return ResourceManager.GetString("RL_LevelName_1_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ropes Course.
        /// </summary>
        public static string RL_LevelName_1_4 {
            get {
                return ResourceManager.GetString("RL_LevelName_1_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quick Sand.
        /// </summary>
        public static string RL_LevelName_1_5 {
            get {
                return ResourceManager.GetString("RL_LevelName_1_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How to Shoot your Dragon.
        /// </summary>
        public static string RL_LevelName_1_6 {
            get {
                return ResourceManager.GetString("RL_LevelName_1_6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ray and the Beanstalk.
        /// </summary>
        public static string RL_LevelName_2_1 {
            get {
                return ResourceManager.GetString("RL_LevelName_2_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Winds of Strange.
        /// </summary>
        public static string RL_LevelName_2_2 {
            get {
                return ResourceManager.GetString("RL_LevelName_2_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Castle in the Clouds.
        /// </summary>
        public static string RL_LevelName_2_3 {
            get {
                return ResourceManager.GetString("RL_LevelName_2_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Altitude Quickness.
        /// </summary>
        public static string RL_LevelName_2_4 {
            get {
                return ResourceManager.GetString("RL_LevelName_2_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When Toads Fly.
        /// </summary>
        public static string RL_LevelName_2_5 {
            get {
                return ResourceManager.GetString("RL_LevelName_2_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to What the Duck?.
        /// </summary>
        public static string RL_LevelName_3_1 {
            get {
                return ResourceManager.GetString("RL_LevelName_3_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spoiled Rotten.
        /// </summary>
        public static string RL_LevelName_3_2 {
            get {
                return ResourceManager.GetString("RL_LevelName_3_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;ve Got a Filling.
        /// </summary>
        public static string RL_LevelName_3_3 {
            get {
                return ResourceManager.GetString("RL_LevelName_3_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Snakes on a Cake.
        /// </summary>
        public static string RL_LevelName_3_4 {
            get {
                return ResourceManager.GetString("RL_LevelName_3_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lucha Libre Get Away.
        /// </summary>
        public static string RL_LevelName_3_5 {
            get {
                return ResourceManager.GetString("RL_LevelName_3_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Mysterious Inflatable Island.
        /// </summary>
        public static string RL_LevelName_4_1 {
            get {
                return ResourceManager.GetString("RL_LevelName_4_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Deadly Lights.
        /// </summary>
        public static string RL_LevelName_4_2 {
            get {
                return ResourceManager.GetString("RL_LevelName_4_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mansion of the Deep.
        /// </summary>
        public static string RL_LevelName_4_3 {
            get {
                return ResourceManager.GetString("RL_LevelName_4_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Infiltration Station.
        /// </summary>
        public static string RL_LevelName_4_4 {
            get {
                return ResourceManager.GetString("RL_LevelName_4_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Elevator Ambush.
        /// </summary>
        public static string RL_LevelName_4_5 {
            get {
                return ResourceManager.GetString("RL_LevelName_4_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There&apos;s Always a Bigger Fish.
        /// </summary>
        public static string RL_LevelName_4_6 {
            get {
                return ResourceManager.GetString("RL_LevelName_4_6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shields Up... and Down.
        /// </summary>
        public static string RL_LevelName_5_1 {
            get {
                return ResourceManager.GetString("RL_LevelName_5_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Dark Creatures Rise.
        /// </summary>
        public static string RL_LevelName_5_2 {
            get {
                return ResourceManager.GetString("RL_LevelName_5_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Amazing Maze.
        /// </summary>
        public static string RL_LevelName_5_3 {
            get {
                return ResourceManager.GetString("RL_LevelName_5_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Great Lava Pursuit.
        /// </summary>
        public static string RL_LevelName_5_4 {
            get {
                return ResourceManager.GetString("RL_LevelName_5_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Swarmed and Dangerous.
        /// </summary>
        public static string RL_LevelName_5_5 {
            get {
                return ResourceManager.GetString("RL_LevelName_5_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hell Breaks Loose.
        /// </summary>
        public static string RL_LevelName_5_6 {
            get {
                return ResourceManager.GetString("RL_LevelName_5_6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The UbiRay patch has been successfully applied.
        /// </summary>
        public static string RLU_UbiRay_ApplySuccess {
            get {
                return ResourceManager.GetString("RLU_UbiRay_ApplySuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The UbiRay patch has been reverted.
        /// </summary>
        public static string RLU_UbiRay_RevertSuccess {
            get {
                return ResourceManager.GetString("RLU_UbiRay_RevertSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable UbiRay.
        /// </summary>
        public static string RLU_UbiRayHeader {
            get {
                return ResourceManager.GetString("RLU_UbiRayHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This utility modifies the game configuration to make UbiRay appear as a normal costume in the Heroes Gallery.
        /// </summary>
        public static string RLU_UbiRayInfo {
            get {
                return ResourceManager.GetString("RLU_UbiRayInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First Ruins.
        /// </summary>
        public static string RM_RaceName_0 {
            get {
                return ResourceManager.GetString("RM_RaceName_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nebulous Tower.
        /// </summary>
        public static string RM_RaceName_1 {
            get {
                return ResourceManager.GetString("RM_RaceName_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lava Factory.
        /// </summary>
        public static string RM_RaceName_10 {
            get {
                return ResourceManager.GetString("RM_RaceName_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Electric Final.
        /// </summary>
        public static string RM_RaceName_11 {
            get {
                return ResourceManager.GetString("RM_RaceName_11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Future.
        /// </summary>
        public static string RM_RaceName_12 {
            get {
                return ResourceManager.GetString("RM_RaceName_12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Big Bang.
        /// </summary>
        public static string RM_RaceName_13 {
            get {
                return ResourceManager.GetString("RM_RaceName_13", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Speed Stress.
        /// </summary>
        public static string RM_RaceName_14 {
            get {
                return ResourceManager.GetString("RM_RaceName_14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Born To Slide.
        /// </summary>
        public static string RM_RaceName_15 {
            get {
                return ResourceManager.GetString("RM_RaceName_15", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dark Sewer.
        /// </summary>
        public static string RM_RaceName_2 {
            get {
                return ResourceManager.GetString("RM_RaceName_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dawn Sand.
        /// </summary>
        public static string RM_RaceName_3 {
            get {
                return ResourceManager.GetString("RM_RaceName_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Water Canyon.
        /// </summary>
        public static string RM_RaceName_4 {
            get {
                return ResourceManager.GetString("RM_RaceName_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thousand Waterfalls.
        /// </summary>
        public static string RM_RaceName_5 {
            get {
                return ResourceManager.GetString("RM_RaceName_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forest Jump.
        /// </summary>
        public static string RM_RaceName_6 {
            get {
                return ResourceManager.GetString("RM_RaceName_6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zenith Harbour.
        /// </summary>
        public static string RM_RaceName_7 {
            get {
                return ResourceManager.GetString("RM_RaceName_7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Treasure Ship.
        /// </summary>
        public static string RM_RaceName_8 {
            get {
                return ResourceManager.GetString("RM_RaceName_8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pipe Maze.
        /// </summary>
        public static string RM_RaceName_9 {
            get {
                return ResourceManager.GetString("RM_RaceName_9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when applying the debug commands.
        /// </summary>
        public static string ROU_DebugCommandsError {
            get {
                return ResourceManager.GetString("ROU_DebugCommandsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Framerate.
        /// </summary>
        public static string ROU_DebugCommandsFramerate {
            get {
                return ResourceManager.GetString("ROU_DebugCommandsFramerate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will set the framerate to run the game in.
        /// </summary>
        public static string ROU_DebugCommandsFramerateInfo {
            get {
                return ResourceManager.GetString("ROU_DebugCommandsFramerateInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug Commands.
        /// </summary>
        public static string ROU_DebugCommandsHeader {
            get {
                return ResourceManager.GetString("ROU_DebugCommandsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide mouse pointer.
        /// </summary>
        public static string ROU_DebugCommandsHideMouse {
            get {
                return ResourceManager.GetString("ROU_DebugCommandsHideMouse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will hide the mouse pointer in the game menus.
        /// </summary>
        public static string ROU_DebugCommandsHideMouseInfo {
            get {
                return ResourceManager.GetString("ROU_DebugCommandsHideMouseInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Using any of the below debug commands allows the game to be launched in a debug environment, with the commands changing how the game runs..
        /// </summary>
        public static string ROU_DebugCommandsInfo {
            get {
                return ResourceManager.GetString("ROU_DebugCommandsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Rayman Origins installation could not be found.
        /// </summary>
        public static string ROU_DebugCommandsInstallationNotFound {
            get {
                return ResourceManager.GetString("ROU_DebugCommandsInstallationNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invincibility.
        /// </summary>
        public static string ROU_DebugCommandsInvincibility {
            get {
                return ResourceManager.GetString("ROU_DebugCommandsInvincibility", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This allows the player to not die when taking damage.
        /// </summary>
        public static string ROU_DebugCommandsInvincibilityInfo {
            get {
                return ResourceManager.GetString("ROU_DebugCommandsInvincibilityInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        public static string ROU_DebugCommandsLanguage {
            get {
                return ResourceManager.GetString("ROU_DebugCommandsLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will change the language the game runs in.
        /// </summary>
        public static string ROU_DebugCommandsLanguageInfo {
            get {
                return ResourceManager.GetString("ROU_DebugCommandsLanguageInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Map.
        /// </summary>
        public static string ROU_DebugCommandsMap {
            get {
                return ResourceManager.GetString("ROU_DebugCommandsMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will allow a specific map to be loaded instead of the main menu upon starting the game.
        /// </summary>
        public static string ROU_DebugCommandsMapInfo {
            get {
                return ResourceManager.GetString("ROU_DebugCommandsMapInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max camera zoom.
        /// </summary>
        public static string ROU_DebugCommandsMaxZoom {
            get {
                return ResourceManager.GetString("ROU_DebugCommandsMaxZoom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will max out the camera zoom.
        /// </summary>
        public static string ROU_DebugCommandsMaxZoomInfo {
            get {
                return ResourceManager.GetString("ROU_DebugCommandsMaxZoomInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable save file loading/saving.
        /// </summary>
        public static string ROU_DebugCommandsNoSave {
            get {
                return ResourceManager.GetString("ROU_DebugCommandsNoSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will prevent the game from loading or saving to any existing save file.
        /// </summary>
        public static string ROU_DebugCommandsNoSaveInfo {
            get {
                return ResourceManager.GetString("ROU_DebugCommandsNoSaveInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug commands are not available for the Steam version.
        /// </summary>
        public static string ROU_DebugCommandsNotAvailable {
            get {
                return ResourceManager.GetString("ROU_DebugCommandsNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING: Using these debug commands may corrupt your save file. Always make a backup before using them..
        /// </summary>
        public static string ROU_DebugCommandsWarning {
            get {
                return ResourceManager.GetString("ROU_DebugCommandsWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading the Rayman Origins updater failed.
        /// </summary>
        public static string ROU_UpdateFailed {
            get {
                return ResourceManager.GetString("ROU_UpdateFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update to 1.02 (Disc version).
        /// </summary>
        public static string ROU_UpdateHeader {
            get {
                return ResourceManager.GetString("ROU_UpdateHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In case Rayman Origins has not been automatically updated to its latest version, 1.02, this utility can update it..
        /// </summary>
        public static string ROU_UpdateInfo {
            get {
                return ResourceManager.GetString("ROU_UpdateInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update.
        /// </summary>
        public static string ROU_UpdateUpdate {
            get {
                return ResourceManager.GetString("ROU_UpdateUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All games.
        /// </summary>
        public static string RR2Options_GameMode_All {
            get {
                return ResourceManager.GetString("RR2Options_GameMode_All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blue.
        /// </summary>
        public static string RR2Options_GameMode_Blue {
            get {
                return ResourceManager.GetString("RR2Options_GameMode_Blue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Green.
        /// </summary>
        public static string RR2Options_GameMode_Green {
            get {
                return ResourceManager.GetString("RR2Options_GameMode_Green", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Orange.
        /// </summary>
        public static string RR2Options_GameMode_Orange {
            get {
                return ResourceManager.GetString("RR2Options_GameMode_Orange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Red.
        /// </summary>
        public static string RR2Options_GameMode_Red {
            get {
                return ResourceManager.GetString("RR2Options_GameMode_Red", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Mode.
        /// </summary>
        public static string RR2Options_GameModeHeader {
            get {
                return ResourceManager.GetString("RR2Options_GameModeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The game mode determines which sets of minigames are available in the game. Certain editions of the game are limited to a specific game mode, while others support all of them. If an error occurs when launching the game, try changing the game mode..
        /// </summary>
        public static string RR2Options_GameModeInfo {
            get {
                return ResourceManager.GetString("RR2Options_GameModeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t like being disturbed on holiday.
        /// </summary>
        public static string RRR_LevelName_0 {
            get {
                return ResourceManager.GetString("RRR_LevelName_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t like being disturbed at night.
        /// </summary>
        public static string RRR_LevelName_1 {
            get {
                return ResourceManager.GetString("RRR_LevelName_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t like being disturbed on holiday.
        /// </summary>
        public static string RRR_LevelName_10 {
            get {
                return ResourceManager.GetString("RRR_LevelName_10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t like being disturbed on holiday.
        /// </summary>
        public static string RRR_LevelName_100 {
            get {
                return ResourceManager.GetString("RRR_LevelName_100", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t like being disturbed at night.
        /// </summary>
        public static string RRR_LevelName_101 {
            get {
                return ResourceManager.GetString("RRR_LevelName_101", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies helped tame the Wild West.
        /// </summary>
        public static string RRR_LevelName_102 {
            get {
                return ResourceManager.GetString("RRR_LevelName_102", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies have a soft spot for plungers.
        /// </summary>
        public static string RRR_LevelName_103 {
            get {
                return ResourceManager.GetString("RRR_LevelName_103", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies never struck gold.
        /// </summary>
        public static string RRR_LevelName_104 {
            get {
                return ResourceManager.GetString("RRR_LevelName_104", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies think they&apos;re in a movie.
        /// </summary>
        public static string RRR_LevelName_105 {
            get {
                return ResourceManager.GetString("RRR_LevelName_105", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies love digging tunnels.
        /// </summary>
        public static string RRR_LevelName_106 {
            get {
                return ResourceManager.GetString("RRR_LevelName_106", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies aren&apos;t scared of the dark.
        /// </summary>
        public static string RRR_LevelName_107 {
            get {
                return ResourceManager.GetString("RRR_LevelName_107", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t rest in peace.
        /// </summary>
        public static string RRR_LevelName_108 {
            get {
                return ResourceManager.GetString("RRR_LevelName_108", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies sometimes recycle the scenery from other games.
        /// </summary>
        public static string RRR_LevelName_109 {
            get {
                return ResourceManager.GetString("RRR_LevelName_109", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t like being disturbed at night.
        /// </summary>
        public static string RRR_LevelName_11 {
            get {
                return ResourceManager.GetString("RRR_LevelName_11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t like being disturbed on holiday.
        /// </summary>
        public static string RRR_LevelName_110 {
            get {
                return ResourceManager.GetString("RRR_LevelName_110", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t like being disturbed at night.
        /// </summary>
        public static string RRR_LevelName_111 {
            get {
                return ResourceManager.GetString("RRR_LevelName_111", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies helped tame the Wild West.
        /// </summary>
        public static string RRR_LevelName_112 {
            get {
                return ResourceManager.GetString("RRR_LevelName_112", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies have a soft spot for plungers.
        /// </summary>
        public static string RRR_LevelName_113 {
            get {
                return ResourceManager.GetString("RRR_LevelName_113", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies never struck gold.
        /// </summary>
        public static string RRR_LevelName_114 {
            get {
                return ResourceManager.GetString("RRR_LevelName_114", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies think they&apos;re in a movie.
        /// </summary>
        public static string RRR_LevelName_115 {
            get {
                return ResourceManager.GetString("RRR_LevelName_115", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies love digging tunnels.
        /// </summary>
        public static string RRR_LevelName_116 {
            get {
                return ResourceManager.GetString("RRR_LevelName_116", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies aren&apos;t scared of the dark.
        /// </summary>
        public static string RRR_LevelName_117 {
            get {
                return ResourceManager.GetString("RRR_LevelName_117", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t rest in peace.
        /// </summary>
        public static string RRR_LevelName_118 {
            get {
                return ResourceManager.GetString("RRR_LevelName_118", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies sometimes recycle the scenery from other games.
        /// </summary>
        public static string RRR_LevelName_119 {
            get {
                return ResourceManager.GetString("RRR_LevelName_119", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies helped tame the Wild West.
        /// </summary>
        public static string RRR_LevelName_12 {
            get {
                return ResourceManager.GetString("RRR_LevelName_12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extreme experiences.
        /// </summary>
        public static string RRR_LevelName_120 {
            get {
                return ResourceManager.GetString("RRR_LevelName_120", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The jogging Pants-tathlon.
        /// </summary>
        public static string RRR_LevelName_121 {
            get {
                return ResourceManager.GetString("RRR_LevelName_121", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Pants-tathlon in socks.
        /// </summary>
        public static string RRR_LevelName_122 {
            get {
                return ResourceManager.GetString("RRR_LevelName_122", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Pants-tathlon tracksuit.
        /// </summary>
        public static string RRR_LevelName_123 {
            get {
                return ResourceManager.GetString("RRR_LevelName_123", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pain-tathlon.
        /// </summary>
        public static string RRR_LevelName_124 {
            get {
                return ResourceManager.GetString("RRR_LevelName_124", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunny Fair.
        /// </summary>
        public static string RRR_LevelName_125 {
            get {
                return ResourceManager.GetString("RRR_LevelName_125", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman.
        /// </summary>
        public static string RRR_LevelName_126 {
            get {
                return ResourceManager.GetString("RRR_LevelName_126", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to World Eclecticism Championship.
        /// </summary>
        public static string RRR_LevelName_127 {
            get {
                return ResourceManager.GetString("RRR_LevelName_127", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies have a soft spot for plungers.
        /// </summary>
        public static string RRR_LevelName_13 {
            get {
                return ResourceManager.GetString("RRR_LevelName_13", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t like being disturbed on holiday.
        /// </summary>
        public static string RRR_LevelName_130 {
            get {
                return ResourceManager.GetString("RRR_LevelName_130", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t like being disturbed at night.
        /// </summary>
        public static string RRR_LevelName_131 {
            get {
                return ResourceManager.GetString("RRR_LevelName_131", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies helped tame the Wild West.
        /// </summary>
        public static string RRR_LevelName_132 {
            get {
                return ResourceManager.GetString("RRR_LevelName_132", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies have a soft spot for plungers.
        /// </summary>
        public static string RRR_LevelName_133 {
            get {
                return ResourceManager.GetString("RRR_LevelName_133", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies never struck gold.
        /// </summary>
        public static string RRR_LevelName_134 {
            get {
                return ResourceManager.GetString("RRR_LevelName_134", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies think they&apos;re in a movie.
        /// </summary>
        public static string RRR_LevelName_135 {
            get {
                return ResourceManager.GetString("RRR_LevelName_135", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies love digging tunnels.
        /// </summary>
        public static string RRR_LevelName_136 {
            get {
                return ResourceManager.GetString("RRR_LevelName_136", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies aren&apos;t scared of the dark.
        /// </summary>
        public static string RRR_LevelName_137 {
            get {
                return ResourceManager.GetString("RRR_LevelName_137", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t rest in peace.
        /// </summary>
        public static string RRR_LevelName_138 {
            get {
                return ResourceManager.GetString("RRR_LevelName_138", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies sometimes recycle the scenery from other games.
        /// </summary>
        public static string RRR_LevelName_139 {
            get {
                return ResourceManager.GetString("RRR_LevelName_139", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies never struck gold.
        /// </summary>
        public static string RRR_LevelName_14 {
            get {
                return ResourceManager.GetString("RRR_LevelName_14", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies are shooting all over the place.
        /// </summary>
        public static string RRR_LevelName_140 {
            get {
                return ResourceManager.GetString("RRR_LevelName_140", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies think they&apos;re in a movie.
        /// </summary>
        public static string RRR_LevelName_15 {
            get {
                return ResourceManager.GetString("RRR_LevelName_15", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies love digging tunnels.
        /// </summary>
        public static string RRR_LevelName_16 {
            get {
                return ResourceManager.GetString("RRR_LevelName_16", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies aren&apos;t scared of the dark.
        /// </summary>
        public static string RRR_LevelName_17 {
            get {
                return ResourceManager.GetString("RRR_LevelName_17", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t rest in peace.
        /// </summary>
        public static string RRR_LevelName_18 {
            get {
                return ResourceManager.GetString("RRR_LevelName_18", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies sometimes recycle the scenery from other games.
        /// </summary>
        public static string RRR_LevelName_19 {
            get {
                return ResourceManager.GetString("RRR_LevelName_19", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies helped tame the Wild West.
        /// </summary>
        public static string RRR_LevelName_2 {
            get {
                return ResourceManager.GetString("RRR_LevelName_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies can&apos;t jump.
        /// </summary>
        public static string RRR_LevelName_20 {
            get {
                return ResourceManager.GetString("RRR_LevelName_20", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t give gifts.
        /// </summary>
        public static string RRR_LevelName_21 {
            get {
                return ResourceManager.GetString("RRR_LevelName_21", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t know what to do with cows.
        /// </summary>
        public static string RRR_LevelName_22 {
            get {
                return ResourceManager.GetString("RRR_LevelName_22", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies never close doors.
        /// </summary>
        public static string RRR_LevelName_23 {
            get {
                return ResourceManager.GetString("RRR_LevelName_23", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t milk cows.
        /// </summary>
        public static string RRR_LevelName_24 {
            get {
                return ResourceManager.GetString("RRR_LevelName_24", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies are addicted to carrot juice.
        /// </summary>
        public static string RRR_LevelName_25 {
            get {
                return ResourceManager.GetString("RRR_LevelName_25", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies can&apos;t slide Part 2.
        /// </summary>
        public static string RRR_LevelName_26 {
            get {
                return ResourceManager.GetString("RRR_LevelName_26", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies are heartless with pigs.
        /// </summary>
        public static string RRR_LevelName_27 {
            get {
                return ResourceManager.GetString("RRR_LevelName_27", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t like bats.
        /// </summary>
        public static string RRR_LevelName_28 {
            get {
                return ResourceManager.GetString("RRR_LevelName_28", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t use toothpaste.
        /// </summary>
        public static string RRR_LevelName_29 {
            get {
                return ResourceManager.GetString("RRR_LevelName_29", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies have a soft spot for plungers.
        /// </summary>
        public static string RRR_LevelName_3 {
            get {
                return ResourceManager.GetString("RRR_LevelName_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies can&apos;t fly.
        /// </summary>
        public static string RRR_LevelName_30 {
            get {
                return ResourceManager.GetString("RRR_LevelName_30", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies can only fly downwards.
        /// </summary>
        public static string RRR_LevelName_31 {
            get {
                return ResourceManager.GetString("RRR_LevelName_31", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies can&apos;t play soccer.
        /// </summary>
        public static string RRR_LevelName_32 {
            get {
                return ResourceManager.GetString("RRR_LevelName_32", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t understand bowling.
        /// </summary>
        public static string RRR_LevelName_33 {
            get {
                return ResourceManager.GetString("RRR_LevelName_33", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Animal Farm.
        /// </summary>
        public static string RRR_LevelName_34 {
            get {
                return ResourceManager.GetString("RRR_LevelName_34", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies have a great ear for music.
        /// </summary>
        public static string RRR_LevelName_35 {
            get {
                return ResourceManager.GetString("RRR_LevelName_35", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies are slow to react.
        /// </summary>
        public static string RRR_LevelName_36 {
            get {
                return ResourceManager.GetString("RRR_LevelName_36", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies are fantastic dancers Part 3.
        /// </summary>
        public static string RRR_LevelName_37 {
            get {
                return ResourceManager.GetString("RRR_LevelName_37", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies like to stuff themselves.
        /// </summary>
        public static string RRR_LevelName_38 {
            get {
                return ResourceManager.GetString("RRR_LevelName_38", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies are raving mad Part 2.
        /// </summary>
        public static string RRR_LevelName_39 {
            get {
                return ResourceManager.GetString("RRR_LevelName_39", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies never struck gold.
        /// </summary>
        public static string RRR_LevelName_4 {
            get {
                return ResourceManager.GetString("RRR_LevelName_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies like a good race.
        /// </summary>
        public static string RRR_LevelName_40 {
            get {
                return ResourceManager.GetString("RRR_LevelName_40", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Race good a like Bunnies.
        /// </summary>
        public static string RRR_LevelName_41 {
            get {
                return ResourceManager.GetString("RRR_LevelName_41", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies like a good race on the beach.
        /// </summary>
        public static string RRR_LevelName_42 {
            get {
                return ResourceManager.GetString("RRR_LevelName_42", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies only fly downwards.
        /// </summary>
        public static string RRR_LevelName_43 {
            get {
                return ResourceManager.GetString("RRR_LevelName_43", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies are fantastic dancers.
        /// </summary>
        public static string RRR_LevelName_44 {
            get {
                return ResourceManager.GetString("RRR_LevelName_44", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t sleep well.
        /// </summary>
        public static string RRR_LevelName_45 {
            get {
                return ResourceManager.GetString("RRR_LevelName_45", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies have no memory.
        /// </summary>
        public static string RRR_LevelName_46 {
            get {
                return ResourceManager.GetString("RRR_LevelName_46", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies rarely leave their burrows.
        /// </summary>
        public static string RRR_LevelName_47 {
            get {
                return ResourceManager.GetString("RRR_LevelName_47", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies can&apos;t jump Part 2.
        /// </summary>
        public static string RRR_LevelName_48 {
            get {
                return ResourceManager.GetString("RRR_LevelName_48", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies never close doors Part 2.
        /// </summary>
        public static string RRR_LevelName_49 {
            get {
                return ResourceManager.GetString("RRR_LevelName_49", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies think they&apos;re in a movie.
        /// </summary>
        public static string RRR_LevelName_5 {
            get {
                return ResourceManager.GetString("RRR_LevelName_5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t milk cows Part 2.
        /// </summary>
        public static string RRR_LevelName_50 {
            get {
                return ResourceManager.GetString("RRR_LevelName_50", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies like a good cowboy race.
        /// </summary>
        public static string RRR_LevelName_51 {
            get {
                return ResourceManager.GetString("RRR_LevelName_51", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies are heartless with pigs Part 2.
        /// </summary>
        public static string RRR_LevelName_52 {
            get {
                return ResourceManager.GetString("RRR_LevelName_52", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies Psychology. Volume 1.
        /// </summary>
        public static string RRR_LevelName_53 {
            get {
                return ResourceManager.GetString("RRR_LevelName_53", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t like bats Part 2.
        /// </summary>
        public static string RRR_LevelName_54 {
            get {
                return ResourceManager.GetString("RRR_LevelName_54", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t use toothpaste Part 2.
        /// </summary>
        public static string RRR_LevelName_55 {
            get {
                return ResourceManager.GetString("RRR_LevelName_55", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies can&apos;t fly Part 2.
        /// </summary>
        public static string RRR_LevelName_56 {
            get {
                return ResourceManager.GetString("RRR_LevelName_56", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies Psychology. Volume 2.
        /// </summary>
        public static string RRR_LevelName_57 {
            get {
                return ResourceManager.GetString("RRR_LevelName_57", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies can&apos;t shear sheep.
        /// </summary>
        public static string RRR_LevelName_58 {
            get {
                return ResourceManager.GetString("RRR_LevelName_58", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies are slow to react Part 2.
        /// </summary>
        public static string RRR_LevelName_59 {
            get {
                return ResourceManager.GetString("RRR_LevelName_59", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies love digging tunnels.
        /// </summary>
        public static string RRR_LevelName_6 {
            get {
                return ResourceManager.GetString("RRR_LevelName_6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies are slow to react Part 3.
        /// </summary>
        public static string RRR_LevelName_60 {
            get {
                return ResourceManager.GetString("RRR_LevelName_60", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies like to stuff themselves Part 2.
        /// </summary>
        public static string RRR_LevelName_61 {
            get {
                return ResourceManager.GetString("RRR_LevelName_61", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies have no memory Part 2.
        /// </summary>
        public static string RRR_LevelName_62 {
            get {
                return ResourceManager.GetString("RRR_LevelName_62", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies rarely leave their burrows Part 2.
        /// </summary>
        public static string RRR_LevelName_63 {
            get {
                return ResourceManager.GetString("RRR_LevelName_63", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies like surprises.
        /// </summary>
        public static string RRR_LevelName_64 {
            get {
                return ResourceManager.GetString("RRR_LevelName_64", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t like being shot at.
        /// </summary>
        public static string RRR_LevelName_65 {
            get {
                return ResourceManager.GetString("RRR_LevelName_65", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies have natural rhythm.
        /// </summary>
        public static string RRR_LevelName_66 {
            get {
                return ResourceManager.GetString("RRR_LevelName_66", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies are a-mazing.
        /// </summary>
        public static string RRR_LevelName_67 {
            get {
                return ResourceManager.GetString("RRR_LevelName_67", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Dark Side.
        /// </summary>
        public static string RRR_LevelName_68 {
            get {
                return ResourceManager.GetString("RRR_LevelName_68", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies have natural rhythm Part 2.
        /// </summary>
        public static string RRR_LevelName_69 {
            get {
                return ResourceManager.GetString("RRR_LevelName_69", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies aren&apos;t scared of the dark.
        /// </summary>
        public static string RRR_LevelName_7 {
            get {
                return ResourceManager.GetString("RRR_LevelName_7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies are ticklish.
        /// </summary>
        public static string RRR_LevelName_70 {
            get {
                return ResourceManager.GetString("RRR_LevelName_70", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies Psychology. Volume 3.
        /// </summary>
        public static string RRR_LevelName_71 {
            get {
                return ResourceManager.GetString("RRR_LevelName_71", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies are bad at peek-a-boo.
        /// </summary>
        public static string RRR_LevelName_72 {
            get {
                return ResourceManager.GetString("RRR_LevelName_72", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies are oversensitive.
        /// </summary>
        public static string RRR_LevelName_73 {
            get {
                return ResourceManager.GetString("RRR_LevelName_73", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies have a poor grasp of anatomy.
        /// </summary>
        public static string RRR_LevelName_74 {
            get {
                return ResourceManager.GetString("RRR_LevelName_74", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies can&apos;t slide.
        /// </summary>
        public static string RRR_LevelName_75 {
            get {
                return ResourceManager.GetString("RRR_LevelName_75", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies can&apos;t herd.
        /// </summary>
        public static string RRR_LevelName_76 {
            get {
                return ResourceManager.GetString("RRR_LevelName_76", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies are not ostriches.
        /// </summary>
        public static string RRR_LevelName_77 {
            get {
                return ResourceManager.GetString("RRR_LevelName_77", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies just wanna have fun.
        /// </summary>
        public static string RRR_LevelName_78 {
            get {
                return ResourceManager.GetString("RRR_LevelName_78", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies love disco dancing.
        /// </summary>
        public static string RRR_LevelName_79 {
            get {
                return ResourceManager.GetString("RRR_LevelName_79", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t rest in peace.
        /// </summary>
        public static string RRR_LevelName_8 {
            get {
                return ResourceManager.GetString("RRR_LevelName_8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies get a kick out of Hip-Hop.
        /// </summary>
        public static string RRR_LevelName_80 {
            get {
                return ResourceManager.GetString("RRR_LevelName_80", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunninos dansa la Bamba.
        /// </summary>
        public static string RRR_LevelName_81 {
            get {
                return ResourceManager.GetString("RRR_LevelName_81", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deep down, Bunnies are rockers.
        /// </summary>
        public static string RRR_LevelName_82 {
            get {
                return ResourceManager.GetString("RRR_LevelName_82", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies are raving mad.
        /// </summary>
        public static string RRR_LevelName_83 {
            get {
                return ResourceManager.GetString("RRR_LevelName_83", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies are fantastic dancers Part 2.
        /// </summary>
        public static string RRR_LevelName_84 {
            get {
                return ResourceManager.GetString("RRR_LevelName_84", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies love disco dancing Part 2.
        /// </summary>
        public static string RRR_LevelName_85 {
            get {
                return ResourceManager.GetString("RRR_LevelName_85", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies just wanna have fun Part 2.
        /// </summary>
        public static string RRR_LevelName_86 {
            get {
                return ResourceManager.GetString("RRR_LevelName_86", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies get a kick out of Hip-Hop Part 2.
        /// </summary>
        public static string RRR_LevelName_87 {
            get {
                return ResourceManager.GetString("RRR_LevelName_87", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunninos dansa la Bamba Part 2.
        /// </summary>
        public static string RRR_LevelName_88 {
            get {
                return ResourceManager.GetString("RRR_LevelName_88", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deep down, Bunnies are rockers Part 2.
        /// </summary>
        public static string RRR_LevelName_89 {
            get {
                return ResourceManager.GetString("RRR_LevelName_89", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies sometimes recycle the scenery from other games.
        /// </summary>
        public static string RRR_LevelName_9 {
            get {
                return ResourceManager.GetString("RRR_LevelName_9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t like being disturbed on holiday.
        /// </summary>
        public static string RRR_LevelName_90 {
            get {
                return ResourceManager.GetString("RRR_LevelName_90", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t like being disturbed at night.
        /// </summary>
        public static string RRR_LevelName_91 {
            get {
                return ResourceManager.GetString("RRR_LevelName_91", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies helped tame the Wild West.
        /// </summary>
        public static string RRR_LevelName_92 {
            get {
                return ResourceManager.GetString("RRR_LevelName_92", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies have a soft spot for plungers.
        /// </summary>
        public static string RRR_LevelName_93 {
            get {
                return ResourceManager.GetString("RRR_LevelName_93", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies never struck gold.
        /// </summary>
        public static string RRR_LevelName_94 {
            get {
                return ResourceManager.GetString("RRR_LevelName_94", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies think they&apos;re in a movie.
        /// </summary>
        public static string RRR_LevelName_95 {
            get {
                return ResourceManager.GetString("RRR_LevelName_95", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies love digging tunnels.
        /// </summary>
        public static string RRR_LevelName_96 {
            get {
                return ResourceManager.GetString("RRR_LevelName_96", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies aren&apos;t scared of the dark.
        /// </summary>
        public static string RRR_LevelName_97 {
            get {
                return ResourceManager.GetString("RRR_LevelName_97", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies don&apos;t rest in peace.
        /// </summary>
        public static string RRR_LevelName_98 {
            get {
                return ResourceManager.GetString("RRR_LevelName_98", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bunnies sometimes recycle the scenery from other games.
        /// </summary>
        public static string RRR_LevelName_99 {
            get {
                return ResourceManager.GetString("RRR_LevelName_99", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save.
        /// </summary>
        public static string Save {
            get {
                return ResourceManager.GetString("Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You just entered the Konami code! Enjoy this red new theme..
        /// </summary>
        public static string SecretCodes_Konami {
            get {
                return ResourceManager.GetString("SecretCodes_Konami", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Konami Code.
        /// </summary>
        public static string SecretCodes_KonamiHeader {
            get {
                return ResourceManager.GetString("SecretCodes_KonamiHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You just entered the lime code! Enjoy this lime theme..
        /// </summary>
        public static string SecretCodes_Lime {
            get {
                return ResourceManager.GetString("SecretCodes_Lime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lime Code.
        /// </summary>
        public static string SecretCodes_LimeHeader {
            get {
                return ResourceManager.GetString("SecretCodes_LimeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You just entered the RayCarrot code! Enjoy this orange, carrot theme..
        /// </summary>
        public static string SecretCodes_RayCarrot {
            get {
                return ResourceManager.GetString("SecretCodes_RayCarrot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RayCarrot Code.
        /// </summary>
        public static string SecretCodes_RayCarrotHeader {
            get {
                return ResourceManager.GetString("SecretCodes_RayCarrotHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You just entered the secret code! Sadly enough it doesn&apos;t do anything..
        /// </summary>
        public static string SecretCodes_Secret {
            get {
                return ResourceManager.GetString("SecretCodes_Secret", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Secret Code.
        /// </summary>
        public static string SecretCodes_SecretHeader {
            get {
                return ResourceManager.GetString("SecretCodes_SecretHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disabled.
        /// </summary>
        public static string SettingDisabled {
            get {
                return ResourceManager.GetString("SettingDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabled.
        /// </summary>
        public static string SettingEnabled {
            get {
                return ResourceManager.GetString("SettingEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This feature requires the program to run as administrator.
        /// </summary>
        public static string Settings_AdminInfo {
            get {
                return ResourceManager.GetString("Settings_AdminInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically synchronize textures on repack (.cnt).
        /// </summary>
        public static string Settings_ArchiveCNTSyncOnRepack {
            get {
                return ResourceManager.GetString("Settings_ArchiveCNTSyncOnRepack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled the textures for the game will be automatically synchronized when a .cnt archive is repacked. This is useful for games where synchronizing is required to import higher resolution textures..
        /// </summary>
        public static string Settings_ArchiveCNTSyncOnRepackInfo {
            get {
                return ResourceManager.GetString("Settings_ArchiveCNTSyncOnRepackInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert to 32-bit on import (.gf).
        /// </summary>
        public static string Settings_ArchiveGFForce8888 {
            get {
                return ResourceManager.GetString("Settings_ArchiveGFForce8888", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates if the .gf file should be converted to 24/32-bit on import for highest possible quality.
        /// </summary>
        public static string Settings_ArchiveGFForce8888Info {
            get {
                return ResourceManager.GetString("Settings_ArchiveGFForce8888Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically generate mipmaps (.gf).
        /// </summary>
        public static string Settings_ArchiveGFGenerateMipmaps {
            get {
                return ResourceManager.GetString("Settings_ArchiveGFGenerateMipmaps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically generate mipmaps for supported games when importing to .gf files.
        /// </summary>
        public static string Settings_ArchiveGFGenerateMipmapsInfo {
            get {
                return ResourceManager.GetString("Settings_ArchiveGFGenerateMipmapsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically update format (.gf).
        /// </summary>
        public static string Settings_ArchiveGFTransparency {
            get {
                return ResourceManager.GetString("Settings_ArchiveGFTransparency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Never (preserve original format).
        /// </summary>
        public static string Settings_ArchiveGFTransparency_PreserveFormat {
            get {
                return ResourceManager.GetString("Settings_ArchiveGFTransparency_PreserveFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The original format will always be preserved. Importing an ARGB image to a .gf file which doesn&apos;t support transparency will result in the alpha channel getting lost..
        /// </summary>
        public static string Settings_ArchiveGFTransparency_PreserveFormatInfo {
            get {
                return ResourceManager.GetString("Settings_ArchiveGFTransparency_PreserveFormatInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Match imported format.
        /// </summary>
        public static string Settings_ArchiveGFTransparency_UpdateBasedOnPixelFormat {
            get {
                return ResourceManager.GetString("Settings_ArchiveGFTransparency_UpdateBasedOnPixelFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Match imported format if required.
        /// </summary>
        public static string Settings_ArchiveGFTransparency_UpdateBasedOnPixelFormatIfUtilized {
            get {
                return ResourceManager.GetString("Settings_ArchiveGFTransparency_UpdateBasedOnPixelFormatIfUtilized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The format will be updated to match that of the imported file if the current format doesn&apos;t support the data. For example if an ARGB image is being imported to a .gf file which doesn&apos;t support transparency it will only update the format to support it if the imported image utilizes the alpha channel. This setting is recommended to avoid changing formats when not necessary, however it will slow down the file importing..
        /// </summary>
        public static string Settings_ArchiveGFTransparency_UpdateBasedOnPixelFormatIfUtilizedInfo {
            get {
                return ResourceManager.GetString("Settings_ArchiveGFTransparency_UpdateBasedOnPixelFormatIfUtilizedInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The format will be updated to match that of the imported file. This might result in the .gf files taking more space than actually required..
        /// </summary>
        public static string Settings_ArchiveGFTransparency_UpdateBasedOnPixelFormatInfo {
            get {
                return ResourceManager.GetString("Settings_ArchiveGFTransparency_UpdateBasedOnPixelFormatInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Backup location.
        /// </summary>
        public static string Settings_BackupLocation {
            get {
                return ResourceManager.GetString("Settings_BackupLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug.
        /// </summary>
        public static string Settings_DebugHeader {
            get {
                return ResourceManager.GetString("Settings_DebugHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable animations.
        /// </summary>
        public static string Settings_DesignAnimations {
            get {
                return ResourceManager.GetString("Settings_DesignAnimations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Animations include page transitions and resizing animations for the Games page.
        /// </summary>
        public static string Settings_DesignAnimationsInfo {
            get {
                return ResourceManager.GetString("Settings_DesignAnimationsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dark.
        /// </summary>
        public static string Settings_DesignDark {
            get {
                return ResourceManager.GetString("Settings_DesignDark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Design.
        /// </summary>
        public static string Settings_DesignHeader {
            get {
                return ResourceManager.GetString("Settings_DesignHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Light.
        /// </summary>
        public static string Settings_DesignLight {
            get {
                return ResourceManager.GetString("Settings_DesignLight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show progress on task bar icon.
        /// </summary>
        public static string Settings_DesignShowTaskBarProgress {
            get {
                return ResourceManager.GetString("Settings_DesignShowTaskBarProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show download progress on the taskbar icon.
        /// </summary>
        public static string Settings_DesignShowTaskBarProgressInfo {
            get {
                return ResourceManager.GetString("Settings_DesignShowTaskBarProgressInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show success messages.
        /// </summary>
        public static string Settings_DesignSuccessMessages {
            get {
                return ResourceManager.GetString("Settings_DesignSuccessMessages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show a message when an operation has succeeded.
        /// </summary>
        public static string Settings_DesignSuccessMessagesInfo {
            get {
                return ResourceManager.GetString("Settings_DesignSuccessMessagesInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable downgrade warning.
        /// </summary>
        public static string Settings_DisableDowngradeWarning {
            get {
                return ResourceManager.GetString("Settings_DisableDowngradeWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable game validation.
        /// </summary>
        public static string Settings_DisableGameValidation {
            get {
                return ResourceManager.GetString("Settings_DisableGameValidation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit jump list.
        /// </summary>
        public static string Settings_EditJumpList {
            get {
                return ResourceManager.GetString("Settings_EditJumpList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The jump list is the list of game shortcuts which appears when right-clicking the app in the taskbar or start menu.
        /// </summary>
        public static string Settings_EditJumpListInfo {
            get {
                return ResourceManager.GetString("Settings_EditJumpListInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Force manual updates.
        /// </summary>
        public static string Settings_ForceUpdates {
            get {
                return ResourceManager.GetString("Settings_ForceUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close application when launching a game.
        /// </summary>
        public static string Settings_GeneralCloseOnLaunch {
            get {
                return ResourceManager.GetString("Settings_GeneralCloseOnLaunch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close configuration dialog when saving.
        /// </summary>
        public static string Settings_GeneralCloseOnSave {
            get {
                return ResourceManager.GetString("Settings_GeneralCloseOnSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General.
        /// </summary>
        public static string Settings_GeneralHeader {
            get {
                return ResourceManager.GetString("Settings_GeneralHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get beta updates.
        /// </summary>
        public static string Settings_GetBetaUpdates {
            get {
                return ResourceManager.GetString("Settings_GetBetaUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show languages with incomplete translations.
        /// </summary>
        public static string Settings_IncompleteTranslations {
            get {
                return ResourceManager.GetString("Settings_IncompleteTranslations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        public static string Settings_Language {
            get {
                return ResourceManager.GetString("Settings_Language", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contribute with translations.
        /// </summary>
        public static string Settings_LanguageContribute {
            get {
                return ResourceManager.GetString("Settings_LanguageContribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Handle downloads manually.
        /// </summary>
        public static string Settings_ManualDownloads {
            get {
                return ResourceManager.GetString("Settings_ManualDownloads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only use this option if downloads aren&apos;t working.
        /// </summary>
        public static string Settings_ManualDownloadsInfo {
            get {
                return ResourceManager.GetString("Settings_ManualDownloadsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open game patch (.gp) files in Rayman Control Panel from File Explorer.
        /// </summary>
        public static string Settings_PatcherAssociatePatchFileType {
            get {
                return ResourceManager.GetString("Settings_PatcherAssociatePatchFileType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open game patch (.gp) files in Rayman Control Panel from URI protocol.
        /// </summary>
        public static string Settings_PatcherAssociatePatchURIProtocol {
            get {
                return ResourceManager.GetString("Settings_PatcherAssociatePatchURIProtocol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabling this allows for 1-click installation support from GameBanana.
        /// </summary>
        public static string Settings_PatcherAssociatePatchURIProtocolInfo {
            get {
                return ResourceManager.GetString("Settings_PatcherAssociatePatchURIProtocolInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Associations.
        /// </summary>
        public static string Settings_PatcherFileAssociationsHeader {
            get {
                return ResourceManager.GetString("Settings_PatcherFileAssociationsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show external patches.
        /// </summary>
        public static string Settings_PatcherShowExternal {
            get {
                return ResourceManager.GetString("Settings_PatcherShowExternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled then the patcher will load and show a list of external patches available for download.
        /// </summary>
        public static string Settings_PatcherShowExternalInfo {
            get {
                return ResourceManager.GetString("Settings_PatcherShowExternalInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset.
        /// </summary>
        public static string Settings_ResetAppData {
            get {
                return ResourceManager.GetString("Settings_ResetAppData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Serialization Log.
        /// </summary>
        public static string Settings_SerializationLog {
            get {
                return ResourceManager.GetString("Settings_SerializationLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabling the log will have any binary serialization action, such as using the Archive Explorer or viewing game progression, log to the specified log file. This is primarily for debugging, but can also be useful for viewing the data structure of certain formats..
        /// </summary>
        public static string Settings_SerializationLogInfo {
            get {
                return ResourceManager.GetString("Settings_SerializationLogInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search for installed games.
        /// </summary>
        public static string Settings_StartupGameFinder {
            get {
                return ResourceManager.GetString("Settings_StartupGameFinder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Startup.
        /// </summary>
        public static string Settings_StartupHeader {
            get {
                return ResourceManager.GetString("Settings_StartupHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check for program updates.
        /// </summary>
        public static string Settings_StartupUpdateCheck {
            get {
                return ResourceManager.GetString("Settings_StartupUpdateCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sync theme.
        /// </summary>
        public static string Settings_SyncTheme {
            get {
                return ResourceManager.GetString("Settings_SyncTheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, the application theme (accent color and dark/light mode) will sync with the system settings on Windows 10/11.
        /// </summary>
        public static string Settings_SyncThemeInfo {
            get {
                return ResourceManager.GetString("Settings_SyncThemeInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show windows as popups.
        /// </summary>
        public static string Settings_UseChildWindows {
            get {
                return ResourceManager.GetString("Settings_UseChildWindows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabling this will show windows, such as the game options window or message dialogs, as popups within in the main window. Disabling this will show them as separate windows..
        /// </summary>
        public static string Settings_UseChildWindowsInfo {
            get {
                return ResourceManager.GetString("Settings_UseChildWindowsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Level.
        /// </summary>
        public static string Settings_UserLevel {
            get {
                return ResourceManager.GetString("Settings_UserLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advanced.
        /// </summary>
        public static string Settings_UserLevelAdvanced {
            get {
                return ResourceManager.GetString("Settings_UserLevelAdvanced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advanced user level - for users who want more advanced features above the default ones, but without the technical details.
        /// </summary>
        public static string Settings_UserLevelAdvancedInfo {
            get {
                return ResourceManager.GetString("Settings_UserLevelAdvancedInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug.
        /// </summary>
        public static string Settings_UserLevelDebug {
            get {
                return ResourceManager.GetString("Settings_UserLevelDebug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Debug user level - for app developers and testers who want advanced debug options and information.
        /// </summary>
        public static string Settings_UserLevelDebugInfo {
            get {
                return ResourceManager.GetString("Settings_UserLevelDebugInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user level determines which options and information is available in the application. The higher the user level, the more advanced options and information will be shown..
        /// </summary>
        public static string Settings_UserLevelInfo {
            get {
                return ResourceManager.GetString("Settings_UserLevelInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Normal.
        /// </summary>
        public static string Settings_UserLevelNormal {
            get {
                return ResourceManager.GetString("Settings_UserLevelNormal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Normal user level - for users who want all the default features without any of the more advanced options or technical details.
        /// </summary>
        public static string Settings_UserLevelNormalInfo {
            get {
                return ResourceManager.GetString("Settings_UserLevelNormalInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Technical.
        /// </summary>
        public static string Settings_UserLevelTechnical {
            get {
                return ResourceManager.GetString("Settings_UserLevelTechnical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Technical user level - for users who want more advanced features above the default ones as well as the technical details.
        /// </summary>
        public static string Settings_UserLevelTechnicalInfo {
            get {
                return ResourceManager.GetString("Settings_UserLevelTechnicalInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string SettingsPageHeader {
            get {
                return ResourceManager.GetString("SettingsPageHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Rayman version could not be updated.
        /// </summary>
        public static string TPLS_UpdateVersionError {
            get {
                return ResourceManager.GetString("TPLS_UpdateVersionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when attempting to enable write access for the Rayman configuration file.
        /// </summary>
        public static string UbiIniWriteAccess_Error {
            get {
                return ResourceManager.GetString("UbiIniWriteAccess_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To be able to configure the Rayman games without running this program as administrator you will need to accept the following admin prompt.
        /// </summary>
        public static string UbiIniWriteAccess_InfoMessage {
            get {
                return ResourceManager.GetString("UbiIniWriteAccess_InfoMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when uninstalling {0}.
        /// </summary>
        public static string UninstallGameError {
            get {
                return ResourceManager.GetString("UninstallGameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstallation Failed.
        /// </summary>
        public static string UninstallGameErrorHeader {
            get {
                return ResourceManager.GetString("UninstallGameErrorHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to uninstall {0}? This will remove the game from your computer, including the save data. Backups will not be removed..
        /// </summary>
        public static string UninstallGameQuestion {
            get {
                return ResourceManager.GetString("UninstallGameQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm Uninstall.
        /// </summary>
        public static string UninstallGameQuestionHeader {
            get {
                return ResourceManager.GetString("UninstallGameQuestionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} was uninstalled.
        /// </summary>
        public static string UninstallGameSuccess {
            get {
                return ResourceManager.GetString("UninstallGameSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstallation complete.
        /// </summary>
        public static string UninstallGameSuccessHeader {
            get {
                return ResourceManager.GetString("UninstallGameSuccessHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are unsaved changes. Do you want to continue and discard them?.
        /// </summary>
        public static string UnsavedChangesQuestion {
            get {
                return ResourceManager.GetString("UnsavedChangesQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm discarding changes.
        /// </summary>
        public static string UnsavedChangesQuestionHeader {
            get {
                return ResourceManager.GetString("UnsavedChangesQuestionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A new beta update is available to download. Download now?
        ///
        ///Current version: {0}
        ///Latest version: {1}
        ///
        ///News: 
        ///{2}.
        /// </summary>
        public static string Update_BetaUpdateAvailable {
            get {
                return ResourceManager.GetString("Update_BetaUpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The update check failed. {0}
        ///To manually update the app, go to {1} and download the latest version..
        /// </summary>
        public static string Update_CheckFailed {
            get {
                return ResourceManager.GetString("Update_CheckFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when updating the application.
        /// </summary>
        public static string Update_Error {
            get {
                return ResourceManager.GetString("Update_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Check Failed.
        /// </summary>
        public static string Update_ErrorHeader {
            get {
                return ResourceManager.GetString("Update_ErrorHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The information from the server was not valid.
        /// </summary>
        public static string Update_FormatError {
            get {
                return ResourceManager.GetString("Update_FormatError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unknown error occurred while connecting to the server.
        /// </summary>
        public static string Update_GenericError {
            get {
                return ResourceManager.GetString("Update_GenericError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The latest version ({0}) is already installed.
        /// </summary>
        public static string Update_LatestInstalled {
            get {
                return ResourceManager.GetString("Update_LatestInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No new versions found.
        /// </summary>
        public static string Update_LatestInstalledHeader {
            get {
                return ResourceManager.GetString("Update_LatestInstalledHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server manifest could not be read.
        /// </summary>
        public static string Update_ManifestError {
            get {
                return ResourceManager.GetString("Update_ManifestError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error getting news.
        /// </summary>
        public static string Update_NewsError {
            get {
                return ResourceManager.GetString("Update_NewsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The updater could not be launched. To manually download the new version, go to {0} and download the latest version from there..
        /// </summary>
        public static string Update_RunningUpdaterError {
            get {
                return ResourceManager.GetString("Update_RunningUpdaterError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error running updater.
        /// </summary>
        public static string Update_RunningUpdaterErrorHeader {
            get {
                return ResourceManager.GetString("Update_RunningUpdaterErrorHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown error.
        /// </summary>
        public static string Update_UnknownError {
            get {
                return ResourceManager.GetString("Update_UnknownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A new update is available to download. Download now?
        ///
        ///Current version: {0}
        ///Latest version: {1}
        ///
        ///News: 
        ///{2}.
        /// </summary>
        public static string Update_UpdateAvailable {
            get {
                return ResourceManager.GetString("Update_UpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New version found.
        /// </summary>
        public static string Update_UpdateAvailableHeader {
            get {
                return ResourceManager.GetString("Update_UpdateAvailableHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The updater could not be created. To manually download the new version, go to {0} and download the latest version from there..
        /// </summary>
        public static string Update_UpdaterError {
            get {
                return ResourceManager.GetString("Update_UpdaterError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error creating updater.
        /// </summary>
        public static string Update_UpdaterErrorHeader {
            get {
                return ResourceManager.GetString("Update_UpdaterErrorHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A connection could not be established to the server.
        /// </summary>
        public static string Update_WebError {
            get {
                return ResourceManager.GetString("Update_WebError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CPA Archives (.cnt).
        /// </summary>
        public static string Utilities_ArchiveExplorer_CNTHeader {
            get {
                return ResourceManager.GetString("Utilities_ArchiveExplorer_CNTHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create.
        /// </summary>
        public static string Utilities_ArchiveExplorer_Create {
            get {
                return ResourceManager.GetString("Utilities_ArchiveExplorer_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select archive files.
        /// </summary>
        public static string Utilities_ArchiveExplorer_FileSelectionHeader {
            get {
                return ResourceManager.GetString("Utilities_ArchiveExplorer_FileSelectionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Archive Explorer.
        /// </summary>
        public static string Utilities_ArchiveExplorer_Header {
            get {
                return ResourceManager.GetString("Utilities_ArchiveExplorer_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UbiArt Archives (.ipk).
        /// </summary>
        public static string Utilities_ArchiveExplorer_IPKHeader {
            get {
                return ResourceManager.GetString("Utilities_ArchiveExplorer_IPKHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open.
        /// </summary>
        public static string Utilities_ArchiveExplorer_Open {
            get {
                return ResourceManager.GetString("Utilities_ArchiveExplorer_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman 1 PC Archives (.dat).
        /// </summary>
        public static string Utilities_ArchiveExplorer_R1Header {
            get {
                return ResourceManager.GetString("Utilities_ArchiveExplorer_R1Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Binary Tools.
        /// </summary>
        public static string Utilities_BinaryTools_Header {
            get {
                return ResourceManager.GetString("Utilities_BinaryTools_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert.
        /// </summary>
        public static string Utilities_Converter_Convert {
            get {
                return ResourceManager.GetString("Utilities_Converter_Convert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert back.
        /// </summary>
        public static string Utilities_Converter_ConvertBack {
            get {
                return ResourceManager.GetString("Utilities_Converter_ConvertBack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file(s) could not be converted.
        /// </summary>
        public static string Utilities_Converter_Error {
            get {
                return ResourceManager.GetString("Utilities_Converter_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select file extension to export as.
        /// </summary>
        public static string Utilities_Converter_ExportExtensionHeader {
            get {
                return ResourceManager.GetString("Utilities_Converter_ExportExtensionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select files to convert.
        /// </summary>
        public static string Utilities_Converter_FileSelectionHeader {
            get {
                return ResourceManager.GetString("Utilities_Converter_FileSelectionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CPA Texture Files (.gf).
        /// </summary>
        public static string Utilities_Converter_GFHeader {
            get {
                return ResourceManager.GetString("Utilities_Converter_GFHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Converters.
        /// </summary>
        public static string Utilities_Converter_Header {
            get {
                return ResourceManager.GetString("Utilities_Converter_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UbiArt Localization Files (.loc/.loc8).
        /// </summary>
        public static string Utilities_Converter_LOCHeader {
            get {
                return ResourceManager.GetString("Utilities_Converter_LOCHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman 1 Config Files (.cfg).
        /// </summary>
        public static string Utilities_Converter_R1ConfigHeader {
            get {
                return ResourceManager.GetString("Utilities_Converter_R1ConfigHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman 1 Save Files (.sav).
        /// </summary>
        public static string Utilities_Converter_R1SaveHeader {
            get {
                return ResourceManager.GetString("Utilities_Converter_R1SaveHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman 2 Config Files (.cfg).
        /// </summary>
        public static string Utilities_Converter_R2ConfigHeader {
            get {
                return ResourceManager.GetString("Utilities_Converter_R2ConfigHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman 2 Save Files (.sav).
        /// </summary>
        public static string Utilities_Converter_R2SaveHeader {
            get {
                return ResourceManager.GetString("Utilities_Converter_R2SaveHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman 3 Save Files (.sav).
        /// </summary>
        public static string Utilities_Converter_R3SaveHeader {
            get {
                return ResourceManager.GetString("Utilities_Converter_R3SaveHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman Jungle Run Save Files (.dat).
        /// </summary>
        public static string Utilities_Converter_RJRSaveHeader {
            get {
                return ResourceManager.GetString("Utilities_Converter_RJRSaveHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman Legends Save Files.
        /// </summary>
        public static string Utilities_Converter_RLSaveHeader {
            get {
                return ResourceManager.GetString("Utilities_Converter_RLSaveHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman M/Arena Save Files (.sav).
        /// </summary>
        public static string Utilities_Converter_RMSaveHeader {
            get {
                return ResourceManager.GetString("Utilities_Converter_RMSaveHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman Origins Save Files.
        /// </summary>
        public static string Utilities_Converter_ROSaveHeader {
            get {
                return ResourceManager.GetString("Utilities_Converter_ROSaveHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select format to convert back to.
        /// </summary>
        public static string Utilities_Converter_SelectConvertBackFormat {
            get {
                return ResourceManager.GetString("Utilities_Converter_SelectConvertBackFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The files were successfully converted.
        /// </summary>
        public static string Utilities_Converter_Success {
            get {
                return ResourceManager.GetString("Utilities_Converter_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decode.
        /// </summary>
        public static string Utilities_Decoder_Decode {
            get {
                return ResourceManager.GetString("Utilities_Decoder_Decode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when decoding the files.
        /// </summary>
        public static string Utilities_Decoder_DecodeError {
            get {
                return ResourceManager.GetString("Utilities_Decoder_DecodeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select files to decode.
        /// </summary>
        public static string Utilities_Decoder_DecodeFileSelectionHeader {
            get {
                return ResourceManager.GetString("Utilities_Decoder_DecodeFileSelectionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The files were successfully decoded.
        /// </summary>
        public static string Utilities_Decoder_DecodeSuccess {
            get {
                return ResourceManager.GetString("Utilities_Decoder_DecodeSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encode.
        /// </summary>
        public static string Utilities_Decoder_Encode {
            get {
                return ResourceManager.GetString("Utilities_Decoder_Encode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when encoding the files.
        /// </summary>
        public static string Utilities_Decoder_EncodeError {
            get {
                return ResourceManager.GetString("Utilities_Decoder_EncodeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select files to encode.
        /// </summary>
        public static string Utilities_Decoder_EncodeFileSelectionHeader {
            get {
                return ResourceManager.GetString("Utilities_Decoder_EncodeFileSelectionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The files were successfully encoded.
        /// </summary>
        public static string Utilities_Decoder_EncodeSuccess {
            get {
                return ResourceManager.GetString("Utilities_Decoder_EncodeSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decoders.
        /// </summary>
        public static string Utilities_Decoder_Header {
            get {
                return ResourceManager.GetString("Utilities_Decoder_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman 1/2 Save Files (.sav/.cfg).
        /// </summary>
        public static string Utilities_Decoder_R12SavHeader {
            get {
                return ResourceManager.GetString("Utilities_Decoder_R12SavHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman 2 Encoded Files (.sna/.dsb).
        /// </summary>
        public static string Utilities_Decoder_R2SnaHeader {
            get {
                return ResourceManager.GetString("Utilities_Decoder_R2SnaHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman 3 Save Files (.sav).
        /// </summary>
        public static string Utilities_Decoder_R3SaveHeader {
            get {
                return ResourceManager.GetString("Utilities_Decoder_R3SaveHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tonic Trouble Encoded Files (.sna/.dsb).
        /// </summary>
        public static string Utilities_Decoder_TTSnaHeader {
            get {
                return ResourceManager.GetString("Utilities_Decoder_TTSnaHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to External Tools.
        /// </summary>
        public static string Utilities_ExternalTools_Header {
            get {
                return ResourceManager.GetString("Utilities_ExternalTools_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Maker DS Map / Rayman Redemption Save File (.txt).
        /// </summary>
        public static string Utilities_Format_GameMakerDSMapHeader {
            get {
                return ResourceManager.GetString("Utilities_Format_GameMakerDSMapHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Patch (.gp).
        /// </summary>
        public static string Utilities_Format_GamePatchHeader {
            get {
                return ResourceManager.GetString("Utilities_Format_GamePatchHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Patch Library (.gpl).
        /// </summary>
        public static string Utilities_Format_GamePatchLibraryHeader {
            get {
                return ResourceManager.GetString("Utilities_Format_GamePatchLibraryHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman Fiesta Run Save File (.dat).
        /// </summary>
        public static string Utilities_Format_RFRSaveHeader {
            get {
                return ResourceManager.GetString("Utilities_Format_RFRSaveHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman Raving Rabbids Save Files (.sav).
        /// </summary>
        public static string Utilities_Format_RRRSaveHeader {
            get {
                return ResourceManager.GetString("Utilities_Format_RRRSaveHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unity Player Preferences / Rabbids Big Bang Save File (.dat).
        /// </summary>
        public static string Utilities_Format_UnityPlayerPrefsHeader {
            get {
                return ResourceManager.GetString("Utilities_Format_UnityPlayerPrefsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The utility is not available.
        /// </summary>
        public static string Utilities_NotAvailable {
            get {
                return ResourceManager.GetString("Utilities_NotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Other.
        /// </summary>
        public static string Utilities_Other_Header {
            get {
                return ResourceManager.GetString("Utilities_Other_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ray1Editor - Rayman 1 Level Editor.
        /// </summary>
        public static string Utilities_R1E_Header {
            get {
                return ResourceManager.GetString("Utilities_R1E_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More info.
        /// </summary>
        public static string Utilities_R1E_Homepage {
            get {
                return ResourceManager.GetString("Utilities_R1E_Homepage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rayman 1 PS1 Password Generator.
        /// </summary>
        public static string Utilities_R1Passwords_Header {
            get {
                return ResourceManager.GetString("Utilities_R1Passwords_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This utility requires the application to run as administrator.
        /// </summary>
        public static string Utilities_RequiresAdmin {
            get {
                return ResourceManager.GetString("Utilities_RequiresAdmin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deserialize to JSON.
        /// </summary>
        public static string Utilities_Serializers_Deserialize {
            get {
                return ResourceManager.GetString("Utilities_Serializers_Deserialize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The files could not be deserialized.
        /// </summary>
        public static string Utilities_Serializers_DeserializeError {
            get {
                return ResourceManager.GetString("Utilities_Serializers_DeserializeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The files were successfully deserialized.
        /// </summary>
        public static string Utilities_Serializers_DeserializeSuccess {
            get {
                return ResourceManager.GetString("Utilities_Serializers_DeserializeSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select files to serialize.
        /// </summary>
        public static string Utilities_Serializers_FileSelectionHeader {
            get {
                return ResourceManager.GetString("Utilities_Serializers_FileSelectionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Serializers.
        /// </summary>
        public static string Utilities_Serializers_Header {
            get {
                return ResourceManager.GetString("Utilities_Serializers_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output as log.
        /// </summary>
        public static string Utilities_Serializers_Log {
            get {
                return ResourceManager.GetString("Utilities_Serializers_Log", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The files could not be logged.
        /// </summary>
        public static string Utilities_Serializers_LogError {
            get {
                return ResourceManager.GetString("Utilities_Serializers_LogError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Serialize from JSON.
        /// </summary>
        public static string Utilities_Serializers_Serialize {
            get {
                return ResourceManager.GetString("Utilities_Serializers_Serialize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The files could not be serialized.
        /// </summary>
        public static string Utilities_Serializers_SerializeError {
            get {
                return ResourceManager.GetString("Utilities_Serializers_SerializeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The files were successfully serialized.
        /// </summary>
        public static string Utilities_Serializers_SerializeSuccess {
            get {
                return ResourceManager.GetString("Utilities_Serializers_SerializeSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when synchronizing the texture info.
        /// </summary>
        public static string Utilities_SyncTextureInfo_Error {
            get {
                return ResourceManager.GetString("Utilities_SyncTextureInfo_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}/{1} texture infos have been synchronized.
        /// </summary>
        public static string Utilities_SyncTextureInfo_Success {
            get {
                return ResourceManager.GetString("Utilities_SyncTextureInfo_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Utilities.
        /// </summary>
        public static string UtilitiesPageHeader {
            get {
                return ResourceManager.GetString("UtilitiesPageHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This utility requires additional files to be downloaded.
        /// </summary>
        public static string Utility_AdditionalFilesRequired {
            get {
                return ResourceManager.GetString("Utility_AdditionalFilesRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply.
        /// </summary>
        public static string Utility_Apply {
            get {
                return ResourceManager.GetString("Utility_Apply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Revert.
        /// </summary>
        public static string Utility_Revert {
            get {
                return ResourceManager.GetString("Utility_Revert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This utility is currently work in process and might be unstable or missing features.
        /// </summary>
        public static string Utility_WIP {
            get {
                return ResourceManager.GetString("Utility_WIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for {0} to close.
        /// </summary>
        public static string WaitForEditorToClose {
            get {
                return ResourceManager.GetString("WaitForEditorToClose", resourceCulture);
            }
        }
    }
}
