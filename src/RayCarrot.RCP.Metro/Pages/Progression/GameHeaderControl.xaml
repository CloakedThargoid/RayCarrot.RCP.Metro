<UserControl x:Class="RayCarrot.RCP.Metro.Pages.Progression.GameHeaderControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:rcp="clr-namespace:RayCarrot.RCP.Metro"
             xmlns:progression="clr-namespace:RayCarrot.RCP.Metro.Pages.Progression"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             mc:Ignorable="d" 
             d:DesignWidth="800"
             d:DataContext="{d:DesignInstance progression:GameViewModel}"
             d:Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}"
             ResxExtension.DefaultResxName="{x:Static rcp:LocalizationManager.ResourcePath}">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" SharedSizeGroup="Title" />
            <ColumnDefinition Width="Auto" SharedSizeGroup="ProgName" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <!-- Title -->
        <ContentPresenter Grid.Column="0"
                          Content="{Binding}"
                          Margin="0 0 4 0">
            <ContentPresenter.Style>
                <Style TargetType="{x:Type ContentPresenter}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsGameGrouped}" Value="True">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate DataType="{x:Type progression:GameViewModel}">
                                        <StackPanel Orientation="Horizontal">

                                            <!-- Platform Icon -->
                                            <Image Source="{Binding Path=PlatformIcon, Mode=OneTime, Converter={rcp:AssetEnumToImageSourceConverter}}"
                                                   d:Source="{x:Static rcp:DesignData.GamePlatformIconSource}"
                                                   VerticalAlignment="Center"
                                                   Width="20"
                                                   Margin="0 0 8 0"
                                                   ToolTip="{Binding Path=PlatformDisplayName.Value}" />

                                            <!-- Title -->
                                            <TextBlock FontSize="14"
                                                       Text="{Binding Path=DisplayName.Value}"
                                                       d:Text="Rayman 2"
                                                       VerticalAlignment="Center"
                                                       HorizontalAlignment="Left"
                                                       TextWrapping="WrapWithOverflow"
                                                       MaxWidth="180" />
                                        </StackPanel>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsGameGrouped}" Value="False">
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate DataType="{x:Type progression:GameViewModel}">
                                        <rcp:GameTitle GameInstallation="{Binding Path=GameInstallation, Mode=OneTime}"
                                                       GameIconSize="Small"
                                                       TextBlock.FontSize="14" 
                                                       MaxWidth="300" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentPresenter.Style>
        </ContentPresenter>

        <TextBlock Grid.Column="1"
                   Margin="0 0 25 0"
                   FontSize="14"
                   FontStyle="Italic"
                   Text="{Binding Path=ProgressionName, Mode=OneTime}"
                   VerticalAlignment="Center" />

        <!-- Primary Data Items -->
        <ItemsControl Grid.Column="2"
                      VerticalAlignment="Center"
                      ItemsSource="{Binding Path=PrimarySlot.PrimaryDataItems}"
                      d:ItemsSource="{d:SampleData ItemCount=3}"
                      Margin="0 0 10 0">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <progression:HorizontalProgressionDataItemControl />
                </DataTemplate>
            </ItemsControl.ItemTemplate>

            <ItemsControl.Style>
                <Style TargetType="{x:Type ItemsControl}" BasedOn="{StaticResource {x:Type ItemsControl}}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsExpanded}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <BeginStoryboard.Storyboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)"
                                                             From="1"
                                                             To="0"
                                                             Duration="0:0:0.22" />
                                        </Storyboard>
                                    </BeginStoryboard.Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <BeginStoryboard.Storyboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)"
                                                             From="0"
                                                             To="1"
                                                             Duration="0:0:0.22" />
                                        </Storyboard>
                                    </BeginStoryboard.Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ItemsControl.Style>
        </ItemsControl>

        <!-- Percentage -->
        <Grid Grid.Column="3"
              Margin="0 0 25 0" 
              Visibility="{Binding Path=IsLoading, Converter={rcp:InvertedBooleanToVisibilityConverter}}">
            <progression:SlotPercentageControl Visibility="{Binding Converter={rcp:InvertedObjectNullToVisibilityConverter}}"
                                               DataContext="{Binding Path=PrimarySlot}"/>
        </Grid>

        <!-- Loading -->
        <Grid Grid.Column="3"
              Visibility="{Binding Path=IsLoading, Converter={rcp:BooleanToVisibilityConverter}}">
            <mah:ProgressRing />
        </Grid>

        <!-- Backup Options -->
        <StackPanel Grid.Column="4"
                    Orientation="Horizontal"
                    VerticalAlignment="Center"
                    IsEnabled="{Binding Path=IsPerformingBackupRestore, Converter={rcp:InvertedBooleanConverter}}"
                    Visibility="{Binding Path=ShowBackupRestoreIndicator, Converter={rcp:InvertedBooleanToVisibilityHiddenConverter}}">
            <Button Style="{StaticResource RCP.Styles.Button.Flat}"
                    ToolTip="{Resx Backup_Backup}"
                    Command="{Binding Path=BackupCommand, Mode=OneTime}"
                    rcp:Icon.Kind="FolderUploadOutline"
                    Visibility="{Binding Path=CanPerformBackup, Converter={rcp:BooleanToVisibilityHiddenConverter}}"
                    Margin="0 0 4 0" />
            <Button Style="{StaticResource RCP.Styles.Button.Flat}"
                    ToolTip="{Resx Backup_Restore}"
                    Command="{Binding Path=RestoreCommand, Mode=OneTime}"
                    Visibility="{Binding Path=CanRestoreBackup, Converter={rcp:BooleanToVisibilityHiddenConverter}}"
                    Margin="0 0 10 0">
                <iconPacks:PackIconMaterial Background="Transparent"
                                            Kind="FolderDownloadOutline"
                                            Width="20"
                                            Height="20" />
            </Button>
        </StackPanel>

        <!-- Backup Loading -->
        <Grid Grid.Column="4"
              Visibility="{Binding Path=ShowBackupRestoreIndicator, Converter={rcp:BooleanToVisibilityHiddenConverter}}"
              Margin="0 0 10 0">
            <mah:ProgressRing />
        </Grid>

        <!-- Backup Status -->
        <Grid Grid.Column="5" 
              VerticalAlignment="Center"
              Width="20">
            <iconPacks:PackIconMaterial Kind="CheckboxMarkedCircle"
                                        Visibility="{Binding Path=CurrentBackupStatus, Converter={rcp:EnumVisibilityConverter}, ConverterParameter={x:Static progression:GameViewModel+BackupStatus.UpToDate}}"
                                        ToolTip="{Resx Progression_BackupStatus_UpToDate}"
                                        Foreground="{StaticResource RCP.Brushes.StatusComplete}"
                                        Width="20"
                                        Height="{Binding Path=Width, RelativeSource={RelativeSource Self}}"/>
            <iconPacks:PackIconMaterial Kind="CloseCircle"
                                        d:Visibility="Collapsed"
                                        Visibility="{Binding Path=CurrentBackupStatus, Converter={rcp:EnumVisibilityConverter}, ConverterParameter={x:Static progression:GameViewModel+BackupStatus.Outdated}}"
                                        ToolTip="{Resx Progression_BackupStatus_Outdated}"
                                        Foreground="{StaticResource RCP.Brushes.StatusIncomplete}"
                                        Width="20"
                                        Height="{Binding Path=Width, RelativeSource={RelativeSource Self}}"/>
            <iconPacks:PackIconMaterial Kind="SyncCircle"
                                        d:Visibility="Collapsed"
                                        Visibility="{Binding Path=CurrentBackupStatus, Converter={rcp:EnumVisibilityConverter}, ConverterParameter={x:Static progression:GameViewModel+BackupStatus.Syncing}}"
                                        Foreground="{StaticResource RCP.Brushes.StatusPending}"
                                        Width="20"
                                        Height="{Binding Path=Width, RelativeSource={RelativeSource Self}}"/>
        </Grid>

    </Grid>

</UserControl>