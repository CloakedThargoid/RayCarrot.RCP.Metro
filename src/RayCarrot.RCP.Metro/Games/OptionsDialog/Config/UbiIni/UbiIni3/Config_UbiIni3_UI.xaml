<UserControl x:Class="RayCarrot.RCP.Metro.Config_UbiIni3_UI"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ubiIni="clr-namespace:RayCarrot.Rayman.UbiIni;assembly=RayCarrot.Rayman"
             xmlns:local="clr-namespace:RayCarrot.RCP.Metro"
             ResxExtension.DefaultResxName="{x:Static local:LocalizationManager.ResourcePath}"
             IsTabStop="False"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance local:Config_Rayman3_ViewModel}">
    <StackPanel>
        <i:Interaction.Behaviors>
            <local:UnifiedMarginBehavior Margin="{StaticResource Thickness.Vertical}" />
        </i:Interaction.Behaviors>

        <TextBlock Style="{StaticResource TextBlock.Header}"
                   Text="{Resx Config_Resolution}" />

        <local:ResolutionSelection DataContext="{Binding Path=Resolution, Mode=OneTime}"/>

        <CheckBox Content="{Resx Config_Fullscreen}"
                  ToolTip="{Resx Config_FullscreenInfo}"
                  IsChecked="{Binding Path=FullscreenMode}" />

        <TextBlock Style="{StaticResource TextBlock.Header}"
                   Text="{Resx Config_Graphics}" />

        <CheckBox Content="{Resx Config_TriLinear}"
                  IsChecked="{Binding Path=TriLinear}" />

        <CheckBox Content="{Resx Config_TnL}"
                  ToolTip="{Resx Config_TnLInfo}"
                  IsChecked="{Binding Path=TnL}" />

        <Grid local:UserLevelAssist.MinUserLevel="Advanced"
              local:UnifiedMargin.Ignored="True">
            <CheckBox Content="{Resx Config_DynamicShadows}"
                      IsChecked="{Binding Path=DynamicShadows}"
                      Visibility="{Binding Path=HasShadowConfig, Converter={local:BooleanToVisibilityConverter}}"
                      Margin="0 8" />
        </Grid>

        <Grid local:UserLevelAssist.MinUserLevel="Advanced"
              local:UnifiedMargin.Ignored="True">
            <CheckBox Content="{Resx Config_StaticShadows}"
                      IsChecked="{Binding Path=StaticShadows}"
                      Visibility="{Binding Path=HasShadowConfig, Converter={local:BooleanToVisibilityConverter}}"
                      Margin="0 8" />
        </Grid>

        <TextBlock Style="{StaticResource TextBlock.Header}"
                   Text="{Resx Config_Textures}" />

        <StackPanel Orientation="Horizontal">
            <RadioButton Content="{Resx Config_Textures16}"
                         Margin="0 0 10 0"
                         IsChecked="{Binding Path=IsTextures32Bit, Converter={local:InvertedBooleanConverter}}" />
            <RadioButton Content="{Resx Config_Textures32}"
                         IsChecked="{Binding Path=IsTextures32Bit}" />
        </StackPanel>

        <CheckBox Content="{Resx Config_Compressed}"
                  IsChecked="{Binding Path=CompressedTextures}" />

        <TextBlock Style="{StaticResource TextBlock.Header}"
                   Text="{Resx Config_Video}" />

        <StackPanel>

            <Slider Maximum="4"
                    Value="{Binding Path=VideoQuality}"
                    TickPlacement="BottomRight"
                    IsSnapToTickEnabled="True"
                    Width="200"
                    HorizontalAlignment="Left" />

            <Grid Width="200" HorizontalAlignment="Left">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0"
                           Text="{Resx Config_VideoGood}"
                           TextWrapping="WrapWithOverflow" />

                <TextBlock Grid.Column="1"
                           Text="{Resx Config_VideoBad}"
                           TextWrapping="WrapWithOverflow"
                           HorizontalAlignment="Right" />

            </Grid>

        </StackPanel>

        <CheckBox Content="{Resx Config_VideoAuto}"
                  IsChecked="{Binding Path=AutoVideoQuality}" />

        <StackPanel Orientation="Horizontal">

            <RadioButton Content="{Resx Config_Video16Bpp}"
                         Margin="0 0 10 0"
                         IsChecked="{Binding Path=IsVideo32Bpp, Converter={local:InvertedBooleanConverter}}" />

            <RadioButton Content="{Resx Config_Video32Bpp}"
                         IsChecked="{Binding Path=IsVideo32Bpp}" />

        </StackPanel>

        <TextBlock Style="{StaticResource TextBlock.Header}"
                   Text="{Resx Config_Language}" />

        <ComboBox SelectedIndex="{Binding Path=CurrentLanguage, Converter={local:EnumToIntConverter}}"
                  HorizontalAlignment="Left">
            <ComboBox.ItemContainerStyle>
                <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                    <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
                    <Setter Property="Visibility"
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=Content.Visibility}" />
                </Style>
            </ComboBox.ItemContainerStyle>
            <TextBlock Text="{Resx Lang_English}" />
            <TextBlock Text="{Resx Lang_French}" />
            <TextBlock Text="{Resx Lang_Spanish}" />
            <TextBlock Text="{Resx Lang_German}"
                       Visibility="{Binding Path=CurrentLanguage, Converter={local:IsNotTypeToVisibilityConverter}, ConverterParameter={x:Type ubiIni:RALanguages}}" />
            <TextBlock Text="{Resx Lang_Italian}"
                       Visibility="{Binding Path=CurrentLanguage, Converter={local:IsNotTypeToVisibilityConverter}, ConverterParameter={x:Type ubiIni:RALanguages}}" />
            <TextBlock Text="{Resx Lang_Danish}"
                       Visibility="{Binding Path=CurrentLanguage, Converter={local:IsTypeToVisibilityConverter}, ConverterParameter={x:Type ubiIni:RMLanguages}}" />
            <TextBlock Text="{Resx Lang_Finnish}"
                       Visibility="{Binding Path=CurrentLanguage, Converter={local:IsTypeToVisibilityConverter}, ConverterParameter={x:Type ubiIni:RMLanguages}}" />
            <TextBlock Text="{Resx Lang_Norwegian}"
                       Visibility="{Binding Path=CurrentLanguage, Converter={local:IsTypeToVisibilityConverter}, ConverterParameter={x:Type ubiIni:RMLanguages}}" />
            <TextBlock Text="{Resx Lang_Swedish}"
                       Visibility="{Binding Path=CurrentLanguage, Converter={local:IsTypeToVisibilityConverter}, ConverterParameter={x:Type ubiIni:RMLanguages}}" />
        </ComboBox>

        <StackPanel Orientation="Horizontal">

            <TextBlock Style="{StaticResource TextBlock.Header}"
                       Text="{Resx Config_Controller}" />

            <local:InfoIcon Text="{Resx Config_ControllerInfo}" />

        </StackPanel>

        <StackPanel Orientation="Horizontal">

            <local:AdminButton
                Visibility="{Binding Path=CanModifyGame, Converter={local:InvertedBooleanToVisibilityConverter}, Mode=OneTime}"
                Margin="0 0 5 0" />

            <CheckBox Content="{Resx Config_EnableNativeController}"
                      IsChecked="{Binding Path=ControllerSupport}"
                      IsEnabled="{Binding Path=CanModifyGame, Mode=OneTime}" />

        </StackPanel>

        <TextBlock Text="{Resx Config_ControllerVertical}"
                   Visibility="{Binding Path=HasControllerConfig, Converter={local:BooleanToVisibilityConverter}}" />

        <Slider Minimum="2"
                Maximum="7"
                Value="{Binding Path=VerticalAxis}"
                TickPlacement="BottomRight"
                IsSnapToTickEnabled="True"
                Width="200"
                HorizontalAlignment="Left"
                Visibility="{Binding Path=HasControllerConfig, Converter={local:BooleanToVisibilityConverter}}" />

        <TextBlock Text="{Resx Config_ControllerHorizontal}"
                   Visibility="{Binding Path=HasControllerConfig, Converter={local:BooleanToVisibilityConverter}}" />

        <Slider Minimum="2"
                Maximum="7"
                Value="{Binding Path=HorizontalAxis}"
                TickPlacement="BottomRight"
                IsSnapToTickEnabled="True"
                Width="200"
                HorizontalAlignment="Left"
                Visibility="{Binding Path=HasControllerConfig, Converter={local:BooleanToVisibilityConverter}}" />

        <TextBlock Style="{StaticResource TextBlock.Header}"
                   Text="{Resx Config_Network}"
                   Visibility="{Binding Path=HasNetworkConfig, Converter={local:BooleanToVisibilityConverter}}" />

        <ComboBox ItemsSource="{Binding Path=ModemQualityOptions, Mode=OneTime}"
                  SelectedIndex="{Binding Path=ModemQualityIndex}"
                  HorizontalAlignment="Left"
                  Visibility="{Binding Path=HasNetworkConfig, Converter={local:BooleanToVisibilityConverter}}" />

        <StackPanel Orientation="Horizontal"
                    Visibility="{Binding Path=CanRemoveDiscCheck, Converter={local:BooleanToVisibilityConverter}}">

            <TextBlock Style="{StaticResource TextBlock.Header}"
                       Text="{Resx Config_DiscCheck}" />

            <local:InfoIcon Text="{Resx Config_DiscCheckInfo}" />

        </StackPanel>

        <StackPanel Orientation="Horizontal"
                    Visibility="{Binding Path=CanRemoveDiscCheck, Converter={local:BooleanToVisibilityConverter}}">

            <local:AdminButton
                Visibility="{Binding Path=CanModifyGame, Converter={local:InvertedBooleanToVisibilityConverter}, Mode=OneTime}"
                Margin="0 0 5 0" />

            <CheckBox Content="{Resx Config_DisableDiscCheck}"
                      IsChecked="{Binding Path=IsDiscCheckRemoved}"
                      IsEnabled="{Binding Path=CanModifyGame, Mode=OneTime}" />

        </StackPanel>

    </StackPanel>
</UserControl>